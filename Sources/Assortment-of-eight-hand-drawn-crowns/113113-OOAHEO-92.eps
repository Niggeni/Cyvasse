%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Crown Collection-2 up-02.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For: Ayib
%%CreationDate: 12/04/17
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: font CooperHewitt-Book
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: CooperHewitt-Book
%%DocumentNeededFonts: CooperHewitt-Book
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                      
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Crown Collection-2 up-02</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2017-04-12T16:11:54+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2017-04-12T16:11:54+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2017-04-12T16:11:54+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9PYEuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KpF5t1LULO0soNPkWC61G9gsluWT1BEshLO4Q7FuCELXapHywhBSVfO17ovr&#xA;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&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:e3bc07da-05a6-42f1-8487-b249598ce84c</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:e3bc07da-05a6-42f1-8487-b249598ce84c</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:cb1875c0-751c-e241-9d79-b237e048c6d9</stRef:instanceID>
            <stRef:documentID>xmp.did:f238ad8f-595f-41ab-9239-4bc2d6b0e13f</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e3bc07da-05a6-42f1-8487-b249598ce84c</stEvt:instanceID>
                  <stEvt:when>2017-04-12T16:11:54+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>CooperHewitt-Book</stFnt:fontName>
                  <stFnt:fontFamily>Cooper Hewitt</stFnt:fontFamily>
                  <stFnt:fontFace>Book</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>1.000</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>CooperHewitt-Book.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0153201 .0126345 .0151369 0 cmyk
f
177.12 460.732 mo
177.12 461.172 177.188 461.545 177.325 461.854 cv
177.461 462.163 177.648 462.395 177.886 462.551 cv
178.123 462.707 178.382 462.787 178.663 462.787 cv
178.948 462.787 179.208 462.712 179.444 462.563 cv
179.679 462.415 179.867 462.187 180.008 461.881 cv
180.148 461.574 180.218 461.19 180.218 460.732 cv
180.218 460.3 180.148 459.929 180.008 459.618 cv
179.867 459.308 179.678 459.071 179.438 458.906 cv
179.198 458.742 178.936 458.661 178.652 458.661 cv
178.355 458.661 178.09 458.745 177.856 458.912 cv
177.622 459.08 177.442 459.321 177.313 459.636 cv
177.184 459.951 177.12 460.316 177.12 460.732 cv
cp
180.308 463.112 mo
180.308 462.951 li
180.09 463.2 179.875 463.404 179.664 463.559 cv
179.452 463.717 179.222 463.835 178.975 463.916 cv
178.728 463.999 178.458 464.038 178.165 464.038 cv
177.777 464.038 177.417 463.956 177.087 463.792 cv
176.757 463.628 176.471 463.393 176.23 463.088 cv
175.988 462.784 175.805 462.426 175.68 462.014 cv
175.556 461.602 175.493 461.157 175.493 460.678 cv
175.493 459.665 175.741 458.875 176.235 458.309 cv
176.73 457.744 177.381 457.461 178.189 457.461 cv
178.655 457.461 179.049 457.541 179.37 457.701 cv
179.69 457.861 180.003 458.109 180.308 458.44 cv
180.308 456.048 li
180.308 455.715 180.374 455.465 180.507 455.294 cv
180.639 455.124 180.828 455.039 181.073 455.039 cv
181.319 455.039 181.507 455.117 181.64 455.273 cv
181.773 455.431 181.839 455.66 181.839 455.965 cv
181.839 463.112 li
181.839 463.421 181.768 463.652 181.625 463.807 cv
181.483 463.961 181.299 464.038 181.073 464.038 cv
180.852 464.038 180.669 463.958 180.524 463.799 cv
180.38 463.637 180.308 463.409 180.308 463.112 cv
cp
.779202 .591241 .502647 .329534 cmyk
f
184.284 460.222 mo
187.223 460.222 li
187.184 459.668 187.033 459.253 186.774 458.978 cv
186.515 458.702 186.174 458.565 185.751 458.565 cv
185.347 458.565 185.015 458.705 184.756 458.983 cv
184.497 459.262 184.34 459.675 184.284 460.222 cv
cp
187.454 461.142 mo
184.284 461.142 li
184.288 461.51 184.362 461.834 184.507 462.115 cv
184.651 462.396 184.843 462.608 185.083 462.75 cv
185.322 462.893 185.586 462.964 185.875 462.964 cv
186.069 462.964 186.246 462.942 186.406 462.896 cv
186.567 462.85 186.722 462.779 186.873 462.682 cv
187.023 462.585 187.161 462.481 187.288 462.37 cv
187.414 462.259 187.578 462.108 187.781 461.919 cv
187.864 461.848 187.983 461.811 188.137 461.811 cv
188.303 461.811 188.438 461.858 188.54 461.949 cv
188.643 462.041 188.695 462.168 188.695 462.335 cv
188.695 462.481 188.637 462.651 188.523 462.848 cv
188.407 463.044 188.234 463.232 188.003 463.412 cv
187.771 463.592 187.481 463.741 187.13 463.86 cv
186.781 463.979 186.378 464.038 185.922 464.038 cv
184.882 464.038 184.072 463.741 183.495 463.148 cv
182.917 462.555 182.628 461.749 182.628 460.732 cv
182.628 460.252 182.699 459.808 182.842 459.399 cv
182.984 458.989 183.192 458.639 183.465 458.346 cv
183.738 458.053 184.074 457.828 184.474 457.672 cv
184.874 457.516 185.317 457.437 185.804 457.437 cv
186.437 457.437 186.98 457.57 187.433 457.838 cv
187.886 458.105 188.226 458.451 188.451 458.873 cv
188.676 459.297 188.79 459.729 188.79 460.167 cv
188.79 460.576 188.673 460.84 188.44 460.96 cv
188.207 461.081 187.878 461.142 187.454 461.142 cv
cp
f
194.838 461.919 mo
194.838 462.365 194.73 462.749 194.512 463.067 cv
194.294 463.386 193.973 463.628 193.547 463.792 cv
193.122 463.956 192.604 464.038 191.995 464.038 cv
191.413 464.038 190.914 463.949 190.499 463.77 cv
190.083 463.593 189.776 463.37 189.579 463.104 cv
189.381 462.835 189.282 462.568 189.282 462.298 cv
189.282 462.12 189.345 461.969 189.472 461.842 cv
189.599 461.716 189.759 461.653 189.953 461.653 cv
190.123 461.653 190.253 461.694 190.344 461.777 cv
190.436 461.86 190.523 461.977 190.605 462.126 cv
190.772 462.417 190.971 462.63 191.203 462.774 cv
191.434 462.916 191.749 462.988 192.149 462.988 cv
192.474 462.988 192.74 462.915 192.948 462.771 cv
193.155 462.625 193.259 462.461 193.259 462.275 cv
193.259 461.989 193.152 461.783 192.936 461.653 cv
192.72 461.522 192.365 461.396 191.87 461.278 cv
191.312 461.14 190.858 460.993 190.508 460.841 cv
190.157 460.689 189.877 460.488 189.668 460.239 cv
189.458 459.99 189.353 459.682 189.353 459.319 cv
189.353 458.995 189.45 458.687 189.644 458.398 cv
189.838 458.11 190.124 457.879 190.502 457.707 cv
190.88 457.535 191.336 457.448 191.87 457.448 cv
192.29 457.448 192.667 457.492 193.001 457.58 cv
193.335 457.666 193.615 457.784 193.838 457.931 cv
194.062 458.076 194.232 458.238 194.348 458.416 cv
194.465 458.595 194.523 458.768 194.523 458.939 cv
194.523 459.124 194.461 459.277 194.337 459.397 cv
194.212 459.514 194.035 459.575 193.805 459.575 cv
193.639 459.575 193.497 459.527 193.381 459.431 cv
193.264 459.337 193.131 459.194 192.98 459.005 cv
192.857 458.846 192.714 458.719 192.547 458.624 cv
192.381 458.529 192.155 458.482 191.87 458.482 cv
191.577 458.482 191.334 458.543 191.14 458.669 cv
190.946 458.794 190.849 458.949 190.849 459.134 cv
190.849 459.305 190.92 459.444 191.062 459.553 cv
191.205 459.663 191.397 459.753 191.639 459.824 cv
191.88 459.895 192.212 459.981 192.636 460.084 cv
193.138 460.207 193.549 460.354 193.868 460.523 cv
194.186 460.693 194.427 460.894 194.592 461.126 cv
194.756 461.358 194.838 461.622 194.838 461.919 cv
cp
f
197.295 458.369 mo
197.295 463.053 li
197.295 463.377 197.218 463.623 197.064 463.789 cv
196.909 463.955 196.714 464.038 196.476 464.038 cv
196.238 464.038 196.045 463.954 195.897 463.783 cv
195.748 463.613 195.675 463.369 195.675 463.053 cv
195.675 458.416 li
195.675 458.097 195.748 457.855 195.897 457.693 cv
196.045 457.53 196.238 457.448 196.476 457.448 cv
196.714 457.448 196.909 457.53 197.064 457.693 cv
197.218 457.855 197.295 458.081 197.295 458.369 cv
cp
196.494 456.695 mo
196.268 456.695 196.075 456.626 195.915 456.488 cv
195.755 456.35 195.675 456.153 195.675 455.899 cv
195.675 455.67 195.757 455.482 195.921 455.333 cv
196.085 455.184 196.276 455.11 196.494 455.11 cv
196.704 455.11 196.889 455.177 197.052 455.312 cv
197.214 455.446 197.295 455.642 197.295 455.899 cv
197.295 456.15 197.216 456.344 197.057 456.484 cv
196.899 456.624 196.711 456.695 196.494 456.695 cv
cp
f
199.699 460.691 mo
199.699 461.347 199.842 461.844 200.129 462.18 cv
200.416 462.517 200.787 462.685 201.242 462.685 cv
201.511 462.685 201.765 462.612 202.005 462.468 cv
202.244 462.324 202.439 462.105 202.59 461.815 cv
202.74 461.524 202.815 461.172 202.815 460.755 cv
202.815 460.095 202.67 459.58 202.379 459.212 cv
202.088 458.845 201.705 458.661 201.23 458.661 cv
200.767 458.661 200.396 458.836 200.117 459.189 cv
199.838 459.541 199.699 460.041 199.699 460.691 cv
cp
204.395 458.636 mo
204.395 463.343 li
204.395 463.882 204.337 464.345 204.222 464.734 cv
204.108 465.121 203.923 465.442 203.67 465.694 cv
203.417 465.947 203.085 466.136 202.676 466.258 cv
202.266 466.382 201.757 466.443 201.147 466.443 cv
200.589 466.443 200.09 466.364 199.651 466.208 cv
199.212 466.051 198.874 465.849 198.636 465.603 cv
198.399 465.355 198.28 465.101 198.28 464.84 cv
198.28 464.642 198.347 464.48 198.482 464.356 cv
198.616 464.231 198.779 464.168 198.968 464.168 cv
199.206 464.168 199.414 464.273 199.592 464.483 cv
199.678 464.59 199.768 464.698 199.862 464.807 cv
199.955 464.917 200.058 465.009 200.17 465.086 cv
200.283 465.163 200.419 465.221 200.577 465.258 cv
200.735 465.295 200.918 465.315 201.123 465.315 cv
201.543 465.315 201.868 465.256 202.1 465.139 cv
202.332 465.023 202.494 464.859 202.587 464.649 cv
202.68 464.441 202.734 464.216 202.75 463.976 cv
202.766 463.736 202.778 463.352 202.785 462.821 cv
202.536 463.17 202.249 463.435 201.922 463.617 cv
201.595 463.799 201.206 463.89 200.755 463.89 cv
200.213 463.89 199.739 463.751 199.333 463.474 cv
198.928 463.197 198.616 462.81 198.399 462.31 cv
198.181 461.811 198.073 461.236 198.073 460.583 cv
198.073 460.097 198.139 459.657 198.271 459.266 cv
198.404 458.873 198.593 458.543 198.838 458.274 cv
199.083 458.005 199.366 457.802 199.687 457.666 cv
200.007 457.529 200.359 457.461 200.744 457.461 cv
201.202 457.461 201.6 457.55 201.937 457.724 cv
202.273 457.901 202.586 458.177 202.875 458.553 cv
202.875 458.333 li
202.875 458.053 202.944 457.835 203.082 457.68 cv
203.221 457.527 203.399 457.448 203.617 457.448 cv
203.929 457.448 204.137 457.551 204.24 457.755 cv
204.343 457.959 204.395 458.253 204.395 458.636 cv
cp
f
206.97 458.346 mo
206.97 458.541 li
207.254 458.165 207.566 457.889 207.905 457.713 cv
208.243 457.538 208.632 457.448 209.071 457.448 cv
209.499 457.448 209.88 457.542 210.217 457.728 cv
210.553 457.915 210.805 458.177 210.971 458.517 cv
211.078 458.716 211.147 458.929 211.178 459.159 cv
211.21 459.388 211.227 459.681 211.227 460.038 cv
211.227 463.053 li
211.227 463.377 211.152 463.623 211.004 463.789 cv
210.855 463.955 210.662 464.038 210.425 464.038 cv
210.183 464.038 209.988 463.954 209.837 463.783 cv
209.686 463.613 209.612 463.369 209.612 463.053 cv
209.612 460.351 li
209.612 459.818 209.537 459.409 209.389 459.126 cv
209.24 458.844 208.945 458.701 208.501 458.701 cv
208.213 458.701 207.949 458.788 207.712 458.96 cv
207.474 459.132 207.3 459.369 207.189 459.669 cv
207.11 459.911 207.071 460.361 207.071 461.023 cv
207.071 463.053 li
207.071 463.381 206.994 463.628 206.842 463.792 cv
206.69 463.956 206.493 464.038 206.252 464.038 cv
206.018 464.038 205.827 463.954 205.676 463.783 cv
205.526 463.613 205.45 463.369 205.45 463.053 cv
205.45 458.369 li
205.45 458.06 205.517 457.829 205.652 457.677 cv
205.787 457.525 205.971 457.448 206.204 457.448 cv
206.347 457.448 206.475 457.483 206.59 457.55 cv
206.705 457.618 206.797 457.718 206.866 457.852 cv
206.936 457.987 206.97 458.152 206.97 458.346 cv
cp
f
213.659 460.222 mo
216.598 460.222 li
216.558 459.668 216.409 459.253 216.15 458.978 cv
215.89 458.702 215.549 458.565 215.126 458.565 cv
214.722 458.565 214.39 458.705 214.131 458.983 cv
213.872 459.262 213.715 459.675 213.659 460.222 cv
cp
216.829 461.142 mo
213.659 461.142 li
213.664 461.51 213.737 461.834 213.882 462.115 cv
214.027 462.396 214.218 462.608 214.458 462.75 cv
214.697 462.893 214.961 462.964 215.25 462.964 cv
215.444 462.964 215.621 462.942 215.782 462.896 cv
215.942 462.85 216.097 462.779 216.248 462.682 cv
216.398 462.585 216.536 462.481 216.664 462.37 cv
216.79 462.259 216.954 462.108 217.156 461.919 cv
217.239 461.848 217.358 461.811 217.512 461.811 cv
217.678 461.811 217.813 461.858 217.916 461.949 cv
218.019 462.041 218.07 462.168 218.07 462.335 cv
218.07 462.481 218.013 462.651 217.898 462.848 cv
217.783 463.044 217.61 463.232 217.378 463.412 cv
217.146 463.592 216.856 463.741 216.506 463.86 cv
216.156 463.979 215.753 464.038 215.298 464.038 cv
214.257 464.038 213.448 463.741 212.869 463.148 cv
212.292 462.555 212.003 461.749 212.003 460.732 cv
212.003 460.252 212.074 459.808 212.217 459.399 cv
212.359 458.989 212.567 458.639 212.84 458.346 cv
213.113 458.053 213.45 457.828 213.849 457.672 cv
214.249 457.516 214.693 457.437 215.179 457.437 cv
215.812 457.437 216.355 457.57 216.808 457.838 cv
217.261 458.105 217.601 458.451 217.827 458.873 cv
218.052 459.297 218.165 459.729 218.165 460.167 cv
218.165 460.576 218.049 460.84 217.815 460.96 cv
217.582 461.081 217.253 461.142 216.829 461.142 cv
cp
f
220.248 460.732 mo
220.248 461.172 220.316 461.545 220.452 461.854 cv
220.589 462.163 220.776 462.395 221.014 462.551 cv
221.251 462.707 221.51 462.787 221.791 462.787 cv
222.076 462.787 222.337 462.712 222.572 462.563 cv
222.807 462.415 222.995 462.187 223.135 461.881 cv
223.276 461.574 223.346 461.19 223.346 460.732 cv
223.346 460.3 223.276 459.929 223.135 459.618 cv
222.995 459.308 222.805 459.071 222.566 458.906 cv
222.326 458.742 222.064 458.661 221.779 458.661 cv
221.483 458.661 221.217 458.745 220.984 458.912 cv
220.751 459.08 220.569 459.321 220.44 459.636 cv
220.312 459.951 220.248 460.316 220.248 460.732 cv
cp
223.435 463.112 mo
223.435 462.951 li
223.218 463.2 223.003 463.404 222.791 463.559 cv
222.579 463.717 222.35 463.835 222.103 463.916 cv
221.856 463.999 221.586 464.038 221.293 464.038 cv
220.904 464.038 220.545 463.956 220.215 463.792 cv
219.885 463.628 219.599 463.393 219.357 463.088 cv
219.116 462.784 218.933 462.426 218.808 462.014 cv
218.684 461.602 218.621 461.157 218.621 460.678 cv
218.621 459.665 218.869 458.875 219.363 458.309 cv
219.858 457.744 220.509 457.461 221.316 457.461 cv
221.783 457.461 222.177 457.541 222.498 457.701 cv
222.818 457.861 223.131 458.109 223.435 458.44 cv
223.435 456.048 li
223.435 455.715 223.502 455.465 223.634 455.294 cv
223.767 455.124 223.956 455.039 224.201 455.039 cv
224.447 455.039 224.635 455.117 224.768 455.273 cv
224.901 455.431 224.967 455.66 224.967 455.965 cv
224.967 463.112 li
224.967 463.421 224.896 463.652 224.754 463.807 cv
224.611 463.961 224.427 464.038 224.201 464.038 cv
223.98 464.038 223.797 463.958 223.652 463.799 cv
223.508 463.637 223.435 463.409 223.435 463.112 cv
cp
f
230.136 460.78 mo
230.136 461.424 230.284 461.92 230.578 462.265 cv
230.873 462.612 231.26 462.787 231.739 462.787 cv
232.146 462.787 232.498 462.61 232.792 462.254 cv
233.087 461.9 233.235 461.393 233.235 460.732 cv
233.235 460.305 233.174 459.936 233.051 459.627 cv
232.928 459.319 232.754 459.08 232.529 458.912 cv
232.303 458.745 232.04 458.661 231.739 458.661 cv
231.43 458.661 231.155 458.745 230.914 458.912 cv
230.672 459.08 230.483 459.323 230.344 459.642 cv
230.206 459.961 230.136 460.34 230.136 460.78 cv
cp
230.059 455.965 mo
230.059 458.44 li
230.364 458.123 230.674 457.881 230.991 457.713 cv
231.307 457.545 231.7 457.461 232.167 457.461 cv
232.705 457.461 233.176 457.589 233.583 457.843 cv
233.988 458.099 234.302 458.469 234.526 458.954 cv
234.75 459.438 234.862 460.013 234.862 460.678 cv
234.862 461.169 234.799 461.618 234.675 462.028 cv
234.55 462.439 234.369 462.794 234.132 463.094 cv
233.894 463.394 233.606 463.628 233.268 463.792 cv
232.929 463.956 232.556 464.038 232.149 464.038 cv
231.899 464.038 231.665 464.008 231.445 463.949 cv
231.225 463.89 231.038 463.812 230.884 463.714 cv
230.73 463.618 230.599 463.518 230.49 463.415 cv
230.381 463.313 230.237 463.158 230.059 462.951 cv
230.059 463.112 li
230.059 463.416 229.986 463.647 229.839 463.805 cv
229.693 463.961 229.507 464.038 229.281 464.038 cv
229.052 464.038 228.869 463.961 228.732 463.805 cv
228.596 463.647 228.528 463.416 228.528 463.112 cv
228.528 456.036 li
228.528 455.708 228.594 455.459 228.726 455.291 cv
228.859 455.123 229.044 455.039 229.281 455.039 cv
229.531 455.039 229.723 455.119 229.857 455.279 cv
229.992 455.44 230.059 455.667 230.059 455.965 cv
cp
f
236.963 464.24 mo
237.111 463.878 li
235.116 458.856 li
234.994 458.568 234.932 458.357 234.932 458.226 cv
234.932 458.088 234.968 457.96 235.039 457.841 cv
235.111 457.722 235.208 457.627 235.333 457.556 cv
235.458 457.484 235.587 457.448 235.722 457.448 cv
235.955 457.448 236.131 457.523 236.25 457.672 cv
236.369 457.82 236.474 458.032 236.565 458.309 cv
237.936 462.298 li
239.236 458.589 li
239.339 458.288 239.432 458.053 239.515 457.882 cv
239.598 457.712 239.686 457.597 239.779 457.539 cv
239.872 457.479 240.004 457.448 240.174 457.448 cv
240.297 457.448 240.415 457.481 240.527 457.547 cv
240.64 457.612 240.727 457.7 240.788 457.811 cv
240.849 457.922 240.881 458.038 240.881 458.161 cv
240.864 458.236 240.839 458.343 240.803 458.482 cv
240.767 458.62 240.724 458.762 240.673 458.903 cv
238.56 464.436 li
238.377 464.923 238.199 465.304 238.025 465.581 cv
237.851 465.858 237.621 466.071 237.333 466.219 cv
237.046 466.368 236.66 466.443 236.173 466.443 cv
235.698 466.443 235.342 466.391 235.105 466.289 cv
234.867 466.185 234.749 465.997 234.749 465.724 cv
234.749 465.538 234.805 465.394 234.918 465.294 cv
235.03 465.193 235.198 465.141 235.419 465.141 cv
235.506 465.141 235.592 465.153 235.675 465.178 cv
235.777 465.201 235.866 465.213 235.941 465.213 cv
236.127 465.213 236.274 465.186 236.381 465.13 cv
236.488 465.075 236.583 464.979 236.669 464.842 cv
236.754 464.707 236.852 464.505 236.963 464.24 cv
cp
f
260.439 457.589 mo
260.826 457.589 li
260.826 457.103 li
260.826 456.594 260.888 456.192 261.018 455.892 cv
261.145 455.593 261.365 455.376 261.672 455.239 cv
261.979 455.103 262.398 455.035 262.932 455.035 cv
263.882 455.035 264.353 455.265 264.353 455.731 cv
264.353 455.88 264.303 456.009 264.203 456.115 cv
264.106 456.222 263.988 456.275 263.854 456.275 cv
263.791 456.275 263.68 456.264 263.524 456.239 cv
263.376 456.218 263.242 456.203 263.135 456.203 cv
262.843 456.203 262.656 456.291 262.569 456.463 cv
262.49 456.635 262.447 456.881 262.447 457.203 cv
262.447 457.589 li
262.843 457.589 li
263.462 457.589 263.768 457.774 263.768 458.149 cv
263.768 458.41 263.689 458.58 263.523 458.652 cv
263.359 458.723 263.133 458.758 262.843 458.758 cv
262.447 458.758 li
262.447 463.053 li
262.447 463.372 262.372 463.615 262.217 463.783 cv
262.065 463.954 261.87 464.037 261.627 464.037 cv
261.398 464.037 261.208 463.954 261.053 463.783 cv
260.901 463.615 260.826 463.372 260.826 463.053 cv
260.826 458.758 li
260.379 458.758 li
260.137 458.758 259.953 458.706 259.822 458.595 cv
259.691 458.488 259.625 458.346 259.625 458.171 cv
259.625 457.782 259.896 457.589 260.439 457.589 cv
f
265.746 461.698 mo
265.746 463.053 li
265.746 463.38 265.663 463.628 265.511 463.79 cv
265.357 463.956 265.162 464.037 264.925 464.037 cv
264.687 464.037 264.496 463.955 264.347 463.786 cv
264.199 463.622 264.121 463.376 264.121 463.053 cv
264.121 458.538 li
264.121 457.81 264.383 457.446 264.909 457.446 cv
265.18 457.446 265.373 457.53 265.493 457.701 cv
265.611 457.872 265.677 458.122 265.691 458.455 cv
265.884 458.122 266.081 457.872 266.284 457.701 cv
266.492 457.53 266.76 457.446 267.102 457.446 cv
267.445 457.446 267.772 457.53 268.093 457.701 cv
268.415 457.872 268.575 458.099 268.575 458.379 cv
268.575 458.575 268.506 458.741 268.371 458.867 cv
268.233 458.997 268.087 459.062 267.93 459.062 cv
267.867 459.062 267.723 459.023 267.497 458.95 cv
267.269 458.879 267.066 458.841 266.896 458.841 cv
266.658 458.841 266.462 458.906 266.313 459.028 cv
266.162 459.156 266.044 459.338 265.961 459.582 cv
265.88 459.829 265.824 460.123 265.79 460.46 cv
265.759 460.798 265.746 461.212 265.746 461.698 cv
f
270.024 460.218 mo
272.962 460.218 li
272.923 459.665 272.777 459.25 272.517 458.977 cv
272.256 458.701 271.918 458.564 271.492 458.564 cv
271.087 458.564 270.755 458.702 270.497 458.983 cv
270.238 459.261 270.079 459.673 270.024 460.218 cv
273.196 461.14 mo
270.024 461.14 li
270.03 461.507 270.102 461.834 270.246 462.114 cv
270.393 462.393 270.583 462.606 270.824 462.75 cv
271.064 462.892 271.327 462.962 271.617 462.962 cv
271.811 462.962 271.987 462.942 272.148 462.893 cv
272.307 462.849 272.463 462.777 272.613 462.679 cv
272.765 462.584 272.901 462.48 273.028 462.367 cv
273.155 462.258 273.32 462.107 273.523 461.917 cv
273.607 461.847 273.725 461.809 273.878 461.809 cv
274.045 461.809 274.178 461.855 274.283 461.948 cv
274.387 462.039 274.436 462.166 274.436 462.334 cv
274.436 462.48 274.38 462.651 274.269 462.845 cv
274.151 463.044 273.979 463.231 273.746 463.412 cv
273.512 463.59 273.221 463.741 272.872 463.858 cv
272.523 463.977 272.119 464.037 271.665 464.037 cv
270.621 464.037 269.813 463.741 269.236 463.148 cv
268.658 462.553 268.367 461.747 268.367 460.731 cv
268.367 460.251 268.44 459.807 268.584 459.397 cv
268.724 458.985 268.932 458.636 269.208 458.342 cv
269.48 458.048 269.814 457.824 270.216 457.668 cv
270.614 457.512 271.057 457.434 271.545 457.434 cv
272.178 457.434 272.721 457.568 273.175 457.838 cv
273.627 458.101 273.971 458.448 274.193 458.872 cv
274.419 459.297 274.531 459.726 274.531 460.168 cv
274.531 460.573 274.414 460.837 274.181 460.959 cv
273.948 461.08 273.619 461.14 273.196 461.14 cv
f
276.767 460.218 mo
279.706 460.218 li
279.665 459.665 279.515 459.25 279.259 458.977 cv
278.995 458.701 278.657 458.564 278.232 458.564 cv
277.828 458.564 277.497 458.702 277.236 458.983 cv
276.979 459.261 276.82 459.673 276.767 460.218 cv
279.938 461.14 mo
276.767 461.14 li
276.771 461.507 276.846 461.834 276.988 462.114 cv
277.134 462.393 277.325 462.606 277.565 462.75 cv
277.804 462.892 278.067 462.962 278.359 462.962 cv
278.551 462.962 278.729 462.942 278.887 462.893 cv
279.049 462.849 279.203 462.777 279.355 462.679 cv
279.507 462.584 279.643 462.48 279.77 462.367 cv
279.895 462.258 280.061 462.107 280.263 461.917 cv
280.348 461.847 280.467 461.809 280.619 461.809 cv
280.786 461.809 280.92 461.855 281.025 461.948 cv
281.128 462.039 281.175 462.166 281.175 462.334 cv
281.175 462.48 281.12 462.651 281.004 462.845 cv
280.893 463.044 280.72 463.231 280.486 463.412 cv
280.254 463.59 279.961 463.741 279.613 463.858 cv
279.265 463.977 278.858 464.037 278.404 464.037 cv
277.362 464.037 276.555 463.741 275.975 463.148 cv
275.398 462.553 275.107 461.747 275.107 460.731 cv
275.107 460.251 275.179 459.807 275.325 459.397 cv
275.466 458.985 275.674 458.636 275.947 458.342 cv
276.219 458.048 276.555 457.824 276.955 457.668 cv
277.355 457.512 277.8 457.434 278.286 457.434 cv
278.917 457.434 279.46 457.568 279.919 457.838 cv
280.37 458.101 280.71 458.448 280.932 458.872 cv
281.157 459.297 281.273 459.726 281.273 460.168 cv
281.273 460.573 281.153 460.837 280.923 460.959 cv
280.688 461.08 280.36 461.14 279.938 461.14 cv
f
286.665 460.713 mo
286.665 460.284 286.599 459.917 286.468 459.61 cv
286.338 459.303 286.157 459.068 285.928 458.906 cv
285.698 458.741 285.438 458.658 285.157 458.658 cv
284.711 458.658 284.333 458.835 284.027 459.185 cv
283.719 459.539 283.564 460.057 283.564 460.743 cv
283.564 461.385 283.717 461.889 284.024 462.247 cv
284.328 462.606 284.703 462.784 285.157 462.784 cv
285.425 462.784 285.676 462.705 285.906 462.551 cv
286.138 462.393 286.321 462.159 286.457 461.847 cv
286.595 461.533 286.665 461.154 286.665 460.713 cv
283.487 458.358 mo
283.487 458.552 li
283.791 458.176 284.109 457.9 284.441 457.724 cv
284.764 457.546 285.139 457.457 285.554 457.457 cv
286.051 457.457 286.513 457.588 286.933 457.843 cv
287.353 458.101 287.683 458.477 287.927 458.972 cv
288.17 459.469 288.293 460.053 288.293 460.731 cv
288.293 461.228 288.222 461.688 288.083 462.107 cv
287.943 462.524 287.748 462.873 287.502 463.156 cv
287.257 463.437 286.968 463.657 286.634 463.809 cv
286.295 463.961 285.94 464.037 285.554 464.037 cv
285.093 464.037 284.702 463.944 284.388 463.757 cv
284.075 463.575 283.774 463.299 283.487 462.942 cv
283.487 465.374 li
283.487 466.084 283.227 466.443 282.71 466.443 cv
282.403 466.443 282.204 466.351 282.103 466.168 cv
282.008 465.981 281.957 465.716 281.957 465.361 cv
281.957 458.365 li
281.957 458.056 282.024 457.828 282.157 457.673 cv
282.291 457.524 282.477 457.446 282.71 457.446 cv
282.94 457.446 283.126 457.524 283.27 457.679 cv
283.417 457.838 283.487 458.061 283.487 458.358 cv
f
290.727 458.365 mo
290.727 463.054 li
290.727 463.376 290.65 463.622 290.497 463.786 cv
290.34 463.955 290.146 464.037 289.908 464.037 cv
289.67 464.037 289.48 463.954 289.328 463.783 cv
289.182 463.611 289.106 463.368 289.106 463.054 cv
289.106 458.412 li
289.106 458.093 289.182 457.852 289.328 457.69 cv
289.48 457.525 289.67 457.446 289.908 457.446 cv
290.146 457.446 290.34 457.525 290.497 457.69 cv
290.65 457.852 290.727 458.08 290.727 458.365 cv
289.925 456.692 mo
289.698 456.692 289.507 456.62 289.348 456.482 cv
289.186 456.342 289.106 456.15 289.106 455.897 cv
289.106 455.666 289.188 455.478 289.354 455.328 cv
289.518 455.182 289.708 455.106 289.925 455.106 cv
290.138 455.106 290.322 455.172 290.483 455.305 cv
290.646 455.442 290.727 455.639 290.727 455.897 cv
290.727 456.146 290.648 456.341 290.492 456.482 cv
290.333 456.62 290.145 456.692 289.925 456.692 cv
f
295.952 463.297 mo
294.525 460.943 li
293.645 461.773 li
293.645 463.065 li
293.645 463.376 293.562 463.615 293.397 463.783 cv
293.236 463.954 293.043 464.037 292.831 464.037 cv
292.582 464.037 292.384 463.955 292.242 463.786 cv
292.101 463.622 292.027 463.376 292.027 463.053 cv
292.027 456.139 li
292.027 455.78 292.099 455.506 292.235 455.317 cv
292.374 455.127 292.575 455.035 292.831 455.035 cv
293.08 455.035 293.276 455.121 293.424 455.291 cv
293.57 455.461 293.645 455.713 293.645 456.043 cv
293.645 459.976 li
295.467 458.062 li
295.693 457.827 295.863 457.662 295.984 457.575 cv
296.102 457.489 296.246 457.446 296.415 457.446 cv
296.618 457.446 296.786 457.511 296.925 457.639 cv
297.057 457.767 297.125 457.929 297.125 458.122 cv
297.125 458.359 296.904 458.678 296.466 459.073 cv
295.605 459.862 li
297.267 462.476 li
297.388 462.672 297.479 462.816 297.532 462.917 cv
297.584 463.017 297.613 463.117 297.613 463.206 cv
297.613 463.464 297.541 463.665 297.4 463.816 cv
297.259 463.963 297.073 464.037 296.847 464.037 cv
296.649 464.037 296.494 463.986 296.388 463.877 cv
296.282 463.769 296.134 463.575 295.952 463.297 cv
f
299.475 464.037 mo
299.23 464.037 299.02 463.958 298.841 463.799 cv
298.663 463.643 298.573 463.42 298.573 463.133 cv
298.573 462.893 298.659 462.684 298.829 462.512 cv
299.001 462.337 299.209 462.249 299.459 462.249 cv
299.708 462.249 299.919 462.337 300.099 462.507 cv
300.273 462.679 300.362 462.89 300.362 463.133 cv
300.362 463.416 300.273 463.639 300.099 463.796 cv
299.919 463.958 299.712 464.037 299.475 464.037 cv
f
307.536 462.031 mo
307.536 462.231 307.475 462.448 307.355 462.677 cv
307.235 462.909 307.049 463.126 306.8 463.333 cv
306.554 463.541 306.244 463.709 305.867 463.835 cv
305.491 463.962 305.066 464.027 304.597 464.027 cv
303.594 464.027 302.811 463.734 302.248 463.152 cv
301.689 462.567 301.407 461.783 301.407 460.802 cv
301.407 460.134 301.535 459.548 301.794 459.037 cv
302.049 458.528 302.422 458.132 302.908 457.852 cv
303.395 457.573 303.981 457.434 304.654 457.434 cv
305.075 457.434 305.459 457.495 305.812 457.618 cv
306.162 457.74 306.457 457.9 306.703 458.093 cv
306.944 458.289 307.131 458.495 307.258 458.713 cv
307.388 458.933 307.451 459.138 307.451 459.33 cv
307.451 459.522 307.38 459.687 307.236 459.821 cv
307.09 459.956 306.914 460.024 306.712 460.024 cv
306.576 460.024 306.463 459.989 306.374 459.92 cv
306.284 459.851 306.184 459.74 306.075 459.582 cv
305.876 459.283 305.671 459.056 305.453 458.907 cv
305.238 458.756 304.964 458.681 304.631 458.681 cv
304.155 458.681 303.767 458.867 303.473 459.242 cv
303.181 459.614 303.033 460.129 303.033 460.776 cv
303.033 461.081 303.072 461.363 303.148 461.618 cv
303.221 461.872 303.33 462.091 303.473 462.27 cv
303.617 462.45 303.788 462.586 303.989 462.679 cv
304.192 462.776 304.415 462.821 304.654 462.821 cv
304.98 462.821 305.259 462.745 305.489 462.595 cv
305.725 462.445 305.929 462.215 306.106 461.906 cv
306.205 461.725 306.311 461.583 306.424 461.479 cv
306.538 461.377 306.68 461.323 306.847 461.323 cv
307.044 461.323 307.209 461.4 307.337 461.55 cv
307.469 461.7 307.536 461.861 307.536 462.031 cv
f
312.903 460.743 mo
312.903 460.081 312.756 459.568 312.467 459.2 cv
312.178 458.828 311.786 458.645 311.295 458.645 cv
310.978 458.645 310.698 458.728 310.456 458.891 cv
310.215 459.055 310.03 459.297 309.9 459.619 cv
309.769 459.94 309.703 460.315 309.703 460.743 cv
309.703 461.167 309.767 461.535 309.896 461.851 cv
310.027 462.17 310.21 462.412 310.45 462.58 cv
310.691 462.746 310.971 462.833 311.295 462.833 cv
311.786 462.833 312.178 462.647 312.467 462.275 cv
312.756 461.906 312.903 461.394 312.903 460.743 cv
314.53 460.743 mo
314.53 461.224 314.454 461.671 314.308 462.08 cv
314.154 462.487 313.938 462.838 313.652 463.128 cv
313.368 463.421 313.026 463.646 312.632 463.803 cv
312.232 463.958 311.788 464.038 311.295 464.038 cv
310.804 464.038 310.362 463.958 309.969 463.799 cv
309.58 463.643 309.238 463.415 308.954 463.122 cv
308.666 462.824 308.448 462.476 308.296 462.075 cv
308.153 461.672 308.077 461.228 308.077 460.743 cv
308.077 460.251 308.154 459.802 308.301 459.394 cv
308.452 458.985 308.669 458.636 308.95 458.348 cv
309.232 458.06 309.571 457.838 309.969 457.679 cv
310.372 457.524 310.813 457.446 311.295 457.446 cv
311.786 457.446 312.231 457.524 312.632 457.684 cv
313.031 457.841 313.371 458.069 313.659 458.359 cv
313.945 458.656 314.161 459.002 314.309 459.404 cv
314.455 459.81 314.53 460.254 314.53 460.743 cv
f
320.713 460.861 mo
320.713 463.016 li
320.713 463.358 320.637 463.611 320.482 463.783 cv
320.326 463.954 320.124 464.038 319.87 464.038 cv
319.625 464.038 319.425 463.954 319.276 463.783 cv
319.122 463.611 319.044 463.358 319.044 463.016 cv
319.044 460.434 li
319.044 460.025 319.031 459.708 319.004 459.481 cv
318.976 459.26 318.899 459.072 318.778 458.929 cv
318.655 458.783 318.459 458.709 318.196 458.709 cv
317.665 458.709 317.317 458.891 317.148 459.26 cv
316.981 459.62 316.894 460.144 316.894 460.827 cv
316.894 463.016 li
316.894 463.352 316.817 463.607 316.669 463.78 cv
316.512 463.951 316.313 464.038 316.065 464.038 cv
315.818 464.038 315.617 463.951 315.461 463.78 cv
315.304 463.607 315.226 463.352 315.226 463.016 cv
315.226 458.379 li
315.226 458.073 315.295 457.841 315.436 457.684 cv
315.578 457.524 315.764 457.446 315.991 457.446 cv
316.214 457.446 316.399 457.523 316.549 457.668 cv
316.697 457.817 316.77 458.022 316.77 458.283 cv
316.77 458.436 li
317.053 458.101 317.355 457.854 317.673 457.699 cv
317.995 457.536 318.349 457.457 318.744 457.457 cv
319.15 457.457 319.501 457.539 319.792 457.701 cv
320.085 457.863 320.326 458.11 320.517 458.436 cv
320.792 458.106 321.085 457.86 321.399 457.699 cv
321.711 457.538 322.057 457.457 322.438 457.457 cv
322.878 457.457 323.263 457.546 323.584 457.719 cv
323.902 457.893 324.142 458.144 324.3 458.466 cv
324.438 458.762 324.507 459.222 324.507 459.852 cv
324.507 463.016 li
324.507 463.358 324.431 463.611 324.277 463.783 cv
324.123 463.954 323.918 464.038 323.666 464.038 cv
323.419 464.038 323.219 463.951 323.063 463.78 cv
322.906 463.607 322.827 463.352 322.827 463.016 cv
322.827 460.29 li
322.827 459.941 322.812 459.663 322.784 459.454 cv
322.755 459.243 322.673 459.066 322.545 458.924 cv
322.412 458.783 322.213 458.709 321.949 458.709 cv
321.736 458.709 321.533 458.777 321.34 458.902 cv
321.148 459.026 320.998 459.2 320.89 459.41 cv
320.774 459.684 320.713 460.168 320.713 460.861 cv
f
245.272 460.35 mo
245.271 460.348 245.271 460.344 245.271 460.339 cv
245.271 460.344 245.271 460.348 245.272 460.35 cv
cp
f
245.354 460.869 mo
245.355 460.869 245.355 460.869 245.356 460.869 cv
245.325 460.721 245.3 460.575 245.281 460.429 cv
245.3 460.576 245.325 460.722 245.354 460.869 cv
cp
f
245.89 462.373 mo
245.887 462.367 245.884 462.359 245.88 462.352 cv
245.884 462.359 245.887 462.367 245.89 462.373 cv
cp
f
245.839 462.273 mo
245.825 462.245 245.812 462.216 245.798 462.188 cv
245.812 462.218 245.825 462.245 245.839 462.273 cv
cp
f
245.505 461.447 mo
245.584 461.698 245.679 461.941 245.79 462.171 cv
245.678 461.936 245.584 461.693 245.507 461.447 cv
245.506 461.447 245.505 461.447 245.505 461.447 cv
cp
f
251.545 454.14 mo
251.859 454.14 252.09 454.165 252.355 454.21 cv
252.43 453.733 li
252.43 453.733 251.698 453.508 250.736 453.586 cv
250.66 453.327 li
250.959 453.264 251.184 452.998 251.184 452.68 cv
251.184 452.317 250.888 452.022 250.523 452.022 cv
250.159 452.022 249.863 452.317 249.863 452.68 cv
249.863 452.998 250.087 453.264 250.386 453.327 cv
250.469 453.617 li
249.448 453.757 248.635 454.155 248.635 454.155 cv
248.779 454.596 li
249.397 454.391 249.933 454.265 250.419 454.212 cv
250.895 454.162 251.253 454.14 251.545 454.14 cv
cp
f
245.878 456.551 mo
245.882 456.546 li
245.906 456.516 245.929 456.486 245.953 456.457 cv
245.757 456.317 li
245.452 456.093 li
245.435 456.118 244.955 456.559 244.576 457.374 cv
244.56 457.348 244.541 457.323 244.52 457.299 cv
244.407 457.175 244.248 457.111 244.046 457.115 cv
244.044 457.115 244.04 457.115 244.037 457.115 cv
243.912 457.115 243.826 457.074 243.77 457.024 cv
243.826 456.953 243.86 456.864 243.86 456.765 cv
243.86 456.535 243.672 456.347 243.441 456.347 cv
243.211 456.347 243.023 456.535 243.023 456.765 cv
243.023 456.997 243.211 457.184 243.441 457.184 cv
243.478 457.184 243.512 457.177 243.546 457.17 cv
243.648 457.285 243.811 457.384 244.05 457.379 cv
244.173 457.378 244.263 457.409 244.324 457.476 cv
244.393 457.552 244.417 457.661 244.424 457.744 cv
244.423 457.745 244.423 457.746 244.422 457.746 cv
244.15 458.49 244.227 459.415 244.227 459.415 cv
244.888 459.442 li
244.902 459.105 244.95 458.515 245.12 458.048 cv
245.449 457.142 245.861 456.576 245.878 456.551 cv
cp
f
257.295 454.692 mo
257.065 454.692 256.877 454.879 256.877 455.111 cv
256.877 455.146 256.882 455.18 256.892 455.213 cv
256.777 455.317 256.677 455.481 256.681 455.72 cv
256.683 455.843 256.651 455.932 256.584 455.993 cv
256.532 456.04 256.465 456.065 256.4 456.081 cv
255.908 455.392 255.303 454.972 255.303 454.972 cv
254.828 455.479 li
255.187 455.805 255.553 456.214 255.908 456.723 cv
256.155 457.076 256.407 457.53 256.618 457.983 cv
257.258 457.679 li
257.258 457.679 256.966 456.956 256.555 456.309 cv
256.626 456.284 256.698 456.245 256.761 456.189 cv
256.887 456.076 256.948 455.916 256.944 455.715 cv
256.943 455.586 256.986 455.498 257.037 455.439 cv
257.109 455.494 257.198 455.528 257.295 455.528 cv
257.527 455.528 257.713 455.341 257.713 455.111 cv
257.713 454.879 257.527 454.692 257.295 454.692 cv
cp
f
255.635 460.444 mo
254.753 460.872 253.304 461.44 251.396 461.706 cv
250.647 461.81 249.921 461.848 249.253 461.848 cv
248.384 461.848 247.616 461.783 247.027 461.709 cv
246.354 461.624 245.828 461.521 245.507 461.447 cv
245.584 461.693 245.678 461.936 245.79 462.171 cv
245.792 462.177 245.795 462.185 245.798 462.188 cv
245.812 462.216 245.825 462.245 245.839 462.273 cv
245.852 462.299 245.866 462.326 245.88 462.352 cv
245.884 462.359 245.887 462.367 245.89 462.373 cv
246.08 462.729 246.307 463.056 246.566 463.341 cv
247.466 464.325 248.383 464.481 248.391 464.482 cv
248.406 464.483 li
248.419 464.488 li
248.427 464.492 249.24 464.754 250.476 464.754 cv
251.692 464.754 252.886 464.509 254.022 464.024 cv
254.864 463.593 255.661 462.939 256.056 462.356 cv
256.361 461.904 256.582 461.423 256.712 460.923 cv
256.782 460.656 256.837 460.23 256.804 459.781 cv
256.556 459.948 256.164 460.185 255.635 460.444 cv
cp
f
248.678 456.3 mo
249.651 456.3 250.439 457.088 250.439 458.061 cv
250.439 459.033 249.651 459.82 248.678 459.82 cv
247.707 459.82 246.918 459.033 246.918 458.061 cv
246.918 457.088 247.707 456.3 248.678 456.3 cv
cp
253.829 456.344 mo
254.43 456.344 254.919 456.832 254.919 457.433 cv
254.919 458.034 254.43 458.523 253.829 458.523 cv
253.229 458.523 252.74 458.034 252.74 457.433 cv
252.74 456.832 253.229 456.344 253.829 456.344 cv
cp
246.161 456.76 mo
246.135 456.798 245.753 457.339 245.451 458.169 cv
245.225 458.79 245.235 459.696 245.235 459.705 cv
245.235 459.708 li
245.235 459.92 245.247 460.13 245.271 460.339 cv
245.271 460.344 245.271 460.348 245.272 460.35 cv
245.274 460.377 245.279 460.403 245.281 460.429 cv
245.3 460.575 245.325 460.721 245.356 460.869 cv
245.793 460.98 248.405 461.589 251.323 461.183 cv
253.153 460.927 254.542 460.387 255.386 459.978 cv
256.086 459.638 256.537 459.331 256.71 459.204 cv
256.537 458.562 256.059 457.553 255.621 456.925 cv
254.367 455.134 253.016 454.675 252.323 454.56 cv
252.058 454.518 251.846 454.492 251.545 454.492 cv
251.266 454.492 250.919 454.515 250.456 454.564 cv
249.992 454.611 249.474 454.734 248.873 454.936 cv
248.031 455.218 247.269 455.66 246.669 456.216 cv
246.649 456.235 li
246.56 456.317 246.374 456.489 246.161 456.76 cv
cp
f
%%IncludeResource: font CooperHewitt-Book
/MWCLZL+CooperHewitt-Book /CooperHewitt-Book findfont ct_VMDictPut/MWCLZL+CooperHewitt-Book*1 [32{/.notdef}rp /space 34{/.notdef}rp /C 31{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]MWCLZL+CooperHewitt-Book nfMWCLZL+CooperHewitt-Book*1 [18.4883 0 0 -18.4883 0 0 ]msf183.073 50.9258 mo(Crown Collection)[11.4258 5.71289 9.83594 13.2559 9.76172 3.69775 11.4258 10.0576 3.99316 3.99316 10.0576 9.42871 7.39551 3.99316 10.0576 0 ]xsh140.376 292.095 mo
173.523 292.095 201.022 300.315 203.226 300.991 cv
203.226 295.786 li
203.074 296.264 li
202.794 296.175 174.608 287.368 140.376 287.368 cv
106.152 287.368 77.9663 296.175 77.6855 296.264 cv
77.5347 295.787 li
77.5347 300.991 li
79.7382 300.315 107.237 292.095 140.376 292.095 cv
cp
f
203.226 295.264 mo
203.226 286.305 li
201.632 291.327 li
201.186 290.247 200.562 289.133 199.983 288.036 cv
199.389 286.94 198.775 285.846 198.149 284.751 cv
195.981 286.042 193.856 287.37 191.766 288.724 cv
190.493 286.593 189.177 284.443 187.81 282.333 cv
185.709 283.73 183.647 285.142 181.613 286.602 cv
181.613 286.603 li
181.613 286.602 li
181.613 286.602 181.613 286.602 181.612 286.603 cv
181.613 286.602 li
180.244 284.506 178.827 282.448 177.372 280.39 cv
175.337 281.856 173.331 283.395 171.366 284.922 cv
169.908 282.877 168.402 280.903 166.86 278.9 cv
164.892 280.449 162.955 282.074 161.061 283.692 cv
161.061 283.692 li
161.06 283.692 li
161.06 283.692 li
161.06 283.691 li
158.706 280.753 li
156.292 277.878 li
154.394 279.539 152.538 281.194 150.723 282.929 cv
149.089 281.072 147.412 279.15 145.688 277.34 cv
143.873 279.108 142.104 280.876 140.379 282.645 cv
140.379 282.645 li
140.379 282.645 140.379 282.645 140.379 282.645 cv
140.379 282.645 140.379 282.645 140.379 282.645 cv
140.379 282.645 li
138.655 280.877 136.886 279.108 135.07 277.34 cv
133.346 279.149 131.67 281.072 130.035 282.929 cv
130.035 282.929 li
130.035 282.929 130.035 282.929 130.035 282.929 cv
130.035 282.929 li
130.035 282.929 li
128.22 281.193 126.364 279.538 124.467 277.878 cv
122.052 280.753 li
119.698 283.692 li
119.698 283.692 li
119.698 283.692 li
119.698 283.692 li
119.698 283.692 li
117.803 282.074 115.867 280.45 113.899 278.9 cv
112.357 280.903 110.85 282.877 109.392 284.922 cv
107.428 283.395 105.421 281.856 103.387 280.39 cv
101.931 282.449 100.515 284.507 99.1455 286.603 cv
97.1124 285.142 95.0504 283.731 92.949 282.333 cv
91.5828 284.443 90.2662 286.593 88.9924 288.724 cv
88.9926 288.724 li
88.9924 288.724 88.9924 288.724 88.9924 288.724 cv
88.9921 288.724 li
88.9921 288.724 li
86.9026 287.37 84.778 286.042 82.6101 284.752 cv
81.9839 285.847 81.3695 286.94 80.7759 288.036 cv
80.1962 289.133 79.5729 290.247 79.1259 291.328 cv
77.5347 286.313 li
77.5347 295.264 li
79.7382 294.587 107.237 286.368 140.376 286.368 cv
173.523 286.368 201.022 294.587 203.226 295.264 cv
cp
f
82.6025 284.747 mo
84.3174 284.3 86.0377 283.877 87.7625 283.472 cv
87.7625 283.472 li
89.4867 283.08 91.2088 282.68 92.9416 282.329 cv
92.9415 282.328 92.9415 282.328 92.9415 282.328 cv
94.6761 281.967 96.4119 281.613 98.156 281.3 cv
98.156 281.3 li
99.8917 280.963 101.635 280.671 103.38 280.385 cv
103.38 280.385 li
103.381 280.384 103.383 280.384 103.385 280.384 cv
103.387 280.383 103.39 280.383 103.392 280.383 cv
103.392 280.383 li
105.133 280.077 106.885 279.838 108.633 279.581 cv
110.381 279.309 112.138 279.114 113.893 278.894 cv
113.892 278.894 li
115.649 278.66 117.413 278.497 119.176 278.323 cv
119.176 278.323 li
121.821 278.065 li
124.46 277.872 li
126.227 277.741 127.993 277.602 129.765 277.542 cv
131.535 277.476 133.304 277.347 135.076 277.334 cv
135.076 277.334 li
140.379 277.251 li
140.379 277.251 li
140.379 277.251 li
145.683 277.334 li
145.683 277.334 li
147.454 277.347 149.223 277.476 150.994 277.542 cv
152.761 277.602 154.523 277.741 156.287 277.872 cv
156.287 277.871 li
158.937 278.065 li
161.583 278.323 li
161.583 278.323 li
163.342 278.497 165.102 278.66 166.855 278.893 cv
166.855 278.893 li
168.613 279.113 170.374 279.309 172.125 279.581 cv
173.874 279.838 175.626 280.077 177.367 280.383 cv
177.367 280.383 li
177.369 280.383 177.371 280.383 177.374 280.384 cv
177.375 280.384 177.377 280.384 177.379 280.385 cv
177.379 280.385 li
179.124 280.671 180.867 280.962 182.602 281.3 cv
184.346 281.613 186.083 281.967 187.817 282.328 cv
187.817 282.328 li
189.55 282.68 191.272 283.08 192.995 283.471 cv
194.717 283.876 196.434 284.298 198.145 284.744 cv
198.145 284.744 li
199.845 285.198 201.542 285.652 203.226 286.174 cv
203.226 280.847 li
203.226 280.847 175.09 271.919 140.376 271.919 cv
105.67 271.919 77.5347 280.847 77.5347 280.847 cv
77.5347 286.174 li
79.214 285.654 80.9075 285.201 82.6028 284.747 cv
82.6028 284.747 82.6026 284.747 82.6025 284.747 cv
cp
f
78.3977 301.776 mo
83.3343 303.24 109.197 310.443 140.376 310.443 cv
171.562 310.443 197.425 303.241 202.362 301.776 cv
197.805 300.426 171.614 293.095 140.376 293.095 cv
109.147 293.095 82.9568 300.425 78.3977 301.776 cv
cp
f
203.226 301.514 mo
203.226 301.514 li
203.226 301.513 li
203.226 301.514 li
203.226 301.514 li
cp
f
207.67 227.715 mo
208.096 227.463 208.628 227.618 208.864 228.058 cv
209.1 228.498 208.934 229.031 208.493 229.248 cv
208.052 229.465 207.518 229.311 207.3 228.905 cv
207.082 228.499 207.251 227.964 207.67 227.715 cv
cp
209.06 259.155 mo
208.894 259.614 208.389 259.846 207.927 259.671 cv
207.47 259.498 207.226 258.996 207.387 258.552 cv
207.547 258.107 208.054 257.876 208.518 258.035 cv
208.982 258.194 209.225 258.696 209.06 259.155 cv
cp
209.191 252.654 mo
209.296 252.196 209.77 251.912 210.249 252.02 cv
210.728 252.129 211.027 252.604 210.917 253.081 cv
210.797 253.555 210.306 253.835 209.833 253.709 cv
209.357 253.582 209.074 253.111 209.191 252.654 cv
cp
210.153 233.448 mo
210.623 233.303 211.114 233.575 211.25 234.054 cv
211.396 234.532 211.086 235.017 210.607 235.127 cv
210.129 235.236 209.668 234.957 209.532 234.515 cv
209.406 234.071 209.684 233.593 210.153 233.448 cv
cp
212.253 240.409 mo
212.27 240.904 211.885 241.315 211.394 241.328 cv
210.903 241.34 210.493 240.973 210.477 240.507 cv
210.456 240.043 210.804 239.634 211.298 239.591 cv
211.783 239.549 212.23 239.915 212.253 240.409 cv
cp
211.066 247.574 mo
210.579 247.508 210.227 247.077 210.279 246.611 cv
210.33 246.145 210.77 245.802 211.259 245.845 cv
211.748 245.888 212.101 246.319 212.046 246.808 cv
211.992 247.297 211.553 247.64 211.066 247.574 cv
cp
206.648 265.015 mo
206.443 265.457 205.918 265.643 205.474 265.431 cv
205.031 265.219 204.834 264.699 205.033 264.269 cv
205.236 263.841 205.755 263.652 206.202 263.851 cv
206.652 264.052 206.856 264.575 206.648 265.015 cv
cp
203.773 270.654 mo
203.533 271.078 202.992 271.221 202.567 270.975 cv
202.141 270.729 201.988 270.197 202.222 269.785 cv
202.45 269.37 202.985 269.223 203.417 269.458 cv
203.848 269.693 204.008 270.228 203.773 270.654 cv
cp
205.056 224.031 mo
204.678 224.344 204.125 224.316 203.821 223.967 cv
203.518 223.618 203.559 223.059 203.908 222.725 cv
204.269 222.38 204.823 222.409 205.149 222.784 cv
205.477 223.16 205.435 223.719 205.056 224.031 cv
cp
200.574 219.675 mo
200.263 220.062 199.732 220.121 199.355 219.849 cv
198.979 219.577 198.903 219.03 199.185 218.629 cv
199.469 218.228 200.024 218.137 200.426 218.428 cv
200.827 218.719 200.879 219.297 200.574 219.675 cv
cp
195.335 216.265 mo
195.105 216.699 194.582 216.882 194.166 216.672 cv
193.754 216.456 193.572 215.943 193.774 215.498 cv
193.978 215.049 194.51 214.847 194.95 215.076 cv
195.392 215.298 195.565 215.83 195.335 216.265 cv
cp
189.552 213.885 mo
189.402 214.36 188.929 214.602 188.476 214.488 cv
188.025 214.368 187.759 213.884 187.88 213.408 cv
188.002 212.932 188.487 212.65 188.964 212.778 cv
189.444 212.899 189.699 213.423 189.552 213.885 cv
cp
182.482 213.311 mo
182.018 213.257 181.677 212.814 181.719 212.328 cv
181.763 211.836 182.195 211.487 182.684 211.544 cv
183.174 211.601 183.516 212.042 183.447 212.528 cv
183.379 213.015 182.947 213.365 182.482 213.311 cv
cp
176.368 213.102 mo
175.9 213.12 175.496 212.736 175.464 212.246 cv
175.432 211.756 175.806 211.344 176.298 211.325 cv
176.791 211.306 177.196 211.689 177.202 212.181 cv
177.209 212.671 176.835 213.084 176.368 213.102 cv
cp
170.292 213.811 mo
169.833 213.897 169.374 213.579 169.267 213.1 cv
169.161 212.62 169.468 212.157 169.952 212.065 cv
170.435 211.973 170.894 212.292 170.976 212.776 cv
171.058 213.26 170.752 213.723 170.292 213.811 cv
cp
164.402 215.445 mo
163.962 215.601 163.458 215.357 163.277 214.9 cv
163.096 214.444 163.326 213.94 163.791 213.775 cv
164.256 213.61 164.76 213.854 164.916 214.319 cv
165.073 214.785 164.843 215.289 164.402 215.445 cv
cp
158.873 218.016 mo
158.466 218.241 157.926 218.085 157.668 217.668 cv
157.409 217.25 157.55 216.716 157.983 216.476 cv
158.416 216.235 158.956 216.391 159.188 216.824 cv
159.422 217.256 159.281 217.79 158.873 218.016 cv
cp
153.933 221.545 mo
153.566 221.83 153.032 221.811 152.696 221.458 cv
152.355 221.099 152.362 220.52 152.755 220.213 cv
153.137 219.895 153.701 219.945 154.013 220.324 cv
154.325 220.702 154.29 221.249 153.933 221.545 cv
cp
149.877 226.023 mo
149.607 226.396 149.1 226.512 148.681 226.241 cv
148.275 225.979 148.131 225.401 148.424 224.997 cv
148.732 224.603 149.298 224.527 149.687 224.826 cv
150.077 225.125 150.162 225.661 149.877 226.023 cv
cp
147.048 231.339 mo
146.911 231.777 146.421 232.008 145.954 231.853 cv
145.488 231.699 145.232 231.186 145.384 230.71 cv
145.553 230.239 146.116 230.036 146.559 230.226 cv
147.02 230.422 147.202 230.906 147.048 231.339 cv
cp
144.709 237.967 mo
144.22 237.93 143.847 237.496 143.877 236.999 cv
143.919 236.502 144.419 236.167 144.894 236.241 cv
145.39 236.318 145.682 236.74 145.644 237.2 cv
145.618 237.661 145.199 238.005 144.709 237.967 cv
cp
137.708 212.937 mo
137.708 211.462 138.904 210.266 140.38 210.266 cv
141.855 210.266 143.051 211.462 143.051 212.937 cv
143.051 214.412 141.855 215.608 140.38 215.608 cv
138.904 215.608 137.708 214.412 137.708 212.937 cv
cp
140.38 204.395 mo
141.068 204.395 141.626 204.953 141.626 205.642 cv
141.626 206.33 141.068 206.888 140.38 206.888 cv
139.691 206.888 139.133 206.33 139.133 205.642 cv
139.133 204.953 139.691 204.395 140.38 204.395 cv
cp
136.05 237.967 mo
135.56 238.005 135.141 237.661 135.115 237.2 cv
135.078 236.74 135.369 236.318 135.865 236.241 cv
136.34 236.167 136.84 236.502 136.882 236.999 cv
136.912 237.496 136.539 237.93 136.05 237.967 cv
cp
134.805 231.853 mo
134.338 232.008 133.848 231.777 133.711 231.339 cv
133.557 230.906 133.739 230.422 134.2 230.226 cv
134.643 230.036 135.206 230.239 135.375 230.71 cv
135.527 231.186 135.271 231.699 134.805 231.853 cv
cp
132.078 226.241 mo
131.659 226.512 131.152 226.396 130.882 226.023 cv
130.597 225.661 130.682 225.125 131.072 224.826 cv
131.461 224.527 132.027 224.603 132.335 224.997 cv
132.628 225.401 132.484 225.979 132.078 226.241 cv
cp
128.063 221.458 mo
127.727 221.811 127.193 221.83 126.826 221.545 cv
126.469 221.249 126.434 220.702 126.746 220.324 cv
127.058 219.945 127.622 219.895 128.004 220.213 cv
128.397 220.52 128.404 221.099 128.063 221.458 cv
cp
123.091 217.668 mo
122.833 218.085 122.293 218.241 121.886 218.016 cv
121.478 217.79 121.337 217.256 121.571 216.824 cv
121.803 216.391 122.343 216.235 122.776 216.476 cv
123.209 216.716 123.35 217.25 123.091 217.668 cv
cp
117.482 214.9 mo
117.301 215.357 116.797 215.601 116.357 215.445 cv
115.916 215.289 115.686 214.785 115.843 214.319 cv
115.999 213.854 116.503 213.61 116.968 213.775 cv
117.433 213.94 117.663 214.444 117.482 214.9 cv
cp
111.492 213.1 mo
111.385 213.579 110.926 213.897 110.467 213.811 cv
110.007 213.723 109.701 213.26 109.783 212.776 cv
109.865 212.292 110.324 211.973 110.807 212.065 cv
111.291 212.157 111.598 212.62 111.492 213.1 cv
cp
104.391 213.102 mo
103.924 213.084 103.55 212.671 103.557 212.181 cv
103.564 211.689 103.968 211.306 104.461 211.325 cv
104.953 211.344 105.327 211.756 105.295 212.246 cv
105.263 212.736 104.859 213.12 104.391 213.102 cv
cp
98.2769 213.311 mo
97.8123 213.365 97.3804 213.015 97.312 212.528 cv
97.2436 212.042 97.5848 211.601 98.0749 211.544 cv
98.5645 211.487 98.9964 211.836 99.0398 212.328 cv
99.0824 212.814 98.7411 213.257 98.2769 213.311 cv
cp
92.2826 214.488 mo
91.8299 214.602 91.3566 214.36 91.2067 213.885 cv
91.06 213.423 91.3152 212.899 91.7946 212.778 cv
92.2715 212.65 92.7571 212.932 92.8788 213.408 cv
93.0004 213.884 92.7337 214.368 92.2826 214.488 cv
cp
86.5928 216.672 mo
86.1769 216.882 85.6537 216.699 85.4243 216.265 cv
85.1944 215.83 85.3669 215.298 85.8094 215.076 cv
86.2486 214.847 86.7808 215.049 86.9849 215.498 cv
87.1869 215.943 87.0054 216.456 86.5928 216.672 cv
cp
81.4036 219.849 mo
81.027 220.121 80.4957 220.062 80.1847 219.675 cv
79.8802 219.297 79.9323 218.719 80.3334 218.428 cv
80.7354 218.137 81.2905 218.228 81.5736 218.629 cv
81.8563 219.03 81.7806 219.577 81.4036 219.849 cv
cp
76.938 223.967 mo
76.6344 224.316 76.0809 224.344 75.7027 224.031 cv
75.3241 223.719 75.2823 223.16 75.6097 222.784 cv
75.9362 222.409 76.4897 222.38 76.8507 222.725 cv
77.1998 223.059 77.2412 223.618 76.938 223.967 cv
cp
73.4586 228.905 mo
73.2411 229.311 72.7068 229.465 72.2663 229.248 cv
71.8254 229.031 71.6587 228.498 71.8947 228.058 cv
72.1311 227.618 72.663 227.463 73.0886 227.715 cv
73.5078 227.964 73.6766 228.499 73.4586 228.905 cv
cp
72.2413 258.035 mo
72.7056 257.876 73.2124 258.107 73.3722 258.552 cv
73.5332 258.996 73.2886 259.498 72.8317 259.671 cv
72.3696 259.846 71.8652 259.614 71.6993 259.155 cv
71.5341 258.696 71.7767 258.194 72.2413 258.035 cv
cp
74.5567 263.851 mo
75.0041 263.652 75.5233 263.841 75.7256 264.269 cv
75.9252 264.699 75.7277 265.219 75.2848 265.431 cv
74.8414 265.643 74.3162 265.457 74.1109 265.015 cv
73.9032 264.575 74.1068 264.052 74.5567 263.851 cv
cp
70.9261 253.709 mo
70.4529 253.835 69.9625 253.555 69.842 253.081 cv
69.7318 252.604 70.0309 252.129 70.5098 252.02 cv
70.9888 251.912 71.4628 252.196 71.5685 252.654 cv
71.6849 253.111 71.4018 253.582 70.9261 253.709 cv
cp
68.7128 246.808 mo
68.6583 246.319 69.011 245.888 69.5002 245.845 cv
69.9895 245.802 70.4287 246.145 70.4803 246.611 cv
70.5323 247.077 70.1796 247.508 69.6929 247.574 cv
69.2065 247.64 68.7673 247.297 68.7128 246.808 cv
cp
69.4609 239.591 mo
69.9547 239.634 70.3033 240.043 70.282 240.507 cv
70.2665 240.973 69.8559 241.34 69.3651 241.328 cv
68.8738 241.315 68.4891 240.904 68.5059 240.409 cv
68.5292 239.915 68.9763 239.549 69.4609 239.591 cv
cp
69.5093 234.054 mo
69.6453 233.575 70.1362 233.303 70.6057 233.448 cv
71.0748 233.593 71.3535 234.071 71.2272 234.515 cv
71.0908 234.957 70.6303 235.236 70.1525 235.127 cv
69.6732 235.017 69.3634 234.532 69.5093 234.054 cv
cp
77.3424 269.458 mo
77.7739 269.223 78.309 269.37 78.5376 269.785 cv
78.7715 270.197 78.6179 270.729 78.1922 270.975 cv
77.7673 271.221 77.2261 271.078 76.986 270.654 cv
76.7512 270.228 76.9109 269.693 77.3424 269.458 cv
cp
141.379 232.389 mo
141.379 219.143 li
142.871 218.934 144.31 218.264 145.457 217.117 cv
149.465 213.11 li
140.38 193.409 li
131.294 213.11 li
135.302 217.117 li
136.448 218.264 137.887 218.934 139.378 219.143 cv
139.378 232.382 li
132.63 206.803 93.2386 199.13 73.7101 219.936 cv
55.137 239.725 71.6346 268.698 76.3581 276.064 cv
76.8563 274.105 78.1064 270.742 81.0316 268.217 cv
80.0327 268.777 li
75.2324 260.209 65.4961 238.757 78.7349 224.652 cv
84.668 218.331 93.231 214.849 102.847 214.849 cv
117.244 214.849 132.518 223.204 133.444 238.725 cv
140.345 238.725 li
140.414 238.725 li
147.314 238.725 li
148.241 223.204 163.516 214.849 177.913 214.849 cv
187.528 214.849 196.091 218.331 202.024 224.652 cv
215.264 238.757 205.526 260.209 200.726 268.777 cv
199.729 268.219 li
202.653 270.744 203.903 274.105 204.401 276.065 cv
209.124 268.699 225.622 239.725 207.049 219.936 cv
187.519 199.128 148.122 206.805 141.379 232.389 cv
cp
f
143.041 250.554 mo
143.009 249.639 142.52 248.846 141.792 248.39 cv
145.547 243.576 149.088 249.709 143.041 250.554 cv
cp
141.792 252.908 mo
142.52 252.451 143.009 251.658 143.041 250.743 cv
149.088 251.588 145.547 257.721 141.792 252.908 cv
cp
139.131 252.997 mo
139.505 253.196 139.926 253.32 140.38 253.32 cv
140.833 253.32 141.253 253.196 141.627 252.997 cv
143.924 258.663 136.832 258.662 139.131 252.997 cv
cp
137.718 250.743 mo
137.75 251.657 138.238 252.45 138.966 252.907 cv
135.21 257.722 131.668 251.587 137.718 250.743 cv
cp
138.966 248.39 mo
138.238 248.847 137.75 249.64 137.718 250.554 cv
131.668 249.71 135.21 243.575 138.966 248.39 cv
cp
141.627 248.3 mo
141.253 248.101 140.833 247.977 140.38 247.977 cv
139.926 247.977 139.505 248.101 139.131 248.301 cv
136.832 242.635 143.924 242.635 141.627 248.3 cv
cp
199.837 226.705 mo
194.477 220.994 186.69 217.849 177.913 217.849 cv
164.513 217.849 150.27 225.691 150.27 240.225 cv
150.27 241.725 li
130.488 241.725 li
130.488 240.225 li
130.488 225.691 116.247 217.849 102.847 217.849 cv
94.0688 217.849 86.2822 220.994 80.9224 226.705 cv
69.14 239.259 78.0192 258.981 82.5346 267.102 cv
83.4592 266.517 84.499 266.007 85.7012 265.636 cv
92.1118 263.657 97.4478 267.195 100.146 269.585 cv
101.48 266.41 104.607 262.517 110.659 261.455 cv
118.208 260.131 123.109 264.143 125.391 266.703 cv
127.313 263.844 131.774 259.165 140.379 259.165 cv
148.985 259.165 153.446 263.844 155.369 266.704 cv
157.65 264.143 162.556 260.13 170.1 261.455 cv
176.151 262.516 179.279 266.41 180.613 269.585 cv
183.311 267.195 188.647 263.657 195.058 265.636 cv
196.26 266.007 197.299 266.516 198.224 267.101 cv
202.739 258.98 211.62 239.259 199.837 226.705 cv
cp
f
192.997 272.836 mo
192.181 272.836 191.52 272.175 191.52 271.359 cv
191.52 270.543 192.181 269.882 192.997 269.882 cv
193.812 269.882 194.473 270.543 194.473 271.359 cv
194.473 272.175 193.812 272.836 192.997 272.836 cv
cp
194.172 268.503 mo
188.316 266.689 183.302 271.066 181.637 272.76 cv
191.471 274.555 198.607 276.476 201.621 277.345 cv
201.241 275.492 199.694 270.209 194.172 268.503 cv
cp
f
87.7625 272.836 mo
86.9469 272.836 86.2858 272.175 86.2858 271.359 cv
86.2858 270.543 86.9469 269.882 87.7625 269.882 cv
88.5781 269.882 89.2393 270.543 89.2393 271.359 cv
89.2393 272.175 88.5781 272.836 87.7625 272.836 cv
cp
86.5869 268.503 mo
81.1094 270.195 79.5309 275.498 79.1408 277.344 cv
82.1558 276.475 89.2903 274.554 99.1219 272.76 cv
97.4579 271.069 92.4402 266.691 86.5869 268.503 cv
cp
f
112.415 268.903 mo
111.6 268.903 110.939 268.242 110.939 267.426 cv
110.939 266.611 111.6 265.949 112.415 265.949 cv
113.231 265.949 113.892 266.611 113.892 267.426 cv
113.892 268.242 113.231 268.903 112.415 268.903 cv
cp
111.177 264.41 mo
104.551 265.572 102.837 270.59 102.457 272.174 cv
108.768 271.112 116.012 270.15 123.866 269.546 cv
122.6 267.81 118.453 263.135 111.177 264.41 cv
cp
f
140.38 266.778 mo
139.565 266.778 138.903 266.117 138.903 265.301 cv
138.903 264.486 139.565 263.824 140.38 263.824 cv
141.196 263.824 141.857 264.486 141.857 265.301 cv
141.857 266.117 141.196 266.778 140.38 266.778 cv
cp
140.379 262.165 mo
131.967 262.165 128.349 267.406 127.312 269.306 cv
131.528 269.047 135.897 268.896 140.38 268.896 cv
144.862 268.896 149.232 269.047 153.448 269.306 cv
152.415 267.412 148.798 262.165 140.379 262.165 cv
cp
f
168.344 268.903 mo
167.528 268.903 166.867 268.242 166.867 267.426 cv
166.867 266.611 167.528 265.949 168.344 265.949 cv
169.159 265.949 169.82 266.611 169.82 267.426 cv
169.82 268.242 169.159 268.903 168.344 268.903 cv
cp
169.582 264.41 mo
162.374 263.144 158.179 267.818 156.899 269.547 cv
164.751 270.15 171.993 271.113 178.303 272.174 cv
177.925 270.599 176.215 265.573 169.582 264.41 cv
cp
f
354.419 289.386 mo
322.552 289.386 296.306 297.587 296.045 297.67 cv
295.894 297.193 li
295.894 300.823 li
298.009 300.175 323.594 292.54 354.419 292.54 cv
385.251 292.54 410.836 300.174 412.953 300.823 cv
412.953 297.194 li
412.802 297.67 li
412.541 297.587 386.295 289.386 354.419 289.386 cv
cp
f
295.894 301.347 mo
295.894 301.347 li
295.894 301.347 li
295.894 301.347 li
295.894 301.347 li
cp
f
295.894 282.489 mo
298.009 281.841 323.594 274.205 354.419 274.205 cv
385.251 274.205 410.836 281.84 412.953 282.489 cv
412.953 282.099 li
412.953 282.099 386.749 273.784 354.419 273.784 cv
322.097 273.784 295.894 282.099 295.894 282.099 cv
295.894 282.489 li
cp
f
300.951 285.919 mo
301.766 286.356 302.564 286.815 303.358 287.267 cv
304.942 288.182 306.493 289.105 308.028 290.063 cv
310.036 287.054 312.15 284.096 314.349 281.146 cv
317.432 283.147 320.438 285.206 323.366 287.318 cv
325.581 284.474 327.879 281.63 330.273 278.859 cv
330.273 278.858 li
330.273 278.858 330.274 278.858 330.274 278.858 cv
330.274 278.858 330.274 278.858 330.274 278.858 cv
330.274 278.859 li
333.212 281.038 336.079 283.33 338.855 285.614 cv
341.259 282.938 343.749 280.25 346.344 277.659 cv
346.344 277.658 li
346.344 277.659 346.344 277.659 346.345 277.659 cv
346.345 277.659 346.345 277.659 346.345 277.658 cv
346.345 277.659 li
349.129 280.024 351.829 282.553 354.424 285.011 cv
357.02 282.553 359.721 280.025 362.505 277.659 cv
362.505 277.659 li
362.505 277.659 li
362.506 277.659 362.506 277.659 362.506 277.659 cv
362.506 277.66 li
365.1 280.25 367.59 282.939 369.994 285.614 cv
372.77 283.33 375.637 281.038 378.576 278.859 cv
380.97 281.631 383.268 284.475 385.482 287.319 cv
388.411 285.207 391.416 283.149 394.5 281.147 cv
394.5 281.147 li
394.501 281.147 li
394.501 281.147 li
394.501 281.148 li
396.699 284.097 398.814 287.055 400.82 290.064 cv
402.355 289.107 403.907 288.183 405.491 287.268 cv
406.285 286.816 407.083 286.356 407.899 285.92 cv
408.727 285.482 409.501 285.033 410.451 284.645 cv
408.389 291.894 li
405.892 291.212 403.361 290.623 400.827 290.074 cv
400.827 290.074 li
398.288 289.517 395.733 289.03 393.175 288.565 cv
390.62 288.112 388.057 287.699 385.49 287.328 cv
385.49 287.328 li
382.915 286.967 380.337 286.618 377.751 286.349 cv
375.169 286.043 372.576 285.84 369.986 285.622 cv
367.396 285.449 364.808 285.269 362.214 285.189 cv
359.619 285.051 357.021 285.071 354.424 285.019 cv
351.828 285.07 349.23 285.05 346.636 285.189 cv
344.042 285.268 341.453 285.448 338.863 285.621 cv
336.273 285.84 333.68 286.043 331.098 286.349 cv
328.513 286.618 325.936 286.966 323.362 287.327 cv
320.793 287.698 318.231 288.111 315.675 288.564 cv
315.675 288.565 li
313.119 289.029 310.567 289.515 308.031 290.072 cv
305.493 290.621 302.96 291.211 300.46 291.893 cv
298.398 284.645 li
299.349 285.032 300.122 285.481 300.951 285.919 cv
cp
354.419 275.205 mo
322.552 275.205 296.306 283.406 296.045 283.489 cv
295.894 283.013 li
295.894 295.892 li
295.894 296.67 li
298.009 296.022 323.594 288.386 354.419 288.386 cv
385.251 288.386 410.836 296.021 412.953 296.67 cv
412.953 295.892 li
412.953 283.013 li
412.802 283.489 li
412.541 283.406 386.295 275.205 354.419 275.205 cv
cp
f
296.756 301.608 mo
301.491 303.009 325.497 309.662 354.419 309.662 cv
383.348 309.662 407.355 303.009 412.09 301.608 cv
407.692 300.309 383.382 293.54 354.419 293.54 cv
325.456 293.54 301.152 300.309 296.756 301.608 cv
cp
f
406.797 265.075 mo
408.105 265.87 409.809 268.301 408.591 268.91 cv
405.982 270.214 404.9 264.589 404.9 264.589 cv
404.9 264.589 399.588 266.731 399.269 263.832 cv
399.12 262.479 402.086 262.591 403.463 263.26 cv
403.463 263.26 398.323 259.634 400.956 258.004 cv
403.281 256.563 404.413 261.279 404.413 261.279 cv
404.413 261.279 404.401 258.785 406.302 256.829 cv
408.181 254.894 409.931 255.354 411.255 252.922 cv
409.931 255.354 411.266 256.575 410.66 259.203 cv
410.047 261.861 407.946 263.203 407.946 263.203 cv
407.946 263.203 412.521 261.597 412.572 264.331 cv
412.63 267.427 406.797 265.075 406.797 265.075 cv
cp
412.404 275.298 mo
412.222 275.892 411.597 276.222 410.992 276.053 cv
410.388 275.882 410.032 275.258 410.195 274.664 cv
410.36 274.065 410.992 273.724 411.61 273.899 cv
412.227 274.071 412.584 274.708 412.404 275.298 cv
cp
409.623 273.611 mo
409.008 273.445 408.635 272.824 408.792 272.227 cv
408.948 271.627 409.582 271.279 410.209 271.447 cv
410.835 271.616 411.207 272.238 411.04 272.835 cv
410.872 273.429 410.238 273.777 409.623 273.611 cv
cp
409.971 276.593 mo
409.804 277.187 409.184 277.538 408.584 277.376 cv
407.985 277.215 407.626 276.598 407.782 276 cv
407.939 275.4 408.559 275.049 409.169 275.213 cv
409.78 275.378 410.139 275.995 409.971 276.593 cv
cp
407.1 275.003 mo
406.49 274.847 406.117 274.234 406.266 273.634 cv
406.415 273.033 407.039 272.675 407.658 272.833 cv
408.277 272.99 408.651 273.603 408.492 274.204 cv
408.334 274.8 407.711 275.159 407.1 275.003 cv
cp
405.244 273.383 mo
405.096 273.985 404.48 274.353 403.868 274.206 cv
403.254 274.059 402.87 273.452 403.01 272.849 cv
403.149 272.245 403.765 271.877 404.386 272.026 cv
405.007 272.175 405.392 272.782 405.244 273.383 cv
cp
401.511 270.477 mo
401.644 269.874 402.263 269.496 402.892 269.636 cv
403.521 269.773 403.915 270.384 403.774 270.987 cv
403.633 271.589 403.016 271.957 402.394 271.822 cv
401.773 271.684 401.377 271.081 401.511 270.477 cv
cp
402.867 274.787 mo
402.727 275.388 402.12 275.76 401.509 275.627 cv
400.9 275.491 400.513 274.891 400.646 274.287 cv
400.78 273.682 401.389 273.304 402.006 273.441 cv
402.624 273.576 403.009 274.183 402.867 274.787 cv
cp
399.928 273.309 mo
399.314 273.168 398.915 272.58 399.042 271.974 cv
399.17 271.369 399.781 270.977 400.404 271.119 cv
401.027 271.258 401.422 271.86 401.287 272.464 cv
401.152 273.068 400.544 273.446 399.928 273.309 cv
cp
396.665 272.63 mo
396.047 272.503 395.643 271.907 395.76 271.301 cv
395.879 270.692 396.482 270.305 397.107 270.433 cv
397.732 270.561 398.138 271.156 398.012 271.762 cv
397.886 272.368 397.283 272.757 396.665 272.63 cv
cp
394.355 274.131 mo
393.74 274.016 393.333 273.43 393.447 272.822 cv
393.559 272.213 394.155 271.814 394.777 271.93 cv
395.4 272.044 395.806 272.634 395.686 273.243 cv
395.566 273.848 394.97 274.243 394.355 274.131 cv
cp
391.767 270.557 mo
391.874 269.947 392.47 269.549 393.098 269.665 cv
393.725 269.782 394.141 270.37 394.026 270.978 cv
393.911 271.586 393.315 271.985 392.696 271.87 cv
392.075 271.754 391.659 271.167 391.767 270.557 cv
cp
389.411 271.298 mo
388.789 271.195 388.365 270.615 388.463 270.004 cv
388.561 269.393 389.151 268.983 389.781 269.088 cv
390.411 269.193 390.835 269.772 390.73 270.382 cv
390.624 270.992 390.034 271.402 389.411 271.298 cv
cp
387.152 272.867 mo
386.536 272.759 386.108 272.202 386.202 271.587 cv
386.294 270.978 386.879 270.544 387.503 270.653 cv
388.127 270.757 388.551 271.337 388.451 271.948 cv
388.351 272.559 387.769 272.969 387.152 272.867 cv
cp
384.447 269.392 mo
384.535 268.78 385.118 268.358 385.749 268.45 cv
386.381 268.542 386.816 269.112 386.721 269.723 cv
386.626 270.335 386.043 270.757 385.419 270.666 cv
384.794 270.575 384.359 270.005 384.447 269.392 cv
cp
382.119 270.188 mo
381.494 270.111 381.05 269.551 381.129 268.937 cv
381.207 268.323 381.784 267.889 382.418 267.967 cv
383.05 268.056 383.492 268.629 383.406 269.241 cv
383.32 269.855 382.744 270.276 382.119 270.188 cv
cp
379.911 271.849 mo
379.29 271.773 378.846 271.213 378.919 270.598 cv
378.993 269.984 379.56 269.548 380.189 269.625 cv
380.817 269.702 381.261 270.262 381.18 270.876 cv
381.1 271.49 380.531 271.926 379.911 271.849 cv
cp
377.096 268.444 mo
377.164 267.825 377.732 267.391 378.366 267.469 cv
379 267.546 379.452 268.107 379.377 268.722 cv
379.302 269.336 378.734 269.771 378.108 269.695 cv
377.482 269.618 377.029 269.055 377.096 268.444 cv
cp
374.794 269.342 mo
374.166 269.28 373.705 268.731 373.763 268.115 cv
373.821 267.498 374.382 267.05 375.018 267.113 cv
375.653 267.176 376.115 267.725 376.049 268.34 cv
375.983 268.956 375.421 269.404 374.794 269.342 cv
cp
372.643 271.058 mo
372.021 270.997 371.559 270.446 371.612 269.831 cv
371.665 269.212 372.217 268.764 372.847 268.826 cv
373.477 268.888 373.938 269.438 373.879 270.054 cv
373.818 270.671 373.266 271.119 372.643 271.058 cv
cp
370.77 268.97 mo
370.141 268.923 369.668 268.386 369.715 267.769 cv
369.761 267.152 370.315 266.69 370.953 266.736 cv
371.589 266.782 372.061 267.32 372.007 267.941 cv
371.952 268.553 371.399 269.014 370.77 268.97 cv
cp
367.447 268.727 mo
366.817 268.681 366.337 268.143 366.374 267.525 cv
366.411 266.907 366.957 266.444 367.593 266.491 cv
368.23 266.537 368.71 267.075 368.665 267.693 cv
368.621 268.31 368.075 268.773 367.447 268.727 cv
cp
365.358 270.517 mo
364.734 270.488 364.253 269.965 364.284 269.346 cv
364.315 268.728 364.852 268.25 365.484 268.279 cv
366.116 268.302 366.596 268.844 366.557 269.462 cv
366.519 270.08 365.982 270.539 365.358 270.517 cv
cp
363.413 268.508 mo
362.782 268.479 362.292 267.955 362.316 267.336 cv
362.34 266.718 362.878 266.241 363.516 266.27 cv
364.154 266.299 364.644 266.822 364.612 267.441 cv
364.579 268.059 364.042 268.537 363.413 268.508 cv
cp
361.68 257.867 mo
359.4 261.139 354.423 255.093 354.423 255.093 cv
354.423 255.093 349.446 261.139 347.167 257.867 cv
346.103 256.34 349.738 254.535 351.829 254.437 cv
351.829 254.437 343.287 253.446 345.381 249.766 cv
347.231 246.517 351.673 251.437 351.673 251.437 cv
351.673 251.437 350.028 248.452 351.031 244.86 cv
352.021 241.309 354.423 240.715 354.423 236.93 cv
354.423 240.715 356.825 241.309 357.816 244.86 cv
358.818 248.452 357.173 251.437 357.173 251.437 cv
357.173 251.437 361.615 246.517 363.465 249.766 cv
365.559 253.446 357.018 254.437 357.018 254.437 cv
359.109 254.535 362.743 256.34 361.68 257.867 cv
cp
360.084 268.365 mo
359.454 268.356 358.955 267.846 358.968 267.227 cv
358.982 266.609 359.511 266.115 360.15 266.125 cv
360.789 266.137 361.287 266.674 361.265 267.289 cv
361.242 267.911 360.714 268.377 360.084 268.365 cv
cp
358.063 270.253 mo
357.44 270.243 356.94 269.734 356.948 269.115 cv
356.955 268.496 357.473 268.002 358.107 268.012 cv
358.739 268.022 359.239 268.532 359.223 269.15 cv
359.206 269.769 358.688 270.262 358.063 270.253 cv
cp
357.019 265.209 mo
357.026 264.591 357.555 264.096 358.2 264.106 cv
358.846 264.116 359.355 264.628 359.339 265.245 cv
359.323 265.864 358.794 266.358 358.157 266.348 cv
357.521 266.338 357.011 265.828 357.019 265.209 cv
cp
356.046 268.303 mo
355.416 268.293 354.905 267.783 354.906 267.164 cv
354.907 266.545 355.426 266.052 356.065 266.062 cv
356.703 266.072 357.213 266.581 357.204 267.2 cv
357.194 267.819 356.676 268.312 356.046 268.303 cv
cp
352.716 268.304 mo
352.085 268.314 351.567 267.82 351.557 267.201 cv
351.547 266.582 352.056 266.073 352.696 266.063 cv
353.334 266.053 353.853 266.546 353.855 267.165 cv
353.855 267.784 353.345 268.294 352.716 268.304 cv
cp
350.768 270.253 mo
350.145 270.262 349.627 269.77 349.61 269.15 cv
349.594 268.532 350.093 268.022 350.725 268.012 cv
351.358 268.002 351.877 268.496 351.884 269.115 cv
351.892 269.734 351.393 270.243 350.768 270.253 cv
cp
349.531 265.245 mo
349.515 264.627 350.025 264.116 350.67 264.106 cv
351.315 264.096 351.844 264.591 351.852 265.208 cv
351.86 265.827 351.35 266.337 350.713 266.348 cv
350.076 266.357 349.547 265.864 349.531 265.245 cv
cp
348.677 268.367 mo
348.047 268.383 347.519 267.914 347.496 267.293 cv
347.473 266.677 347.972 266.143 348.611 266.127 cv
349.25 266.117 349.778 266.61 349.793 267.228 cv
349.807 267.848 349.308 268.357 348.677 268.367 cv
cp
345.349 268.511 mo
344.719 268.54 344.182 268.062 344.149 267.444 cv
344.116 266.826 344.607 266.302 345.245 266.273 cv
345.883 266.244 346.421 266.722 346.445 267.34 cv
346.469 267.958 345.979 268.483 345.349 268.511 cv
cp
343.475 270.517 mo
342.85 270.539 342.314 270.081 342.276 269.463 cv
342.237 268.845 342.716 268.302 343.349 268.279 cv
343.981 268.251 344.518 268.729 344.548 269.347 cv
344.579 269.965 344.098 270.489 343.475 270.517 cv
cp
341.316 268.733 mo
340.687 268.779 340.14 268.316 340.095 267.698 cv
340.05 267.081 340.53 266.543 341.167 266.497 cv
341.804 266.45 342.35 266.913 342.387 267.531 cv
342.424 268.149 341.944 268.687 341.316 268.733 cv
cp
337.992 268.975 mo
337.362 269.019 336.809 268.562 336.755 267.949 cv
336.7 267.329 337.171 266.786 337.809 266.742 cv
338.445 266.695 338.999 267.158 339.046 267.775 cv
339.092 268.392 338.621 268.93 337.992 268.975 cv
cp
336.189 271.059 mo
335.567 271.12 335.014 270.671 334.954 270.055 cv
334.893 269.439 335.355 268.889 335.985 268.827 cv
336.615 268.765 337.168 269.213 337.22 269.832 cv
337.273 270.447 336.811 270.997 336.189 271.059 cv
cp
333.969 269.35 mo
333.34 269.412 332.778 268.964 332.712 268.348 cv
332.646 267.733 333.108 267.184 333.743 267.121 cv
334.378 267.058 334.941 267.506 334.999 268.123 cv
335.058 268.739 334.596 269.288 333.969 269.35 cv
cp
330.654 269.705 mo
330.028 269.782 329.46 269.346 329.385 268.732 cv
329.309 268.117 329.762 267.557 330.395 267.479 cv
331.029 267.401 331.597 267.836 331.665 268.452 cv
331.732 269.066 331.281 269.628 330.654 269.705 cv
cp
328.922 271.85 mo
328.301 271.927 327.733 271.492 327.652 270.878 cv
327.572 270.264 328.015 269.704 328.643 269.627 cv
329.272 269.549 329.84 269.985 329.913 270.6 cv
329.986 271.215 329.543 271.774 328.922 271.85 cv
cp
326.643 270.198 mo
326.018 270.289 325.442 269.866 325.356 269.253 cv
325.27 268.64 325.712 268.069 326.344 267.978 cv
326.977 267.898 327.554 268.333 327.633 268.947 cv
327.712 269.561 327.269 270.12 326.643 270.198 cv
cp
323.344 270.678 mo
322.719 270.769 322.136 270.347 322.041 269.735 cv
321.945 269.124 322.38 268.554 323.012 268.462 cv
323.644 268.37 324.227 268.792 324.314 269.405 cv
324.403 270.017 323.968 270.587 323.344 270.678 cv
cp
321.681 272.869 mo
321.063 272.972 320.482 272.56 320.382 271.949 cv
320.281 271.339 320.705 270.759 321.33 270.655 cv
321.953 270.546 322.538 270.98 322.631 271.588 cv
322.725 272.204 322.297 272.761 321.681 272.869 cv
cp
319.351 271.312 mo
318.729 271.416 318.139 271.005 318.033 270.396 cv
317.927 269.786 318.351 269.207 318.981 269.102 cv
319.61 268.997 320.2 269.407 320.299 270.018 cv
320.398 270.629 319.974 271.208 319.351 271.312 cv
cp
316.068 271.885 mo
315.447 272.001 314.852 271.602 314.737 270.993 cv
314.621 270.385 315.036 269.798 315.665 269.681 cv
316.292 269.564 316.887 269.963 316.995 270.572 cv
317.103 271.182 316.688 271.769 316.068 271.885 cv
cp
314.477 274.133 mo
313.862 274.245 313.267 273.851 313.147 273.246 cv
313.026 272.636 313.432 272.046 314.055 271.932 cv
314.677 271.816 315.273 272.215 315.386 272.824 cv
315.499 273.433 315.092 274.018 314.477 274.133 cv
cp
312.098 272.647 mo
311.48 272.773 310.877 272.385 310.75 271.779 cv
310.625 271.173 311.03 270.578 311.655 270.45 cv
312.281 270.322 312.884 270.71 313.002 271.318 cv
313.121 271.925 312.716 272.52 312.098 272.647 cv
cp
308.836 273.327 mo
308.22 273.465 307.612 273.086 307.476 272.482 cv
307.341 271.878 307.735 271.277 308.359 271.138 cv
308.981 270.995 309.592 271.385 309.72 271.991 cv
309.848 272.596 309.45 273.187 308.836 273.327 cv
cp
307.324 275.63 mo
306.713 275.763 306.107 275.392 305.965 274.79 cv
305.823 274.186 306.208 273.579 306.826 273.445 cv
307.444 273.307 308.053 273.685 308.186 274.29 cv
308.32 274.895 307.934 275.494 307.324 275.63 cv
cp
304.896 274.226 mo
304.283 274.372 303.667 274.004 303.519 273.403 cv
303.371 272.802 303.755 272.194 304.377 272.046 cv
304.998 271.897 305.614 272.265 305.754 272.868 cv
305.894 273.471 305.51 274.079 304.896 274.226 cv
cp
301.664 275.024 mo
301.053 275.178 300.431 274.822 300.272 274.226 cv
300.113 273.626 300.485 273.011 301.105 272.854 cv
301.724 272.696 302.348 273.054 302.498 273.655 cv
302.647 274.255 302.274 274.868 301.664 275.024 cv
cp
300.248 277.38 mo
299.649 277.541 299.029 277.191 298.862 276.596 cv
298.694 275.999 299.053 275.381 299.663 275.217 cv
300.274 275.053 300.894 275.403 301.051 276.004 cv
301.207 276.601 300.848 277.219 300.248 277.38 cv
cp
297.83 272.829 mo
297.664 272.232 298.035 271.61 298.661 271.441 cv
299.288 271.272 299.922 271.62 300.078 272.221 cv
300.234 272.817 299.862 273.439 299.246 273.605 cv
298.631 273.77 297.997 273.422 297.83 272.829 cv
cp
297.773 276.076 mo
297.169 276.246 296.542 275.916 296.361 275.322 cv
296.18 274.732 296.536 274.096 297.154 273.923 cv
297.771 273.748 298.404 274.088 298.569 274.686 cv
298.733 275.282 298.377 275.905 297.773 276.076 cv
cp
306.475 271.817 mo
305.854 271.953 305.237 271.582 305.096 270.982 cv
304.955 270.378 305.349 269.768 305.978 269.631 cv
306.607 269.491 307.226 269.868 307.359 270.472 cv
307.492 271.076 307.097 271.679 306.475 271.817 cv
cp
300.901 263.203 mo
300.901 263.203 298.799 261.861 298.186 259.203 cv
297.58 256.575 298.915 255.354 297.591 252.922 cv
298.915 255.354 300.666 254.894 302.545 256.829 cv
304.445 258.785 304.433 261.279 304.433 261.279 cv
304.433 261.279 305.565 256.563 307.89 258.004 cv
310.523 259.634 305.383 263.26 305.383 263.26 cv
306.761 262.591 309.727 262.479 309.578 263.832 cv
309.258 266.731 303.946 264.589 303.946 264.589 cv
303.946 264.589 302.864 270.214 300.255 268.91 cv
299.038 268.301 300.741 265.87 302.05 265.075 cv
302.05 265.075 296.216 267.427 296.274 264.331 cv
296.325 261.597 300.901 263.203 300.901 263.203 cv
cp
314.688 268.98 mo
314.801 269.589 314.385 270.177 313.759 270.294 cv
313.133 270.409 312.529 270.014 312.41 269.41 cv
312.289 268.801 312.703 268.208 313.337 268.092 cv
313.97 267.974 314.575 268.373 314.688 268.98 cv
cp
322.058 267.724 mo
322.152 268.339 321.714 268.898 321.088 269.008 cv
320.46 269.112 319.87 268.702 319.769 268.091 cv
319.669 267.482 320.102 266.9 320.737 266.794 cv
321.371 266.683 321.965 267.117 322.058 267.724 cv
cp
329.467 266.719 mo
329.54 267.333 329.086 267.895 328.455 267.973 cv
327.823 268.05 327.246 267.615 327.166 267.001 cv
327.085 266.389 327.538 265.827 328.177 265.748 cv
328.816 265.669 329.393 266.105 329.467 266.719 cv
cp
319.365 256.906 mo
319.985 253.703 325.032 256.527 325.032 256.527 cv
325.032 256.527 322.838 254.52 322.662 251.271 cv
322.488 248.059 324.306 246.898 323.248 243.77 cv
324.306 246.898 326.457 246.716 328.269 249.374 cv
330.102 252.062 329.577 254.989 329.577 254.989 cv
329.577 254.989 331.872 249.68 334.31 251.849 cv
337.069 254.304 330.288 257.512 330.288 257.512 cv
332.043 257.008 335.551 257.483 335.099 259.042 cv
334.131 262.384 328.327 258.779 328.327 258.779 cv
328.327 258.779 325.905 265.167 323.106 263.101 cv
321.8 262.136 324.299 259.628 325.999 258.963 cv
325.999 258.963 318.663 260.532 319.365 256.906 cv
cp
336.904 265.938 mo
336.956 266.552 336.486 267.105 335.852 267.167 cv
335.219 267.23 334.657 266.781 334.597 266.165 cv
334.536 265.55 335.007 264.998 335.648 264.934 cv
336.289 264.872 336.852 265.32 336.904 265.938 cv
cp
343.148 264.378 mo
343.793 264.349 344.339 264.827 344.371 265.445 cv
344.401 266.063 343.91 266.587 343.274 266.616 cv
342.637 266.639 342.092 266.179 342.053 265.562 cv
342.015 264.945 342.504 264.402 343.148 264.378 cv
cp
365.722 264.379 mo
366.367 264.403 366.856 264.948 366.817 265.564 cv
366.778 266.182 366.232 266.641 365.596 266.618 cv
364.96 266.589 364.469 266.064 364.5 265.446 cv
364.53 264.829 365.078 264.35 365.722 264.379 cv
cp
373.222 264.938 mo
373.863 265 374.333 265.553 374.274 266.168 cv
374.214 266.784 373.651 267.232 373.018 267.17 cv
372.384 267.108 371.914 266.556 371.966 265.94 cv
372.019 265.323 372.581 264.874 373.222 264.938 cv
cp
381.704 267.005 mo
381.624 267.618 381.046 268.053 380.415 267.976 cv
379.783 267.898 379.331 267.337 379.404 266.722 cv
379.477 266.109 380.054 265.673 380.693 265.751 cv
381.333 265.83 381.785 266.392 381.704 267.005 cv
cp
389.101 268.095 mo
389 268.706 388.41 269.117 387.782 269.012 cv
387.156 268.903 386.719 268.343 386.813 267.728 cv
386.905 267.12 387.499 266.687 388.133 266.798 cv
388.768 266.904 389.202 267.486 389.101 268.095 cv
cp
374.537 251.849 mo
376.974 249.68 379.269 254.989 379.269 254.989 cv
379.269 254.989 378.744 252.062 380.577 249.374 cv
382.389 246.716 384.54 246.898 385.598 243.77 cv
384.54 246.898 386.359 248.059 386.185 251.271 cv
386.009 254.52 383.814 256.527 383.814 256.527 cv
383.814 256.527 388.861 253.703 389.481 256.906 cv
390.183 260.532 382.847 258.963 382.847 258.963 cv
384.547 259.628 387.046 262.136 385.74 263.101 cv
382.942 265.167 380.519 258.779 380.519 258.779 cv
380.519 258.779 374.716 262.384 373.747 259.042 cv
373.295 257.483 376.803 257.008 378.559 257.512 cv
378.559 257.512 371.777 254.304 374.537 251.849 cv
cp
395.533 268.097 mo
396.167 268.213 396.581 268.806 396.46 269.415 cv
396.34 270.02 395.737 270.413 395.11 270.298 cv
394.485 270.182 394.069 269.594 394.182 268.985 cv
394.295 268.378 394.9 267.979 395.533 268.097 cv
cp
432.579 216.328 mo
430.069 216.328 428.034 218.363 428.034 220.873 cv
428.034 221.973 428.441 222.969 429.091 223.755 cv
397.781 249.62 li
397.781 212.363 li
400.26 212.327 402.261 210.312 402.261 207.824 cv
402.261 205.314 400.226 203.279 397.716 203.279 cv
395.206 203.279 393.171 205.314 393.171 207.824 cv
393.171 209.23 393.823 210.471 394.825 211.305 cv
370.748 242.464 li
356.008 202.979 li
357.733 202.334 358.968 200.685 358.968 198.734 cv
358.968 196.224 356.933 194.189 354.423 194.189 cv
351.913 194.189 349.878 196.224 349.878 198.734 cv
349.878 200.685 351.113 202.334 352.838 202.979 cv
338.099 242.464 li
314.021 211.305 li
315.023 210.471 315.675 209.23 315.675 207.824 cv
315.675 205.314 313.64 203.279 311.13 203.279 cv
308.62 203.279 306.585 205.314 306.585 207.824 cv
306.585 210.312 308.586 212.327 311.066 212.363 cv
311.066 249.62 li
279.755 223.755 li
280.406 222.969 280.812 221.973 280.812 220.873 cv
280.812 218.363 278.777 216.328 276.267 216.328 cv
273.757 216.328 271.722 218.363 271.722 220.873 cv
271.722 223.384 273.757 225.419 276.267 225.419 cv
276.752 225.419 277.21 225.322 277.648 225.182 cv
295.894 282.091 li
295.894 282.091 322.097 273.784 354.419 273.784 cv
386.749 273.784 412.953 282.091 412.953 282.091 cv
431.198 225.182 li
431.636 225.322 432.094 225.419 432.579 225.419 cv
435.09 225.419 437.124 223.384 437.124 220.873 cv
437.124 218.363 435.09 216.328 432.579 216.328 cv
cp
f
210.461 360.212 mo
209.963 362.383 208.396 364.118 206.268 364.851 cv
205.908 364.975 li
205.637 364.706 li
204.057 363.126 203.412 360.874 203.911 358.68 cv
204.422 356.502 205.995 354.769 208.117 354.039 cv
208.478 353.915 li
208.747 354.184 li
210.332 355.769 210.972 358.023 210.461 360.212 cv
cp
202.317 358.308 mo
202.041 359.488 201.955 360.684 202.061 361.862 cv
202.28 364.371 203.341 366.742 205.062 368.584 cv
206.838 367.911 208.408 366.808 209.621 365.381 cv
209.631 365.369 209.641 365.358 209.651 365.347 cv
210.834 363.981 211.647 362.378 212.068 360.582 cv
212.927 356.873 211.902 353.06 209.323 350.304 cv
205.784 351.632 203.179 354.597 202.317 358.308 cv
cp
f
140.379 400.928 mo
140.379 400.928 li
104.226 400.928 79.9398 406.188 79.9398 411.099 cv
79.9398 416.01 104.226 421.27 140.379 421.27 cv
140.379 421.27 li
176.533 421.27 200.818 416.01 200.818 411.099 cv
200.818 406.188 176.533 400.928 140.379 400.928 cv
cp
f
204.734 369.993 mo
204.465 369.723 li
202.762 368.021 201.603 365.863 201.095 363.534 cv
199.831 365.349 198.41 367.093 196.839 368.727 cv
194.618 371.022 192.167 373.056 189.554 374.772 cv
189.054 375.1 li
188.716 374.608 li
187.126 372.289 185.771 369.788 184.687 367.169 cv
183.455 364.189 182.603 361.073 182.105 357.898 cv
180.42 359.693 178.321 361.056 175.961 361.861 cv
175.601 361.984 li
175.333 361.714 li
173.84 360.221 172.695 358.41 171.935 356.447 cv
169.9 358.762 167.688 360.913 165.331 362.83 cv
162.425 365.198 159.259 367.276 155.922 369.004 cv
155.522 369.212 li
155.206 368.889 li
152.912 366.551 150.879 363.946 149.163 361.15 cv
146.898 357.421 145.223 353.381 144.159 349.128 cv
143.14 350.178 141.985 351.119 140.703 351.922 cv
140.698 351.926 140.691 351.924 140.685 351.928 cv
140.594 351.981 140.493 352.011 140.388 352.013 cv
140.385 352.013 140.383 352.015 140.38 352.015 cv
140.38 352.015 140.379 352.015 140.379 352.015 cv
140.379 352.015 li
140.378 352.015 li
140.376 352.015 140.373 352.013 140.37 352.013 cv
140.265 352.011 140.164 351.981 140.073 351.928 cv
140.067 351.924 140.06 351.926 140.055 351.922 cv
138.774 351.119 137.62 350.178 136.6 349.128 cv
135.536 353.381 133.861 357.42 131.597 361.148 cv
129.879 363.948 127.845 366.552 125.552 368.89 cv
125.236 369.212 li
124.836 369.004 li
121.498 367.274 118.333 365.197 115.427 362.83 cv
113.07 360.913 110.859 358.762 108.823 356.447 cv
108.064 358.41 106.919 360.221 105.426 361.714 cv
105.157 361.984 li
104.797 361.861 li
102.438 361.056 100.34 359.694 98.6531 357.897 cv
98.1556 361.072 97.3047 364.187 96.0715 367.169 cv
94.9882 369.788 93.6324 372.291 92.0424 374.608 cv
91.7038 375.1 li
91.2042 374.772 li
88.5911 373.055 86.1407 371.022 83.9211 368.728 cv
82.3491 367.094 80.9277 365.349 79.6641 363.535 cv
79.1564 365.862 77.9969 368.02 76.2935 369.723 cv
76.0246 369.993 li
75.6645 369.87 li
74.4488 369.455 73.327 368.844 72.3087 368.096 cv
73.6898 371.456 74.9449 374.859 76.0395 378.25 cv
77.6133 383.094 78.9122 388.103 79.9327 393.153 cv
85.4783 387.956 110.476 384.151 140.379 384.151 cv
140.379 384.151 li
170.269 384.151 195.258 387.952 200.825 393.159 cv
201.846 388.107 203.145 383.095 204.719 378.249 cv
205.814 374.859 207.069 371.456 208.45 368.096 cv
207.432 368.844 206.31 369.455 205.094 369.87 cv
204.734 369.993 li
cp
f
174.705 348.335 mo
175.31 345.709 177.195 343.626 179.745 342.767 cv
180.103 342.647 li
180.37 342.913 li
182.284 344.812 183.057 347.514 182.439 350.14 cv
181.833 352.763 179.946 354.847 177.389 355.719 cv
177.028 355.842 li
176.759 355.571 li
174.858 353.656 174.09 350.951 174.705 348.335 cv
cp
172.749 355.159 mo
173.379 357.174 174.474 359.039 175.929 360.576 cv
178.339 359.68 180.44 358.149 182.023 356.132 cv
183.301 354.528 184.186 352.688 184.656 350.657 cv
185.731 346.049 184.441 341.314 181.204 337.911 cv
176.797 339.543 173.547 343.22 172.476 347.818 cv
171.911 350.224 172 352.74 172.733 355.094 cv
172.739 355.116 172.744 355.137 172.749 355.159 cv
cp
f
74.8513 364.975 mo
74.4906 364.851 li
72.3628 364.118 70.796 362.383 70.2982 360.212 cv
69.7866 358.023 70.4269 355.769 72.0116 354.184 cv
72.2811 353.915 li
72.6418 354.039 li
74.7642 354.769 76.3364 356.502 76.8473 358.676 cv
77.3469 360.874 76.7018 363.126 75.1213 364.706 cv
74.8513 364.975 li
cp
78.6973 361.865 mo
78.8028 360.685 78.717 359.489 78.4421 358.308 cv
77.58 354.597 74.9747 351.632 71.4363 350.304 cv
68.8572 353.06 67.8317 356.873 68.6914 360.583 cv
69.1118 362.378 69.9244 363.981 71.1072 365.347 cv
71.1179 365.358 71.1281 365.369 71.1376 365.381 cv
72.3508 366.808 73.9212 367.911 75.6973 368.584 cv
77.4178 366.742 78.4791 364.371 78.6973 361.865 cv
cp
f
100.389 342.913 mo
100.656 342.647 li
101.014 342.767 li
103.564 343.626 105.448 345.709 106.054 348.337 cv
106.669 350.951 105.901 353.656 104 355.571 cv
103.731 355.842 li
103.369 355.719 li
100.813 354.849 98.9254 352.763 98.3197 350.14 cv
97.702 347.514 98.4753 344.812 100.389 342.913 cv
cp
98.7361 356.133 mo
100.322 358.151 102.422 359.681 104.83 360.576 cv
106.285 359.039 107.38 357.174 108.01 355.159 cv
108.014 355.137 108.02 355.116 108.026 355.094 cv
108.759 352.74 108.848 350.224 108.283 347.819 cv
107.211 343.22 103.961 339.543 99.5544 337.911 cv
96.3177 341.314 95.0281 346.049 96.1019 350.656 cv
96.5729 352.687 97.4576 354.528 98.7322 356.128 cv
98.7335 356.129 98.7349 356.131 98.7361 356.133 cv
cp
f
140.021 328.275 mo
140.025 328.272 140.029 328.269 140.033 328.266 cv
140.042 328.261 140.049 328.254 140.057 328.249 cv
140.083 328.233 140.112 328.23 140.139 328.219 cv
140.18 328.201 140.219 328.181 140.263 328.172 cv
140.302 328.165 140.34 328.168 140.379 328.168 cv
140.379 328.168 li
140.418 328.168 140.456 328.165 140.495 328.172 cv
140.539 328.181 140.578 328.201 140.619 328.218 cv
140.646 328.23 140.675 328.233 140.701 328.249 cv
140.71 328.254 140.717 328.261 140.725 328.266 cv
140.729 328.269 140.733 328.272 140.737 328.274 cv
143.487 329.998 145.129 332.958 145.129 336.203 cv
145.129 339.457 143.474 342.436 140.703 344.168 cv
140.697 344.172 140.691 344.17 140.685 344.173 cv
140.594 344.227 140.493 344.257 140.388 344.259 cv
140.385 344.259 140.383 344.261 140.38 344.261 cv
140.38 344.261 140.379 344.261 140.379 344.261 cv
140.379 344.261 li
140.378 344.261 li
140.376 344.261 140.373 344.259 140.37 344.259 cv
140.265 344.257 140.164 344.227 140.073 344.173 cv
140.067 344.17 140.061 344.172 140.055 344.168 cv
137.284 342.436 135.63 339.457 135.63 336.203 cv
135.63 332.958 137.272 329.999 140.021 328.275 cv
cp
140.379 350.667 mo
140.379 350.667 li
141.758 349.761 142.985 348.695 144.017 347.48 cv
146.72 344.35 148.206 340.347 148.206 336.203 cv
148.206 330.319 145.284 324.948 140.379 321.747 cv
140.379 321.747 li
135.474 324.947 132.553 330.319 132.553 336.203 cv
132.553 340.347 134.039 344.35 136.739 347.476 cv
137.774 348.694 139.001 349.761 140.379 350.667 cv
cp
f
140.379 397.973 mo
140.379 397.973 li
132.856 397.973 124.86 396.188 124.86 392.882 cv
124.86 389.575 132.856 387.79 140.379 387.79 cv
140.379 387.79 li
147.903 387.79 155.899 389.575 155.899 392.882 cv
155.899 396.188 147.903 397.973 140.379 397.973 cv
cp
182.425 397.288 mo
182.058 396.627 181.957 395.995 182.125 395.412 cv
182.289 394.83 182.707 394.346 183.369 393.978 cv
185.855 392.591 191.91 392.91 198.434 394.774 cv
199.35 395.038 200.122 395.278 200.814 395.512 cv
200.809 395.282 200.75 395.061 200.627 394.84 cv
198.203 390.179 175.01 385.372 140.379 385.372 cv
140.379 385.372 li
105.749 385.372 82.5558 390.179 80.1401 394.824 cv
80.0084 395.061 79.9492 395.283 79.944 395.512 cv
80.6321 395.28 81.4059 395.039 82.3227 394.774 cv
88.8498 392.91 94.9047 392.592 97.3903 393.978 cv
98.0514 394.346 98.4699 394.83 98.6351 395.414 cv
98.8014 395.995 98.7007 396.627 98.334 397.288 cv
96.9574 399.77 91.6442 402.69 85.1135 404.555 cv
83.4098 405.045 81.6717 405.423 79.9398 405.708 cv
79.9398 408.828 li
84.9945 404.08 105.811 399.707 140.379 399.707 cv
140.379 399.707 li
174.947 399.707 195.764 404.08 200.818 408.828 cv
200.818 405.709 li
199.101 405.427 197.357 405.048 195.644 404.555 cv
189.115 402.69 183.801 399.77 182.425 397.288 cv
cp
f
409.925 394.029 mo
407.666 402.004 li
408.724 402.314 409.692 402.638 410.554 402.97 cv
411.049 401.771 412.256 398.841 413.08 396.824 cv
413.08 395.106 li
413.08 395.093 413.075 395.08 413.074 395.066 cv
412.121 394.711 411.097 394.372 409.925 394.029 cv
cp
f
388.784 402.264 mo
378.715 400.997 366.851 400.328 354.477 400.328 cv
354.477 400.328 li
354.477 400.328 li
354.37 400.328 li
341.995 400.328 330.132 400.997 320.064 402.264 cv
302.131 404.526 295.767 407.947 295.767 410.19 cv
295.767 414.952 319.316 420.052 354.37 420.052 cv
354.477 420.052 li
354.477 420.052 li
354.477 420.052 li
389.532 420.052 413.08 414.952 413.08 410.19 cv
413.08 407.948 406.717 404.526 388.784 402.264 cv
cp
f
422.865 361.061 mo
422.409 358.845 li
422.183 357.613 421.837 354.042 422.917 352.187 cv
423.427 351.401 425.088 350.591 426.396 350.046 cv
427.729 349.489 li
422.865 361.061 li
cp
418.825 349.8 mo
417.224 352.563 417.348 356.353 417.564 358.366 cv
417.589 358.606 li
417.44 358.797 li
406.903 372.122 li
407.473 374.069 407.957 376.009 408.352 377.911 cv
414.463 370.202 421.156 361.738 421.467 361.335 cv
421.504 361.296 li
421.512 361.287 421.52 361.279 421.528 361.271 cv
421.55 361.247 li
421.581 361.219 421.619 361.206 421.654 361.185 cv
421.674 361.174 421.692 361.159 421.713 361.151 cv
421.94 361.051 422.211 361.094 422.386 361.288 cv
422.417 361.322 422.418 361.367 422.44 361.406 cv
422.461 361.443 422.479 361.48 422.492 361.521 cv
422.507 361.572 422.522 361.616 422.523 361.667 cv
422.528 361.75 422.518 361.835 422.484 361.918 cv
422.481 361.925 422.473 361.945 422.468 361.958 cv
422.108 362.835 416.768 375.488 412.852 384.769 cv
410.247 390.943 li
412.317 391.93 413.591 392.998 414.047 394.131 cv
435.79 342.532 li
431.3 343.544 li
428.909 344.091 420.94 346.158 418.825 349.8 cv
cp
f
408.651 390.259 mo
408.545 387.067 408.214 383.861 407.665 380.69 cv
406.222 382.522 404.842 384.27 403.606 385.827 cv
403.714 386.749 403.795 387.711 403.852 388.727 cv
405.731 389.226 407.313 389.732 408.651 390.259 cv
cp
f
395.875 351.371 mo
394.087 352.184 li
392.033 353.127 386.717 355.673 380.841 359.295 cv
381.818 360.51 382.794 361.794 383.757 363.134 cv
387.951 360.557 391.755 358.593 393.686 357.638 cv
394.183 357.391 li
394.46 357.872 li
396.352 361.145 399.761 367.811 401.942 376.486 cv
405.593 371.87 li
402.292 360.828 397.537 353.763 397.002 352.989 cv
395.875 351.371 li
cp
f
398.907 400.001 mo
399.99 400.197 401.092 400.412 402.196 400.644 cv
403.957 392.544 li
402.733 392.29 401.519 392.053 400.337 391.839 cv
398.907 400.001 li
cp
f
402.553 387.159 mo
401.73 388.203 li
402.04 388.274 402.345 388.347 402.645 388.42 cv
402.618 387.993 402.59 387.567 402.553 387.159 cv
cp
f
402.375 385.475 mo
402.144 383.401 401.801 381.317 401.342 379.154 cv
395.2 386.921 li
397.054 387.23 398.815 387.563 400.447 387.917 cv
402.375 385.475 li
cp
f
384.44 364.104 mo
389.824 371.948 392.549 379.297 392.758 386.533 cv
393.133 386.589 393.503 386.645 393.863 386.703 cv
401.012 377.662 li
398.982 369.106 395.682 362.435 393.711 358.948 cv
391.699 359.957 388.236 361.776 384.44 364.104 cv
cp
f
393.249 390.744 mo
392.52 390.64 391.78 390.549 391.027 390.456 cv
390.796 390.427 li
389.823 398.659 li
390.979 398.796 392.112 398.945 393.21 399.101 cv
394.39 390.896 li
394.016 390.842 393.638 390.792 393.26 390.745 cv
393.249 390.744 li
cp
f
403.103 402.049 mo
402.525 401.925 li
401.045 401.606 399.563 401.316 398.121 401.064 cv
397.537 400.962 li
399.375 390.467 li
399.959 390.57 li
401.522 390.845 403.147 391.16 404.785 391.508 cv
405.368 391.632 li
403.103 402.049 li
cp
394.213 400.443 mo
393.626 400.358 li
392.176 400.145 390.655 399.944 389.098 399.768 cv
389.093 399.767 li
388.507 399.701 li
389.761 389.106 li
391.171 389.282 li
391.93 389.374 392.676 389.467 393.409 389.571 cv
393.411 389.571 393.412 389.571 393.414 389.571 cv
393.995 389.643 394.577 389.726 395.146 389.809 cv
395.731 389.896 li
394.213 400.443 li
cp
385.114 399.332 mo
384.523 399.271 li
383.024 399.118 381.487 398.987 379.929 398.857 cv
379.341 398.808 li
380.181 388.195 li
380.771 388.242 li
382.409 388.373 383.998 388.515 385.565 388.669 cv
386.153 388.728 li
385.114 399.332 li
cp
375.914 398.576 mo
375.324 398.539 li
373.81 398.444 372.274 398.361 370.7 398.279 cv
370.112 398.249 li
370.618 387.606 li
371.211 387.638 li
372.836 387.721 374.423 387.803 375.988 387.898 cv
376.58 387.934 li
375.914 398.576 li
cp
366.662 398.124 mo
366.067 398.102 li
364.544 398.043 363.008 398.007 361.447 397.971 cv
360.859 397.957 li
361.059 387.303 li
361.652 387.316 li
363.265 387.352 364.864 387.399 366.429 387.447 cv
367.022 387.465 li
366.662 398.124 li
cp
357.396 397.912 mo
354.477 397.901 li
354.477 397.901 li
354.37 397.901 li
352.037 397.912 li
351.45 397.912 li
351.37 387.257 li
354.37 387.246 li
354.477 387.246 li
354.477 387.246 li
357.476 387.257 li
357.396 397.912 li
cp
347.399 397.971 mo
345.838 398.007 344.303 398.043 342.779 398.102 cv
342.185 398.124 li
341.825 387.465 li
342.418 387.447 li
343.982 387.399 345.583 387.352 347.194 387.316 cv
347.787 387.303 li
347.987 397.957 li
347.399 397.971 li
cp
338.146 398.279 mo
336.573 398.361 335.036 398.444 333.523 398.539 cv
332.932 398.576 li
332.266 387.934 li
332.858 387.898 li
334.423 387.803 336.011 387.72 337.635 387.638 cv
338.228 387.608 li
338.735 398.249 li
338.146 398.279 li
cp
328.919 398.857 mo
327.359 398.987 325.824 399.118 324.323 399.271 cv
323.732 399.332 li
322.694 388.728 li
323.283 388.669 li
324.848 388.515 326.438 388.373 328.076 388.242 cv
328.667 388.195 li
329.506 398.808 li
328.919 398.857 li
cp
319.754 399.767 mo
319.748 399.768 li
318.192 399.944 316.672 400.144 315.221 400.358 cv
314.633 400.443 li
313.115 389.896 li
313.7 389.809 li
314.269 389.726 314.852 389.643 315.433 389.571 cv
315.434 389.571 315.436 389.571 315.437 389.571 cv
316.169 389.467 316.913 389.375 317.671 389.282 cv
319.087 389.106 li
320.339 399.701 li
319.754 399.767 li
cp
310.727 401.064 mo
309.285 401.316 307.803 401.605 306.322 401.925 cv
305.744 402.049 li
303.479 391.632 li
304.061 391.508 li
305.703 391.16 307.328 390.844 308.888 390.57 cv
309.472 390.467 li
311.311 400.962 li
310.727 401.064 li
cp
411.199 404.511 mo
410.652 404.284 li
409.557 403.832 408.253 403.394 406.776 402.981 cv
406.203 402.821 li
409.109 392.565 li
409.678 392.726 li
410.562 392.976 411.362 393.223 412.103 393.469 cv
411.529 392.962 410.634 392.391 409.243 391.778 cv
409.053 391.699 li
407.527 391.033 405.543 390.383 403.149 389.763 cv
403.108 389.755 403.067 389.749 403.031 389.733 cv
402.242 389.532 401.423 389.341 400.557 389.15 cv
398.561 388.711 396.362 388.298 394.02 387.926 cv
393.911 387.907 393.797 387.892 393.687 387.874 cv
393.17 387.79 392.647 387.71 392.12 387.633 cv
389.994 387.325 388.056 387.078 386.178 386.875 cv
377.831 385.937 368.259 385.382 358.495 385.269 cv
358.218 385.266 li
356.983 385.256 355.73 385.244 354.477 385.244 cv
354.477 385.244 li
354.477 385.244 li
354.37 385.244 li
353.116 385.244 351.863 385.256 350.628 385.266 cv
350.349 385.269 li
340.586 385.382 331.015 385.937 322.672 386.875 cv
320.791 387.078 318.853 387.325 316.747 387.631 cv
316.212 387.708 315.682 387.789 315.16 387.874 cv
315.052 387.892 314.939 387.906 314.832 387.924 cv
312.482 388.299 310.283 388.711 308.29 389.15 cv
307.424 389.341 306.605 389.532 305.816 389.733 cv
305.777 389.75 305.735 389.757 305.691 389.764 cv
303.297 390.385 301.316 391.034 299.805 391.694 cv
299.796 391.698 li
299.795 391.698 299.794 391.699 299.793 391.699 cv
299.598 391.78 li
299.597 391.781 299.597 391.781 299.596 391.781 cv
299.596 391.781 299.596 391.781 299.595 391.781 cv
299.593 391.782 li
298.2 392.395 297.305 392.968 296.734 393.473 cv
297.48 393.225 298.283 392.977 299.17 392.726 cv
299.739 392.565 li
302.643 402.821 li
302.071 402.981 li
300.593 403.394 299.289 403.832 298.194 404.284 cv
297.647 404.511 li
297.422 403.962 li
297.422 403.962 296.615 402.009 295.767 399.947 cv
295.767 407.855 li
299.613 404.189 312.003 402.087 319.916 401.09 cv
319.917 401.089 li
330.033 399.817 341.947 399.144 354.37 399.144 cv
354.477 399.144 li
354.477 399.144 li
366.899 399.144 378.813 399.816 388.93 401.089 cv
388.93 401.089 388.931 401.089 388.932 401.09 cv
396.844 402.087 409.235 404.189 413.08 407.855 cv
413.08 399.944 li
412.233 402.006 411.425 403.962 411.425 403.962 cv
411.199 404.511 li
cp
f
379.444 367.345 mo
383.986 373.924 386.392 379.958 386.785 385.752 cv
388.314 385.922 389.892 386.124 391.567 386.36 cv
391.319 379.41 388.654 372.32 383.433 364.728 cv
382.318 365.422 381.226 366.126 380.192 366.828 cv
379.941 367 379.693 367.172 379.444 367.345 cv
cp
f
380.615 397.726 mo
381.776 397.824 382.924 397.924 384.051 398.034 cv
384.86 389.79 li
383.68 389.677 382.487 389.571 381.267 389.47 cv
380.615 397.726 li
cp
f
377.804 367.054 mo
376.957 365.858 376 364.605 374.9 363.253 cv
364.871 370.459 359.424 377.63 359.108 384.06 cv
363.852 384.06 li
364.227 379.219 369.148 373.222 377.804 367.054 cv
cp
f
371.351 397.127 mo
372.52 397.19 373.67 397.252 374.807 397.322 cv
375.325 389.045 li
374.147 388.975 372.955 388.913 371.744 388.85 cv
371.351 397.127 li
cp
f
354.37 364.478 mo
354.263 364.478 354.154 364.449 354.057 364.389 cv
351.088 362.537 349.315 359.345 349.315 355.848 cv
349.315 352.352 351.087 349.159 354.057 347.307 cv
354.155 347.247 354.263 347.228 354.37 347.228 cv
354.477 347.228 li
354.585 347.228 354.693 347.246 354.79 347.307 cv
357.759 349.159 359.532 352.353 359.532 355.848 cv
359.532 359.344 357.759 362.537 354.79 364.388 cv
354.693 364.45 354.585 364.479 354.477 364.479 cv
354.477 364.478 li
354.477 364.479 li
354.37 364.478 li
cp
354.477 384.06 mo
355.636 384.06 356.793 384.071 357.938 384.081 cv
358.223 377.186 363.666 369.879 374.139 362.342 cv
370.367 357.827 366.227 353.672 362.553 349.999 cv
362.416 349.862 li
359.385 346.841 356.52 343.98 354.477 341.498 cv
354.37 341.499 li
352.33 343.977 349.463 346.839 346.429 349.864 cv
346.294 349.999 li
342.619 353.671 338.48 357.827 334.708 362.342 cv
345.18 369.877 350.624 377.184 350.909 384.081 cv
352.053 384.071 353.21 384.06 354.37 384.06 cv
354.477 384.06 li
354.477 384.06 li
354.477 384.06 li
cp
f
362.064 396.801 mo
363.227 396.828 364.376 396.857 365.519 396.897 cv
365.799 388.612 li
364.621 388.578 363.425 388.543 362.22 388.514 cv
362.064 396.801 li
cp
f
365.041 384.23 mo
372.274 384.461 379.263 384.934 385.585 385.622 cv
385.163 380.114 382.835 374.344 378.476 368.028 cv
370.059 374.028 365.321 379.745 365.041 384.23 cv
cp
f
354.477 388.43 mo
354.37 388.43 li
352.563 388.439 li
352.625 396.725 li
354.37 396.717 li
354.477 396.717 li
354.477 396.717 li
356.222 396.725 li
356.283 388.439 li
354.477 388.43 li
354.477 388.43 li
cp
f
298.292 402.97 mo
299.155 402.638 300.122 402.314 301.18 402.004 cv
298.922 394.029 li
297.732 394.377 296.7 394.72 295.773 395.068 cv
295.773 395.08 295.767 395.094 295.767 395.106 cv
295.767 396.825 li
296.592 398.847 297.798 401.773 298.292 402.97 cv
cp
f
281.118 349.489 mo
282.451 350.046 li
283.757 350.591 285.418 351.401 285.916 352.162 cv
287.011 354.042 286.665 357.613 286.441 358.833 cv
285.977 361.051 li
281.118 349.489 li
cp
297.424 388.157 mo
293.436 378.706 286.804 362.99 286.381 361.965 cv
286.231 361.74 286.259 361.448 286.462 361.245 cv
286.695 361.01 287.087 361.035 287.318 361.267 cv
287.33 361.278 li
287.67 361.711 294.271 370.058 300.494 377.911 cv
300.889 376.009 301.374 374.069 301.944 372.121 cv
291.258 358.608 li
291.284 358.367 li
291.499 356.352 291.622 352.56 290.022 349.8 cv
287.907 346.158 279.937 344.091 277.545 343.544 cv
273.057 342.532 li
294.798 394.13 li
295.24 393.009 296.518 391.934 298.6 390.942 cv
297.424 388.157 li
cp
f
300.197 390.259 mo
301.528 389.733 303.111 389.228 304.995 388.727 cv
305.052 387.713 305.132 386.753 305.24 385.827 cv
304.006 384.27 302.625 382.522 301.182 380.69 cv
300.633 383.867 300.301 387.073 300.197 390.259 cv
cp
f
312.972 351.371 mo
311.845 352.99 li
311.633 353.297 306.629 360.587 303.254 371.869 cv
306.905 376.486 li
309.086 367.81 312.494 361.145 314.386 357.872 cv
314.663 357.391 li
315.161 357.638 li
317.091 358.593 320.894 360.557 325.09 363.134 cv
326.06 361.786 327.035 360.503 328.005 359.295 cv
322.14 355.68 316.818 353.13 314.758 352.183 cv
312.972 351.371 li
cp
f
304.889 392.544 mo
306.65 400.644 li
307.755 400.412 308.857 400.197 309.941 400.001 cv
308.51 391.839 li
307.33 392.053 306.116 392.289 304.889 392.544 cv
cp
f
306.201 388.419 mo
306.501 388.347 306.806 388.274 307.117 388.203 cv
306.293 387.16 li
306.257 387.568 306.228 387.994 306.201 388.419 cv
cp
f
313.646 386.921 mo
307.505 379.154 li
307.044 381.326 306.701 383.411 306.471 385.475 cv
308.399 387.917 li
310.029 387.565 311.789 387.231 313.646 386.921 cv
cp
f
316.088 386.533 mo
316.297 379.296 319.023 371.946 324.407 364.103 cv
320.61 361.775 317.147 359.957 315.135 358.948 cv
313.164 362.435 309.865 369.107 307.834 377.662 cv
314.983 386.703 li
315.346 386.644 315.716 386.588 316.088 386.533 cv
cp
f
317.815 390.457 mo
317.064 390.549 316.325 390.64 315.598 390.744 cv
315.586 390.745 li
315.208 390.792 314.83 390.842 314.456 390.896 cv
315.637 399.101 li
316.734 398.945 317.868 398.796 319.023 398.659 cv
318.051 390.427 li
317.815 390.457 li
cp
f
328.652 366.826 mo
327.628 366.131 326.536 365.427 325.414 364.728 cv
320.194 372.317 317.527 379.408 317.279 386.359 cv
318.954 386.123 320.532 385.922 322.063 385.752 cv
322.455 379.959 324.86 373.926 329.402 367.345 cv
329.191 367.199 328.982 367.053 328.77 366.906 cv
328.652 366.826 li
cp
f
323.987 389.79 mo
324.795 398.034 li
325.923 397.924 327.071 397.824 328.232 397.726 cv
327.58 389.47 li
326.36 389.571 325.166 389.677 323.987 389.79 cv
cp
f
333.947 363.253 mo
332.846 364.606 331.889 365.859 331.042 367.053 cv
339.698 373.222 344.62 379.219 344.994 384.06 cv
349.738 384.06 li
349.422 377.629 343.975 370.457 333.947 363.253 cv
cp
f
333.522 389.045 mo
334.04 397.322 li
335.176 397.252 336.326 397.19 337.495 397.127 cv
337.102 388.849 li
335.891 388.912 334.7 388.975 333.522 389.045 cv
cp
f
343.048 388.612 mo
343.327 396.897 li
344.47 396.857 345.62 396.828 346.783 396.801 cv
346.627 388.514 li
345.422 388.543 344.225 388.578 343.048 388.612 cv
cp
f
343.806 384.23 mo
343.525 379.745 338.787 374.028 330.37 368.028 cv
326.011 374.347 323.683 380.116 323.262 385.622 cv
329.583 384.934 336.572 384.461 343.806 384.23 cv
cp
f
352.069 334.251 mo
351.442 336.503 346.98 340.953 342.256 345.666 cv
338.298 349.612 333.845 354.073 329.773 359.006 cv
331.233 359.933 332.542 360.805 333.743 361.65 cv
337.563 357.067 341.746 352.871 345.457 349.162 cv
345.593 349.025 li
348.774 345.854 351.777 342.859 353.793 340.336 cv
353.816 340.199 353.881 340.069 353.997 339.975 cv
354.106 339.886 354.239 339.851 354.37 339.851 cv
354.477 339.851 li
354.608 339.851 354.741 339.886 354.85 339.975 cv
354.967 340.069 355.032 340.199 355.055 340.336 cv
357.075 342.864 360.075 345.857 363.252 349.024 cv
363.39 349.162 li
367.1 352.871 371.284 357.068 375.104 361.65 cv
376.303 360.806 377.612 359.934 379.073 359.006 cv
374.986 354.056 370.54 349.604 366.597 345.672 cv
361.869 340.958 357.405 336.505 356.783 334.271 cv
354.477 324.722 li
354.37 324.722 li
354.37 324.721 li
352.069 334.251 li
cp
f
73.5247 168.898 mo
78.6823 170.432 106.644 178.256 140.375 178.256 cv
174.114 178.256 202.076 170.432 207.234 168.898 cv
202.502 167.492 174.184 159.525 140.375 159.525 cv
106.566 159.525 78.2564 167.492 73.5247 168.898 cv
cp
f
189.535 157.579 mo
189.603 157.437 189.671 157.292 189.739 157.149 cv
189.64 157.202 189.542 157.254 189.443 157.304 cv
189.474 157.397 189.504 157.485 189.535 157.579 cv
cp
f
183.426 155.78 mo
184.112 156.537 184.806 157.091 185.507 157.22 cv
186.35 157.377 187.265 157.171 188.212 156.774 cv
187.702 155.244 187.151 153.604 186.589 151.97 cv
185.481 153.293 184.406 154.593 183.426 155.78 cv
cp
f
205.156 145.509 mo
202.64 144.808 198.583 143.749 193.329 142.607 cv
198.792 140.999 204.185 136.199 208.105 131.953 cv
206.641 136.326 205.248 141.503 205.156 145.509 cv
cp
207.271 149.017 mo
202.656 147.644 174.276 139.634 140.375 139.634 cv
106.476 139.634 78.1066 147.643 73.489 149.017 cv
73.489 147.974 li
78.9501 146.369 107.005 138.634 140.375 138.634 cv
173.753 138.634 201.81 146.369 207.271 147.974 cv
207.271 149.017 li
cp
206.188 155.822 mo
205.782 155.665 205.392 155.465 204.929 155.206 cv
204.298 154.852 203.539 154.43 202.431 153.983 cv
200.719 158.22 199.374 161.474 198.297 163.958 cv
197.974 163.881 197.651 163.804 197.314 163.725 cv
198.626 160.703 200.123 157.042 201.497 153.634 cv
200.608 153.324 199.539 153.007 198.191 152.697 cv
196.892 152.394 194.965 153.719 192.926 155.121 cv
192.379 155.497 191.827 155.872 191.275 156.23 cv
190.867 157.099 190.444 157.994 189.991 158.947 cv
190.373 160.092 190.761 161.252 191.141 162.372 cv
190.769 162.295 190.391 162.218 190.009 162.141 cv
189.807 161.543 189.597 160.921 189.371 160.247 cv
189.122 160.77 188.862 161.313 188.6 161.86 cv
188.268 161.795 187.925 161.73 187.586 161.665 cv
188.009 160.781 188.455 159.849 188.915 158.882 cv
188.85 158.686 188.783 158.485 188.715 158.282 cv
188.655 158.102 188.591 157.909 188.529 157.725 cv
187.447 158.169 186.372 158.397 185.325 158.203 cv
184.401 158.033 183.572 157.417 182.778 156.563 cv
182.508 156.889 182.232 157.223 181.977 157.532 cv
182.029 158.223 182.082 158.9 182.134 159.558 cv
182.164 159.949 182.192 160.316 182.221 160.691 cv
181.886 160.634 181.545 160.578 181.205 160.521 cv
181.182 160.224 181.159 159.928 181.137 159.636 cv
181.11 159.298 181.084 158.965 181.059 158.637 cv
180.572 159.221 180.123 159.758 179.691 160.273 cv
179.31 160.212 178.928 160.151 178.542 160.091 cv
179.333 159.151 180.147 158.174 180.949 157.206 cv
180.859 156.02 180.778 154.913 180.702 153.851 cv
180.602 153.706 180.502 153.563 180.401 153.416 cv
178.818 151.115 177.181 148.734 175.272 148.466 cv
173.699 148.248 171.667 149.918 169.695 151.536 cv
169.369 151.803 169.041 152.07 168.712 152.334 cv
168.347 153.324 167.967 154.352 167.557 155.451 cv
168.04 156.558 168.534 157.686 169.02 158.779 cv
168.637 158.733 168.255 158.688 167.868 158.644 cv
167.61 158.06 167.342 157.454 167.054 156.795 cv
166.848 157.344 166.637 157.908 166.421 158.482 cv
166.079 158.445 165.739 158.408 165.395 158.371 cv
165.423 158.296 165.449 158.227 165.477 158.151 cv
165.796 157.304 166.133 156.407 166.479 155.481 cv
166.307 155.085 166.128 154.676 165.944 154.254 cv
164.929 154.808 163.917 155.147 162.926 155.052 cv
161.972 154.96 161.084 154.432 160.217 153.676 cv
159.951 154.062 159.684 154.45 159.435 154.813 cv
159.568 155.618 159.7 156.399 159.824 157.143 cv
159.866 157.391 159.904 157.618 159.944 157.858 cv
159.603 157.83 159.259 157.804 158.917 157.777 cv
158.89 157.62 158.864 157.463 158.838 157.308 cv
158.764 156.862 158.69 156.425 158.618 155.994 cv
158.206 156.589 157.825 157.136 157.458 157.663 cv
157.073 157.635 156.683 157.61 156.296 157.583 cv
156.983 156.603 157.689 155.585 158.383 154.578 cv
158.179 153.347 157.991 152.197 157.815 151.097 cv
157.67 150.923 157.525 150.75 157.379 150.573 cv
155.651 148.483 153.864 146.322 152.058 146.231 cv
150.401 146.141 148.488 148.044 146.638 149.874 cv
146.35 150.159 146.06 150.444 145.77 150.725 cv
145.509 151.724 145.238 152.76 144.944 153.866 cv
145.541 154.951 146.151 156.054 146.748 157.118 cv
146.362 157.108 145.976 157.099 145.589 157.09 cv
145.267 156.514 144.934 155.915 144.573 155.262 cv
144.448 155.729 144.321 156.206 144.191 156.693 cv
144.159 156.814 144.126 156.938 144.093 157.06 cv
143.75 157.054 143.408 157.048 143.063 157.043 cv
143.118 156.838 143.169 156.645 143.226 156.434 cv
143.433 155.658 143.651 154.84 143.876 153.998 cv
143.674 153.631 143.463 153.248 143.25 152.859 cv
142.306 153.502 141.349 153.934 140.375 153.934 cv
139.401 153.934 138.444 153.502 137.5 152.86 cv
137.287 153.248 137.076 153.631 136.874 153.998 cv
137.099 154.84 137.317 155.658 137.525 156.434 cv
137.581 156.645 137.632 156.838 137.687 157.043 cv
137.343 157.048 137 157.054 136.657 157.06 cv
136.624 156.938 136.591 156.814 136.559 156.692 cv
136.429 156.206 136.302 155.73 136.177 155.262 cv
135.816 155.915 135.483 156.514 135.162 157.09 cv
134.775 157.099 134.388 157.108 134.003 157.118 cv
134.599 156.054 135.209 154.951 135.806 153.867 cv
135.513 152.76 135.241 151.725 134.981 150.726 cv
134.69 150.445 134.4 150.16 134.112 149.874 cv
132.261 148.042 130.342 146.137 128.692 146.231 cv
126.886 146.322 125.099 148.483 123.37 150.574 cv
123.223 150.752 123.077 150.926 122.931 151.102 cv
122.755 152.199 122.568 153.346 122.365 154.574 cv
123.06 155.582 123.766 156.602 124.455 157.583 cv
124.067 157.61 123.677 157.635 123.293 157.663 cv
122.924 157.135 122.542 156.587 122.129 155.99 cv
122.058 156.422 121.984 156.861 121.909 157.308 cv
121.883 157.463 121.857 157.621 121.831 157.777 cv
121.488 157.804 121.144 157.83 120.803 157.859 cv
120.844 157.618 120.881 157.391 120.923 157.143 cv
121.048 156.397 121.179 155.615 121.313 154.809 cv
121.064 154.447 120.798 154.06 120.533 153.675 cv
119.666 154.432 118.777 154.96 117.824 155.052 cv
116.828 155.147 115.816 154.808 114.801 154.254 cv
114.619 154.674 114.441 155.081 114.269 155.477 cv
114.616 156.403 114.953 157.301 115.272 158.149 cv
115.301 158.226 115.327 158.295 115.356 158.371 cv
115.011 158.408 114.671 158.445 114.329 158.482 cv
114.112 157.905 113.9 157.342 113.694 156.791 cv
113.405 157.451 113.137 158.059 112.878 158.644 cv
112.491 158.688 112.109 158.734 111.726 158.78 cv
112.213 157.686 112.708 156.555 113.191 155.447 cv
112.782 154.351 112.403 153.325 112.039 152.337 cv
111.709 152.073 111.38 151.805 111.053 151.536 cv
109.081 149.918 107.035 148.242 105.474 148.466 cv
103.566 148.735 101.929 151.115 100.346 153.417 cv
100.245 153.564 100.145 153.707 100.045 153.852 cv
99.9689 154.915 99.8878 156.023 99.7979 157.208 cv
100.6 158.176 101.413 159.153 102.204 160.092 cv
101.818 160.152 101.436 160.213 101.055 160.274 cv
100.623 159.759 100.174 159.223 99.6885 158.64 cv
99.6631 158.968 99.6372 159.301 99.6113 159.639 cv
99.5887 159.93 99.5659 160.226 99.5429 160.522 cv
99.2033 160.579 98.8619 160.635 98.5272 160.692 cv
98.556 160.318 98.584 159.952 98.6143 159.561 cv
98.665 158.904 98.7178 158.226 98.771 157.535 cv
98.5145 157.226 98.2386 156.892 97.9683 156.565 cv
97.1755 157.418 96.3463 158.034 95.4233 158.204 cv
95.1616 158.252 94.8984 158.275 94.6338 158.275 cv
93.8392 158.275 93.0305 158.064 92.2164 157.73 cv
92.1551 157.914 92.091 158.106 92.0313 158.286 cv
91.9639 158.488 91.8975 158.688 91.832 158.884 cv
92.2922 159.85 92.7388 160.783 93.1618 161.666 cv
92.8225 161.731 92.4794 161.796 92.1469 161.861 cv
91.885 161.314 91.6255 160.772 91.376 160.249 cv
91.1501 160.923 90.9407 161.545 90.7385 162.143 cv
90.3566 162.219 89.9789 162.296 89.6068 162.373 cv
89.9868 161.253 90.3745 160.094 90.7563 158.949 cv
90.3035 157.996 89.881 157.102 89.4727 156.234 cv
88.9197 155.876 88.3682 155.498 87.8208 155.122 cv
85.7827 153.722 83.8545 152.395 82.5562 152.699 cv
81.2079 153.01 80.1387 153.327 79.251 153.637 cv
80.6253 157.045 82.1218 160.705 83.4346 163.727 cv
83.096 163.806 82.7714 163.883 82.4462 163.961 cv
81.3708 161.476 80.0275 158.222 78.3162 153.986 cv
77.2129 154.432 76.4573 154.852 75.8286 155.205 cv
75.3668 155.464 74.9771 155.663 74.5718 155.821 cv
74.5718 154.743 li
74.8086 154.627 75.0574 154.491 75.3394 154.333 cv
75.9647 153.982 76.7661 153.537 77.9432 153.062 cv
77.5726 152.143 77.1876 151.185 76.7832 150.177 cv
76.7194 150.018 76.6548 149.857 76.5906 149.697 cv
76.8953 149.613 77.2191 149.526 77.5627 149.434 cv
77.6129 149.559 77.6605 149.677 77.7114 149.805 cv
78.0809 150.726 78.4727 151.704 78.8781 152.711 cv
79.8099 152.383 80.9308 152.047 82.3315 151.725 cv
84.0605 151.327 86.1626 152.77 88.3872 154.297 cv
88.475 154.358 88.5634 154.417 88.6513 154.478 cv
87.3406 151.659 86.3059 149.342 85.5472 147.472 cv
85.8707 147.398 86.2003 147.325 86.5349 147.25 cv
87.5247 149.649 88.8741 152.608 90.2513 155.544 cv
90.7124 155.837 91.1707 156.104 91.6251 156.344 cv
92.257 154.454 92.8516 152.69 93.4072 151.078 cv
92.0859 149.509 90.756 147.957 89.5444 146.601 cv
89.9182 146.523 90.2872 146.445 90.6718 146.366 cv
91.6127 147.424 92.6508 148.63 93.7881 149.978 cv
94.3792 148.283 94.9265 146.767 95.4352 145.437 cv
95.8185 145.366 96.2008 145.295 96.592 145.224 cv
95.936 146.915 95.2335 148.869 94.5381 150.87 cv
95.6011 152.138 96.7533 153.527 97.9753 155.006 cv
98.343 154.536 98.7079 154.025 99.0701 153.505 cv
99.2952 150.333 99.4862 147.186 99.5446 144.707 cv
99.8724 144.652 100.206 144.597 100.538 144.541 cv
100.506 146.466 100.38 148.906 100.18 151.901 cv
101.688 149.752 103.29 147.764 105.334 147.476 cv
107.238 147.205 109.25 148.768 111.369 150.504 cv
110.31 147.585 109.486 145.195 108.905 143.29 cv
109.235 143.246 109.574 143.205 109.908 143.162 cv
110.672 145.609 111.759 148.676 112.877 151.725 cv
113.368 152.113 113.857 152.478 114.342 152.805 cv
115.112 151.037 115.837 149.383 116.513 147.866 cv
115.261 146.08 113.998 144.317 112.857 142.799 cv
113.241 142.754 113.62 142.707 114.007 142.663 cv
114.902 143.863 115.894 145.245 116.989 146.802 cv
117.778 145.046 118.498 143.49 119.156 142.137 cv
119.543 142.102 119.932 142.068 120.322 142.033 cv
119.482 143.742 118.566 145.731 117.658 147.757 cv
118.596 149.1 119.613 150.574 120.688 152.137 cv
121.123 151.684 121.558 151.185 121.99 150.67 cv
122.496 147.497 122.969 144.308 123.242 141.796 cv
123.579 141.771 123.916 141.747 124.254 141.723 cv
124.056 143.666 123.71 146.136 123.237 149.17 cv
124.908 147.179 126.651 145.332 128.643 145.232 cv
130.625 145.143 132.517 146.897 134.497 148.85 cv
133.706 145.759 133.105 143.249 132.711 141.274 cv
133.047 141.262 133.382 141.249 133.72 141.239 cv
134.245 143.777 135.045 147.003 135.874 150.196 cv
136.309 150.613 136.745 151.009 137.179 151.368 cv
138.111 149.673 138.987 148.087 139.802 146.633 cv
138.713 144.699 137.617 142.798 136.623 141.17 cv
137.009 141.163 137.396 141.157 137.784 141.152 cv
138.565 142.443 139.426 143.931 140.375 145.613 cv
141.325 143.931 142.186 142.443 142.967 141.152 cv
143.355 141.157 143.741 141.163 144.128 141.17 cv
143.134 142.798 142.038 144.699 140.949 146.633 cv
141.762 148.086 142.639 149.673 143.571 151.368 cv
144.005 151.008 144.441 150.613 144.876 150.196 cv
145.704 147.004 146.503 143.779 147.027 141.238 cv
147.366 141.248 147.702 141.262 148.039 141.273 cv
147.645 143.249 147.045 145.759 146.254 148.85 cv
148.23 146.897 150.095 145.144 152.108 145.232 cv
154.097 145.332 155.839 147.176 157.508 149.164 cv
157.035 146.132 156.689 143.663 156.491 141.721 cv
156.828 141.745 157.164 141.769 157.499 141.794 cv
157.775 144.303 158.249 147.492 158.756 150.665 cv
159.189 151.182 159.626 151.682 160.062 152.138 cv
161.136 150.576 162.152 149.103 163.09 147.761 cv
162.181 145.732 161.263 143.741 160.422 142.031 cv
160.811 142.065 161.201 142.099 161.588 142.134 cv
162.247 143.489 162.968 145.048 163.759 146.807 cv
164.855 145.247 165.849 143.862 166.745 142.66 cv
167.133 142.704 167.512 142.751 167.895 142.796 cv
166.752 144.316 165.489 146.081 164.234 147.87 cv
164.909 149.385 165.633 151.037 166.403 152.804 cv
166.89 152.476 167.381 152.11 167.874 151.72 cv
168.991 148.673 170.077 145.607 170.84 143.158 cv
171.175 143.201 171.515 143.243 171.846 143.287 cv
171.266 145.191 170.441 147.581 169.382 150.5 cv
171.5 148.766 173.514 147.206 175.411 147.476 cv
177.455 147.763 179.059 149.751 180.567 151.899 cv
180.367 148.902 180.24 146.461 180.208 144.536 cv
180.539 144.591 180.87 144.646 181.197 144.701 cv
181.258 147.178 181.451 150.328 181.677 153.502 cv
182.039 154.023 182.404 154.533 182.771 155.003 cv
183.993 153.525 185.144 152.136 186.208 150.868 cv
185.512 148.865 184.808 146.91 184.152 145.218 cv
184.543 145.289 184.925 145.36 185.309 145.431 cv
185.818 146.761 186.366 148.279 186.958 149.976 cv
188.096 148.627 189.133 147.419 190.072 146.359 cv
190.458 146.438 190.829 146.517 191.204 146.595 cv
189.992 147.952 188.661 149.505 187.339 151.076 cv
187.895 152.688 188.49 154.452 189.122 156.343 cv
189.576 156.103 190.034 155.836 190.495 155.543 cv
191.872 152.606 193.221 149.645 194.21 147.244 cv
194.546 147.319 194.875 147.393 195.2 147.466 cv
194.441 149.337 193.406 151.657 192.095 154.477 cv
192.183 154.417 192.271 154.357 192.359 154.296 cv
194.585 152.767 196.688 151.324 198.416 151.723 cv
199.816 152.045 200.937 152.38 201.87 152.708 cv
202.274 151.703 202.665 150.728 203.033 149.809 cv
203.084 149.681 203.134 149.557 203.185 149.43 cv
203.529 149.521 203.853 149.609 204.157 149.692 cv
204.092 149.855 204.027 150.019 203.962 150.18 cv
203.558 151.186 203.174 152.142 202.805 153.059 cv
203.986 153.535 204.79 153.982 205.418 154.333 cv
205.701 154.492 205.951 154.628 206.188 154.744 cv
206.188 155.822 li
cp
72.6543 131.954 mo
76.5726 136.198 81.9645 140.998 87.4226 142.608 cv
82.1726 143.75 78.1182 144.808 75.6031 145.509 cv
75.511 141.503 74.118 136.327 72.6543 131.954 cv
cp
103.89 126.993 mo
104.42 124.632 104.792 122.312 105.052 120.271 cv
107.559 126.359 112.051 134.832 118.49 137.797 cv
110.771 138.519 103.675 139.538 97.4954 140.627 cv
100.287 138.045 102.431 133.493 103.89 126.993 cv
cp
139.8 124.849 mo
140.017 124.208 140.206 123.572 140.38 122.943 cv
140.553 123.572 140.743 124.208 140.959 124.849 cv
142.916 130.647 146.064 134.742 150.211 136.967 cv
146.999 136.827 143.717 136.747 140.375 136.747 cv
137.036 136.747 133.757 136.827 130.548 136.966 cv
134.695 134.742 137.843 130.647 139.8 124.849 cv
cp
136.938 101.936 mo
136.938 100.036 138.479 98.4948 140.38 98.4948 cv
142.28 98.4948 143.821 100.036 143.821 101.936 cv
143.821 103.837 142.28 105.378 140.38 105.378 cv
138.479 105.378 136.938 103.837 136.938 101.936 cv
cp
168.952 132.229 mo
169.446 131.617 169.92 130.982 170.374 130.329 cv
172.657 127.047 174.438 123.352 175.707 120.27 cv
175.967 122.312 176.339 124.632 176.869 126.993 cv
178.328 133.493 180.472 138.045 183.263 140.627 cv
177.085 139.539 169.989 138.52 162.27 137.798 cv
164.799 136.633 167.026 134.616 168.952 132.229 cv
cp
212.844 118.065 mo
209.702 118.065 207.155 120.612 207.155 123.754 cv
207.155 125.043 207.589 126.228 208.312 127.182 cv
205.717 130.284 202.252 133.898 198.613 136.527 cv
198.028 136.95 197.439 137.347 196.848 137.712 cv
193.963 139.495 191.041 140.522 188.418 140.06 cv
182.001 138.932 179.328 126.42 178.452 118.041 cv
180.689 117.275 182.3 115.159 182.3 112.662 cv
182.3 109.521 179.753 106.974 176.612 106.974 cv
173.47 106.974 170.923 109.521 170.923 112.662 cv
170.923 114.687 171.984 116.46 173.576 117.468 cv
172.732 119.675 171.564 122.406 170.087 125.088 cv
167.203 130.32 162.55 136.436 156.666 135.831 cv
146.201 134.755 143.142 123.475 142.249 117.061 cv
144.598 116.278 146.295 114.065 146.295 111.452 cv
146.295 110.402 145.998 109.43 145.518 108.575 cv
150.822 105.301 158.079 99.7944 156.214 95.0681 cv
153.345 87.8012 144.933 95.4709 144.933 95.4709 cv
144.933 95.4709 150.17 77.5089 140.379 77.5089 cv
130.588 77.5089 135.826 95.4709 135.826 95.4709 cv
135.826 95.4709 127.414 87.8012 124.545 95.0681 cv
122.68 99.7944 129.937 105.301 135.241 108.575 cv
134.761 109.43 134.464 110.402 134.464 111.452 cv
134.464 114.066 136.163 116.281 138.515 117.062 cv
137.628 123.476 134.579 134.753 124.093 135.831 cv
118.216 136.432 113.555 130.321 110.672 125.088 cv
109.195 122.406 108.027 119.675 107.183 117.468 cv
108.775 116.46 109.836 114.687 109.836 112.662 cv
109.836 109.521 107.289 106.974 104.147 106.974 cv
101.006 106.974 98.4587 109.521 98.4587 112.662 cv
98.4587 115.159 100.07 117.275 102.307 118.041 cv
101.431 126.42 98.7586 138.932 92.3408 140.06 cv
89.7285 140.52 86.8107 139.493 83.9268 137.711 cv
83.3282 137.341 82.7316 136.938 82.139 136.509 cv
78.5063 133.88 75.0443 130.274 72.4495 127.179 cv
73.1709 126.225 73.6039 125.041 73.6039 123.754 cv
73.6039 120.612 71.0569 118.065 67.9152 118.065 cv
64.7734 118.065 62.2265 120.612 62.2265 123.754 cv
62.2265 126.895 64.7734 129.442 67.9152 129.442 cv
68.1335 129.442 68.348 129.427 68.5599 129.403 cv
70.3292 134.143 72.6206 141.194 72.6206 145.93 cv
72.6206 146.08 72.6493 146.222 72.6903 146.359 cv
72.6543 146.359 li
72.6543 163.938 li
72.6638 163.938 li
72.6638 168.113 li
74.9703 167.404 104.628 158.525 140.375 158.525 cv
176.128 158.525 205.785 167.403 208.095 168.113 cv
208.095 163.938 li
208.105 163.938 li
208.105 146.359 li
208.069 146.359 li
208.11 146.222 208.139 146.08 208.139 145.93 cv
208.139 141.198 210.431 134.145 212.2 129.403 cv
212.411 129.427 212.626 129.442 212.844 129.442 cv
215.986 129.442 218.533 126.895 218.533 123.754 cv
218.533 120.612 215.986 118.065 212.844 118.065 cv
cp
f
160.792 152.841 mo
161.542 153.511 162.29 153.986 163.021 154.057 cv
163.806 154.13 164.66 153.826 165.544 153.333 cv
164.924 151.91 164.254 150.375 163.565 148.826 cv
162.597 150.215 161.655 151.585 160.792 152.841 cv
cp
f
159.199 153.392 mo
159.294 153.253 159.388 153.118 159.482 152.981 cv
159.34 152.836 159.199 152.683 159.058 152.529 cv
159.105 152.817 159.152 153.107 159.199 153.392 cv
cp
f
91.2119 157.581 mo
91.2427 157.489 91.272 157.401 91.3026 157.31 cv
91.2045 157.259 91.1064 157.203 91.0082 157.15 cv
91.0761 157.294 91.1443 157.438 91.2119 157.581 cv
cp
f
166.852 153.835 mo
166.895 153.934 166.939 154.033 166.982 154.133 cv
167.066 153.908 167.15 153.68 167.234 153.454 cv
167.093 153.553 166.951 153.642 166.809 153.735 cv
166.824 153.769 166.838 153.801 166.852 153.835 cv
cp
f
181.867 156.097 mo
181.952 155.994 182.035 155.894 182.118 155.793 cv
182.017 155.665 181.916 155.53 181.815 155.397 cv
181.832 155.63 181.85 155.865 181.867 156.097 cv
cp
f
136.503 152.598 mo
136.566 152.484 136.628 152.371 136.69 152.258 cv
136.573 152.163 136.456 152.072 136.339 151.973 cv
136.394 152.181 136.449 152.391 136.503 152.598 cv
cp
f
98.8799 156.1 mo
98.8974 155.867 98.9146 155.632 98.932 155.399 cv
98.8309 155.532 98.7299 155.668 98.6281 155.795 cv
98.7122 155.897 98.7951 155.997 98.8799 156.1 cv
cp
f
115.201 153.336 mo
116.084 153.829 116.939 154.133 117.727 154.057 cv
118.459 153.986 119.207 153.511 119.959 152.84 cv
119.094 151.583 118.151 150.212 117.182 148.822 cv
116.493 150.373 115.822 151.911 115.201 153.336 cv
cp
f
113.766 154.128 mo
113.809 154.029 113.852 153.93 113.895 153.831 cv
113.909 153.798 113.923 153.768 113.937 153.735 cv
113.797 153.643 113.657 153.555 113.516 153.457 cv
113.6 153.681 113.683 153.906 113.766 154.128 cv
cp
f
92.5349 156.775 mo
93.4811 157.171 94.3956 157.376 95.2417 157.221 cv
95.9415 157.092 96.6353 156.539 97.321 155.783 cv
96.3401 154.596 95.2648 153.295 94.1572 151.972 cv
93.5957 153.606 93.0455 155.245 92.5349 156.775 cv
cp
f
137.983 151.981 mo
138.802 152.552 139.607 152.934 140.375 152.934 cv
141.144 152.934 141.948 152.552 142.767 151.981 cv
142.02 150.62 141.208 149.146 140.375 147.656 cv
139.543 149.146 138.731 150.62 137.983 151.981 cv
cp
f
144.247 152.598 mo
144.302 152.391 144.357 152.181 144.412 151.972 cv
144.295 152.072 144.177 152.162 144.06 152.257 cv
144.122 152.37 144.184 152.483 144.247 152.598 cv
cp
f
121.548 153.388 mo
121.595 153.105 121.642 152.818 121.688 152.532 cv
121.548 152.684 121.408 152.837 121.268 152.98 cv
121.361 153.116 121.454 153.251 121.548 153.388 cv
cp
f
354.228 125.83 mo
355.523 125.83 356.573 124.781 356.573 123.486 cv
356.573 122.191 355.523 121.142 354.228 121.142 cv
352.934 121.142 351.884 122.191 351.884 123.486 cv
351.884 124.781 352.934 125.83 354.228 125.83 cv
cp
f
422.139 168.636 mo
422.139 168.635 li
422.139 168.636 li
422.139 168.636 li
422.139 168.636 li
422.139 168.636 li
cp
f
323.061 131.003 mo
321.766 131.003 320.717 132.053 320.717 133.347 cv
320.717 134.642 321.766 135.691 323.061 135.691 cv
324.356 135.691 325.405 134.642 325.405 133.347 cv
325.405 132.053 324.356 131.003 323.061 131.003 cv
cp
f
356.573 131.003 mo
356.573 129.708 355.523 128.659 354.228 128.659 cv
352.934 128.659 351.884 129.708 351.884 131.003 cv
351.884 132.298 352.934 133.347 354.228 133.347 cv
355.523 133.347 356.573 132.298 356.573 131.003 cv
cp
f
287.568 168.898 mo
292.726 170.432 320.688 178.256 354.419 178.256 cv
388.157 178.256 416.119 170.432 421.278 168.898 cv
416.547 167.492 388.229 159.525 354.419 159.525 cv
320.618 159.525 292.3 167.492 287.568 168.898 cv
cp
f
385.785 131.003 mo
384.491 131.003 383.441 132.053 383.441 133.347 cv
383.441 134.642 384.491 135.691 385.785 135.691 cv
387.08 135.691 388.13 134.642 388.13 133.347 cv
388.13 132.053 387.08 131.003 385.785 131.003 cv
cp
f
357.271 97.0406 mo
357.261 98.0726 356.698 98.9645 355.869 99.4562 cv
362.351 109.502 369.204 97.6364 357.271 97.0406 cv
cp
f
354.423 94.16 mo
354.932 94.16 355.403 94.3044 355.817 94.5383 cv
361.279 83.8977 347.567 83.8977 353.029 94.5383 cv
353.443 94.3044 353.914 94.16 354.423 94.16 cv
cp
f
352.713 154.668 mo
352.705 153.738 353.463 152.973 354.407 152.958 cv
355.351 152.972 356.109 153.738 356.101 154.667 cv
356.092 155.597 355.334 156.339 354.407 156.325 cv
353.48 156.339 352.722 155.598 352.713 154.668 cv
cp
350.154 151.086 mo
349.843 151.091 349.585 150.849 349.579 150.545 cv
349.572 150.241 349.82 149.99 350.134 149.985 cv
350.446 149.98 350.704 150.223 350.709 150.527 cv
350.714 150.832 350.466 151.082 350.154 151.086 cv
cp
346.056 156.503 mo
345.128 156.545 344.342 155.827 344.298 154.899 cv
344.255 153.97 344.984 153.182 345.928 153.14 cv
346.871 153.098 347.658 153.813 347.685 154.746 cv
347.713 155.671 346.983 156.462 346.056 156.503 cv
cp
341.605 151.396 mo
341.294 151.41 341.028 151.175 341.01 150.872 cv
340.992 150.568 341.231 150.31 341.543 150.296 cv
341.856 150.282 342.123 150.517 342.139 150.82 cv
342.155 151.124 341.916 151.382 341.605 151.396 cv
cp
337.704 156.977 mo
336.777 157.044 335.964 156.348 335.888 155.422 cv
335.811 154.495 336.513 153.689 337.455 153.62 cv
338.398 153.551 339.211 154.247 339.272 155.175 cv
339.333 156.102 338.632 156.909 337.704 156.977 cv
cp
358.729 149.985 mo
359.042 149.99 359.291 150.241 359.284 150.545 cv
359.277 150.85 359.019 151.091 358.708 151.087 cv
358.397 151.082 358.149 150.832 358.154 150.527 cv
358.159 150.223 358.417 149.981 358.729 149.985 cv
cp
362.886 153.138 mo
363.829 153.181 364.559 153.969 364.515 154.897 cv
364.472 155.826 363.686 156.545 362.758 156.502 cv
361.831 156.461 361.101 155.669 361.128 154.746 cv
361.156 153.811 361.942 153.097 362.886 153.138 cv
cp
367.32 150.297 mo
367.631 150.311 367.87 150.569 367.853 150.872 cv
367.834 151.176 367.568 151.411 367.257 151.397 cv
366.947 151.383 366.708 151.125 366.723 150.821 cv
366.74 150.518 367.007 150.283 367.32 150.297 cv
cp
371.358 153.618 mo
372.3 153.686 373.002 154.493 372.926 155.42 cv
372.849 156.347 372.037 157.042 371.11 156.975 cv
370.183 156.907 369.481 156.1 369.542 155.173 cv
369.603 154.245 370.416 153.55 371.358 153.618 cv
cp
333.072 152.029 mo
332.763 152.06 332.489 151.839 332.461 151.536 cv
332.432 151.234 332.661 150.962 332.973 150.932 cv
333.283 150.902 333.558 151.122 333.585 151.425 cv
333.612 151.728 333.382 151.999 333.072 152.029 cv
cp
329.363 157.726 mo
328.437 157.808 327.602 157.174 327.494 156.244 cv
327.387 155.328 328.058 154.462 328.999 154.38 cv
329.941 154.286 330.778 154.96 330.87 155.886 cv
330.963 156.81 330.288 157.634 329.363 157.726 cv
cp
324.566 152.955 mo
324.257 152.993 323.975 152.78 323.937 152.478 cv
323.899 152.177 324.119 151.9 324.429 151.862 cv
324.74 151.824 325.022 152.039 325.059 152.34 cv
325.096 152.643 324.875 152.917 324.566 152.955 cv
cp
321.047 158.774 mo
320.125 158.908 319.267 158.272 319.129 157.352 cv
318.991 156.433 319.637 155.578 320.573 155.442 cv
321.509 155.306 322.367 155.942 322.49 156.863 cv
322.614 157.785 321.967 158.641 321.047 158.774 cv
cp
316.092 154.146 mo
315.785 154.198 315.497 153.996 315.449 153.695 cv
315.4 153.396 315.611 153.11 315.919 153.059 cv
316.228 153.007 316.516 153.21 316.563 153.51 cv
316.61 153.811 316.399 154.096 316.092 154.146 cv
cp
312.763 160.078 mo
311.844 160.233 310.969 159.642 310.801 158.725 cv
310.634 157.813 311.249 156.921 312.182 156.763 cv
313.114 156.607 313.994 157.224 314.147 158.142 cv
314.301 159.058 313.681 159.925 312.763 160.078 cv
cp
307.663 155.625 mo
307.357 155.683 307.062 155.488 307.004 155.188 cv
306.946 154.89 307.148 154.601 307.455 154.544 cv
307.763 154.486 308.058 154.682 308.115 154.982 cv
308.171 155.28 307.969 155.569 307.663 155.625 cv
cp
304.531 161.664 mo
303.619 161.846 302.723 161.272 302.525 160.366 cv
302.326 159.456 302.914 158.554 303.841 158.369 cv
304.768 158.179 305.666 158.764 305.849 159.675 cv
306.033 160.587 305.443 161.477 304.531 161.664 cv
cp
299.288 157.377 mo
298.984 157.445 298.682 157.26 298.614 156.963 cv
298.545 156.667 298.738 156.371 299.043 156.303 cv
299.349 156.235 299.65 156.421 299.717 156.718 cv
299.783 157.014 299.591 157.31 299.288 157.377 cv
cp
296.373 163.514 mo
295.476 163.741 294.563 163.198 294.33 162.297 cv
294.099 161.397 294.651 160.477 295.565 160.247 cv
296.484 160.027 297.402 160.581 297.617 161.486 cv
297.832 162.391 297.276 163.298 296.373 163.514 cv
cp
290.985 159.431 mo
290.685 159.512 290.376 159.34 290.296 159.047 cv
290.216 158.754 290.395 158.449 290.698 158.368 cv
291 158.286 291.309 158.459 291.386 158.752 cv
291.465 159.047 291.285 159.35 290.985 159.431 cv
cp
288.465 165.665 mo
287.448 162.457 li
288.302 162.195 289.257 162.703 289.508 163.6 cv
289.777 164.488 289.232 165.43 288.465 165.665 cv
cp
375.89 150.934 mo
376.201 150.965 376.431 151.236 376.402 151.538 cv
376.373 151.841 376.1 152.062 375.79 152.032 cv
375.48 152.001 375.251 151.731 375.278 151.427 cv
375.304 151.125 375.579 150.903 375.89 150.934 cv
cp
379.814 154.377 mo
380.756 154.46 381.426 155.323 381.32 156.241 cv
381.212 157.171 380.378 157.805 379.451 157.723 cv
378.526 157.632 377.85 156.808 377.943 155.883 cv
378.036 154.958 378.874 154.283 379.814 154.377 cv
cp
384.433 151.865 mo
384.744 151.903 384.964 152.179 384.925 152.48 cv
384.887 152.782 384.605 152.996 384.296 152.958 cv
383.987 152.92 383.767 152.645 383.804 152.342 cv
383.841 152.041 384.123 151.827 384.433 151.865 cv
cp
386.323 156.86 mo
386.447 155.938 387.305 155.301 388.241 155.437 cv
389.177 155.573 389.823 156.429 389.685 157.348 cv
389.548 158.268 388.69 158.905 387.769 158.77 cv
386.847 158.636 386.2 157.781 386.323 156.86 cv
cp
392.943 153.061 mo
393.251 153.113 393.462 153.399 393.413 153.699 cv
393.366 153.999 393.077 154.201 392.771 154.15 cv
392.463 154.099 392.252 153.813 392.299 153.513 cv
392.346 153.213 392.635 153.01 392.943 153.061 cv
cp
394.666 158.136 mo
394.82 157.22 395.7 156.603 396.633 156.757 cv
397.565 156.914 398.18 157.808 398.014 158.718 cv
397.846 159.637 396.971 160.227 396.052 160.074 cv
395.133 159.921 394.513 159.054 394.666 158.136 cv
cp
401.407 154.547 mo
401.714 154.605 401.916 154.893 401.858 155.192 cv
401.8 155.49 401.505 155.686 401.199 155.629 cv
400.894 155.572 400.691 155.284 400.747 154.984 cv
400.804 154.686 401.1 154.49 401.407 154.547 cv
cp
402.965 159.669 mo
403.149 158.757 404.048 158.173 404.973 158.363 cv
405.9 158.548 406.488 159.448 406.29 160.36 cv
406.092 161.265 405.196 161.84 404.284 161.658 cv
403.372 161.47 402.783 160.58 402.965 159.669 cv
cp
409.145 156.721 mo
409.212 156.424 409.514 156.239 409.819 156.307 cv
410.124 156.375 410.317 156.671 410.248 156.967 cv
410.18 157.263 409.878 157.449 409.575 157.381 cv
409.271 157.314 409.079 157.019 409.145 156.721 cv
cp
411.198 161.479 mo
411.412 160.574 412.331 160.019 413.25 160.239 cv
414.165 160.468 414.716 161.389 414.484 162.289 cv
414.252 163.191 413.34 163.733 412.442 163.507 cv
411.54 163.291 410.983 162.383 411.198 161.479 cv
cp
417.476 158.756 mo
417.553 158.463 417.862 158.29 418.164 158.372 cv
418.467 158.453 418.646 158.758 418.566 159.051 cv
418.486 159.344 418.177 159.516 417.877 159.435 cv
417.577 159.354 417.397 159.05 417.476 158.756 cv
cp
419.308 163.591 mo
419.559 162.694 420.514 162.186 421.369 162.448 cv
420.353 165.657 li
419.585 165.422 419.039 164.48 419.308 163.591 cv
cp
422.139 168.113 mo
422.139 162.325 li
422.139 157.399 li
422.085 157.295 422.029 157.19 421.962 157.085 cv
421.927 157.042 421.897 156.996 421.866 156.951 cv
421.773 156.816 421.678 156.681 421.565 156.549 cv
420.984 155.874 420.139 155.265 419.091 154.984 cv
418.641 154.863 418.199 154.809 417.777 154.809 cv
416.863 154.809 416.038 155.059 415.419 155.414 cv
414.798 155.767 414.393 156.23 414.303 156.614 cv
414.147 156.708 li
414.053 156.553 li
414.055 156.542 414.063 156.532 414.066 156.521 cv
414.058 156.509 li
414.076 156.438 414.085 156.359 414.085 156.272 cv
414.088 155.77 413.76 155.033 413.156 154.375 cv
412.552 153.714 411.679 153.128 410.606 152.885 cv
410.224 152.798 409.85 152.759 409.489 152.759 cv
408.535 152.759 407.674 153.032 407.033 153.416 cv
406.39 153.798 405.976 154.296 405.896 154.702 cv
405.745 154.802 li
405.644 154.65 li
405.646 154.64 405.654 154.629 405.656 154.619 cv
405.648 154.606 li
405.667 154.412 li
405.67 153.916 405.326 153.178 404.699 152.529 cv
404.073 151.877 403.172 151.307 402.078 151.1 cv
401.758 151.04 401.444 151.013 401.139 151.013 cv
400.143 151.012 399.248 151.305 398.587 151.713 cv
397.923 152.118 397.503 152.645 397.434 153.069 cv
397.285 153.174 li
397.18 153.025 li
397.182 153.015 397.189 153.004 397.192 152.993 cv
397.183 152.981 li
397.197 152.82 li
397.2 152.328 396.839 151.6 396.189 150.966 cv
395.54 150.329 394.612 149.779 393.501 149.595 cv
393.238 149.554 392.98 149.535 392.728 149.535 cv
391.694 149.535 390.767 149.857 390.086 150.296 cv
389.404 150.733 388.978 151.295 388.923 151.724 cv
388.778 151.834 li
388.668 151.689 li
388.67 151.679 388.676 151.668 388.678 151.657 cv
388.669 151.645 li
388.678 151.517 li
388.68 151.27 388.581 150.958 388.398 150.629 cv
388.376 150.631 li
388.167 150.284 li
388.017 150.076 387.847 149.868 387.635 149.67 cv
386.965 149.041 386.011 148.512 384.878 148.381 cv
384.664 148.355 384.454 148.342 384.248 148.342 cv
383.178 148.342 382.227 148.681 381.535 149.143 cv
380.841 149.604 380.416 150.193 380.373 150.643 cv
380.232 150.758 li
380.117 150.616 li
380.118 150.605 380.125 150.594 380.126 150.584 cv
380.117 150.572 li
380.122 150.475 li
380.127 149.995 379.733 149.276 379.039 148.668 cv
378.347 148.058 377.365 147.551 376.217 147.438 cv
376.052 147.421 375.89 147.413 375.731 147.413 cv
374.627 147.413 373.652 147.791 372.947 148.291 cv
372.24 148.79 371.815 149.42 371.789 149.868 cv
371.652 149.987 li
371.533 149.85 li
371.533 149.839 371.54 149.828 371.541 149.817 cv
371.531 149.805 li
371.533 149.742 li
371.539 149.27 371.128 148.546 370.412 147.946 cv
369.698 147.343 368.691 146.855 367.526 146.791 cv
367.29 146.786 li
366.12 146.785 365.094 147.184 364.36 147.713 cv
363.624 148.239 363.192 148.902 363.182 149.375 cv
363.049 149.499 li
362.924 149.366 li
362.925 149.356 362.931 149.344 362.932 149.333 cv
362.922 149.323 li
362.923 149.288 li
362.928 148.816 362.5 148.097 361.76 147.518 cv
361.023 146.935 359.988 146.482 358.806 146.474 cv
358.726 146.473 li
357.517 146.473 356.468 146.896 355.726 147.452 cv
354.981 148.005 354.554 148.699 354.559 149.182 cv
354.559 149.182 li
354.544 149.182 li
354.455 149.313 li
354.305 149.211 li
354.302 149.182 li
354.302 149.173 354.307 149.162 354.308 149.153 cv
354.3 149.146 li
354.298 149.146 li
354.298 149.139 li
354.304 148.702 353.899 148.062 353.215 147.529 cv
353.198 147.514 353.179 147.5 353.163 147.484 cv
353.147 147.472 353.135 147.458 353.118 147.446 cv
352.372 146.896 351.328 146.473 350.152 146.473 cv
350.073 146.474 li
348.858 146.482 347.819 146.935 347.086 147.521 cv
346.35 148.104 345.932 148.829 345.937 149.325 cv
345.938 149.363 li
345.816 149.498 li
345.68 149.376 li
345.68 149.337 li
345.674 149.331 li
345.666 148.903 345.252 148.286 344.568 147.777 cv
344.535 147.751 344.5 147.727 344.469 147.698 cv
343.732 147.179 342.714 146.784 341.578 146.784 cv
341.355 146.789 li
340.158 146.855 339.146 147.342 338.435 147.948 cv
337.723 148.551 337.323 149.281 337.327 149.775 cv
337.33 149.846 li
337.213 149.985 li
337.074 149.868 li
337.072 149.829 li
337.066 149.823 li
337.043 149.416 336.634 148.828 335.972 148.346 cv
335.918 148.31 335.863 148.276 335.814 148.235 cv
335.11 147.765 334.169 147.411 333.125 147.411 cv
332.973 147.411 332.818 147.419 332.662 147.434 cv
331.483 147.55 330.498 148.056 329.809 148.669 cv
329.119 149.279 328.735 150.003 328.739 150.506 cv
328.745 150.613 li
328.632 150.756 li
328.489 150.643 li
328.487 150.605 li
328.479 150.599 li
328.441 150.178 328.017 149.609 327.336 149.158 cv
327.302 149.137 327.267 149.118 327.234 149.094 cv
326.542 148.659 325.622 148.339 324.605 148.339 cv
324.406 148.339 324.205 148.351 324 148.377 cv
322.839 148.511 321.881 149.039 321.215 149.669 cv
320.548 150.297 320.181 151.034 320.185 151.543 cv
320.195 151.685 li
320.086 151.831 li
319.94 151.723 li
319.938 151.687 li
319.928 151.68 li
319.878 151.28 319.456 150.741 318.79 150.313 cv
318.734 150.283 318.678 150.253 318.626 150.217 cv
317.952 149.821 317.078 149.531 316.117 149.532 cv
315.875 149.532 315.628 149.55 315.379 149.588 cv
314.239 149.778 313.307 150.326 312.662 150.964 cv
312.015 151.599 311.663 152.329 311.666 152.842 cv
311.681 153.021 li
311.578 153.17 li
311.428 153.067 li
311.425 153.031 li
311.416 153.024 li
311.352 152.622 310.925 152.106 310.26 151.707 cv
310.24 151.698 310.222 151.686 310.202 151.676 cv
309.54 151.289 308.663 151.01 307.704 151.01 cv
307.409 151.01 307.107 151.036 306.801 151.093 cv
305.681 151.305 304.776 151.873 304.153 152.524 cv
303.529 153.174 303.194 153.912 303.197 154.428 cv
303.218 154.645 li
303.12 154.798 li
302.967 154.7 li
302.964 154.689 302.965 154.676 302.963 154.665 cv
302.952 154.658 li
302.878 154.271 302.456 153.781 301.807 153.405 cv
301.159 153.027 300.293 152.756 299.35 152.756 cv
298.999 152.756 298.638 152.794 298.272 152.877 cv
297.174 153.126 296.298 153.71 295.697 154.369 cv
295.096 155.027 294.776 155.764 294.779 156.286 cv
294.779 156.381 294.789 156.469 294.809 156.548 cv
294.716 156.705 li
294.56 156.611 li
294.557 156.6 294.558 156.588 294.555 156.576 cv
294.544 156.57 li
294.46 156.205 294.048 155.75 293.422 155.403 cv
293.327 155.35 293.219 155.305 293.115 155.257 cv
293.093 155.246 293.069 155.238 293.048 155.226 cv
292.48 154.976 291.799 154.807 291.062 154.807 cv
290.649 154.807 290.22 154.858 289.788 154.975 cv
288.252 155.382 287.19 156.455 286.707 157.427 cv
286.707 162.325 li
286.707 168.113 li
289.018 167.403 318.675 158.525 354.419 158.525 cv
390.174 158.525 419.832 167.404 422.139 168.113 cv
cp
f
410.742 136.189 mo
409.448 136.189 408.398 137.238 408.398 138.533 cv
408.398 139.828 409.448 140.877 410.742 140.877 cv
412.037 140.877 413.087 139.828 413.087 138.533 cv
413.087 137.238 412.037 136.189 410.742 136.189 cv
cp
f
351.575 96.9817 mo
351.586 95.9498 352.148 95.0579 352.978 94.5662 cv
346.496 84.5206 339.642 96.3859 351.575 96.9817 cv
cp
f
352.978 99.4562 mo
352.148 98.9645 351.586 98.0726 351.575 97.0406 cv
339.642 97.6365 346.496 109.502 352.978 99.4562 cv
cp
f
357.271 96.9817 mo
369.204 96.3859 362.351 84.5206 355.869 94.5662 cv
356.698 95.0579 357.261 95.9498 357.271 96.9817 cv
cp
f
397.79 151.868 mo
397.76 151.868 397.73 151.863 397.7 151.862 cv
397.698 151.87 li
397.729 151.872 397.759 151.868 397.79 151.868 cv
cp
f
298.104 136.189 mo
296.809 136.189 295.76 137.238 295.76 138.533 cv
295.76 139.828 296.809 140.877 298.104 140.877 cv
299.399 140.877 300.448 139.828 300.448 138.533 cv
300.448 137.238 299.399 136.189 298.104 136.189 cv
cp
f
389.141 150.521 mo
389.179 150.523 389.215 150.517 389.253 150.516 cv
389.183 150.518 389.112 150.513 389.041 150.506 cv
389.04 150.509 li
389.069 150.515 389.092 150.523 389.141 150.521 cv
cp
f
380.812 149.407 mo
380.814 149.405 380.816 149.402 380.819 149.399 cv
380.802 149.402 380.784 149.405 380.767 149.409 cv
380.767 149.411 li
380.782 149.41 380.797 149.41 380.812 149.407 cv
cp
f
363.39 148.14 mo
363.362 148.143 363.332 148.142 363.303 148.144 cv
363.302 148.152 li
363.332 148.149 363.361 148.143 363.39 148.14 cv
cp
f
363.548 148.109 mo
363.522 148.114 363.497 148.123 363.47 148.128 cv
363.493 148.124 363.517 148.123 363.54 148.118 cv
363.543 148.115 363.545 148.112 363.548 148.109 cv
cp
f
372.195 148.612 mo
372.17 148.617 372.147 148.625 372.121 148.629 cv
372.143 148.626 372.166 148.625 372.188 148.621 cv
372.191 148.618 372.193 148.615 372.195 148.612 cv
cp
f
389.404 150.503 mo
389.383 150.505 389.362 150.511 389.34 150.512 cv
389.359 150.511 389.378 150.512 389.397 150.51 cv
389.4 150.508 389.402 150.505 389.404 150.503 cv
cp
f
414.906 155.448 mo
414.886 155.448 414.866 155.451 414.845 155.45 cv
414.862 155.451 414.88 155.454 414.898 155.454 cv
414.9 155.451 414.904 155.45 414.906 155.448 cv
cp
f
287.242 156.224 mo
287.845 155.578 288.676 155.011 289.721 154.727 cv
290.176 154.604 290.627 154.55 291.062 154.55 cv
291.586 154.55 292.081 154.634 292.535 154.766 cv
292.413 154.601 292.317 154.414 292.263 154.205 cv
292.042 153.348 292.566 152.47 293.439 152.182 cv
293.447 152.179 293.455 152.177 293.463 152.174 cv
293.498 152.163 293.53 152.146 293.566 152.137 cv
293.57 152.152 li
293.571 152.152 293.571 152.152 293.571 152.152 cv
293.567 152.137 li
294.519 151.908 295.466 152.457 295.68 153.361 cv
295.733 153.581 295.736 153.801 295.7 154.012 cv
296.323 153.397 297.166 152.864 298.215 152.626 cv
298.6 152.538 298.981 152.499 299.35 152.499 cv
299.949 152.499 300.51 152.611 301.017 152.781 cv
300.898 152.61 300.808 152.416 300.762 152.202 cv
300.576 151.348 301.11 150.503 301.967 150.243 cv
301.969 150.243 301.972 150.242 301.974 150.242 cv
302.027 150.225 302.078 150.204 302.135 150.193 cv
302.138 150.208 li
302.139 150.208 li
302.136 150.193 li
303.091 149.996 304.015 150.577 304.199 151.488 cv
304.243 151.71 304.239 151.93 304.196 152.14 cv
304.838 151.545 305.698 151.041 306.754 150.84 cv
307.076 150.78 307.394 150.753 307.704 150.753 cv
308.372 150.753 308.993 150.889 309.545 151.093 cv
309.433 150.919 309.35 150.723 309.31 150.506 cv
309.143 149.596 309.784 148.698 310.745 148.534 cv
310.748 148.549 li
310.748 148.549 310.748 148.548 310.748 148.548 cv
310.746 148.534 li
310.783 148.528 310.819 148.531 310.856 148.527 cv
310.858 148.527 310.86 148.525 310.862 148.525 cv
310.863 148.525 310.864 148.526 310.865 148.526 cv
311.781 148.434 312.619 149.026 312.766 149.905 cv
312.804 150.129 312.792 150.35 312.741 150.559 cv
313.403 149.987 314.277 149.511 315.338 149.334 cv
315.602 149.293 315.862 149.274 316.117 149.274 cv
316.849 149.274 317.527 149.438 318.12 149.682 cv
318.014 149.504 317.937 149.306 317.905 149.091 cv
317.767 148.171 318.438 147.311 319.403 147.172 cv
319.405 147.184 li
319.406 147.184 li
319.404 147.171 li
319.433 147.167 319.46 147.17 319.488 147.167 cv
319.499 147.167 319.508 147.161 319.519 147.161 cv
319.526 147.161 319.531 147.164 319.538 147.165 cv
320.45 147.099 321.259 147.708 321.377 148.586 cv
321.407 148.813 321.389 149.035 321.33 149.245 cv
322.01 148.692 322.901 148.245 323.969 148.121 cv
324.184 148.094 324.396 148.082 324.605 148.082 cv
325.389 148.082 326.114 148.266 326.736 148.542 cv
326.637 148.363 326.567 148.164 326.542 147.946 cv
326.44 147.069 327.076 146.244 327.982 146.099 cv
327.991 146.096 327.999 146.096 328.007 146.094 cv
328.04 146.089 328.07 146.078 328.103 146.075 cv
328.105 146.09 li
328.105 146.09 328.105 146.089 328.106 146.089 cv
328.104 146.074 li
329.076 145.978 329.94 146.651 330.032 147.576 cv
330.055 147.802 330.029 148.022 329.964 148.228 cv
330.663 147.701 331.567 147.284 332.637 147.178 cv
332.801 147.162 332.964 147.154 333.125 147.154 cv
333.964 147.154 334.737 147.37 335.387 147.69 cv
335.297 147.508 335.235 147.309 335.217 147.096 cv
335.145 146.222 335.795 145.459 336.688 145.316 cv
336.694 145.315 336.7 145.315 336.706 145.313 cv
336.753 145.306 336.797 145.293 336.844 145.29 cv
336.846 145.307 li
336.846 145.307 336.846 145.307 336.847 145.307 cv
336.845 145.29 li
337.819 145.219 338.66 145.914 338.721 146.841 cv
338.736 147.067 338.702 147.286 338.631 147.489 cv
339.347 146.981 340.265 146.592 341.341 146.532 cv
341.578 146.527 li
342.519 146.527 343.374 146.786 344.077 147.161 cv
343.99 146.975 343.935 146.771 343.925 146.554 cv
343.882 145.626 344.639 144.837 345.616 144.793 cv
345.616 144.81 li
345.617 144.81 345.617 144.81 345.617 144.81 cv
345.616 144.792 li
346.594 144.749 347.408 145.464 347.436 146.398 cv
347.443 146.628 347.401 146.849 347.319 147.053 cv
348.055 146.573 348.99 146.224 350.069 146.217 cv
350.152 146.216 li
351.157 146.216 352.057 146.514 352.785 146.934 cv
352.704 146.743 352.656 146.535 352.654 146.315 cv
352.645 145.387 353.432 144.62 354.412 144.605 cv
354.412 144.605 354.412 144.605 354.413 144.605 cv
354.413 144.605 li
355.392 144.62 356.179 145.387 356.17 146.315 cv
356.168 146.542 356.119 146.758 356.033 146.954 cv
356.766 146.522 357.683 146.216 358.726 146.216 cv
358.809 146.217 li
359.851 146.224 360.769 146.566 361.5 147.033 cv
361.423 146.835 361.382 146.62 361.389 146.398 cv
361.415 145.464 362.23 144.749 363.207 144.792 cv
363.207 144.81 li
363.208 144.81 li
363.208 144.792 li
364.185 144.837 364.943 145.626 364.899 146.554 cv
364.889 146.778 364.831 146.989 364.74 147.18 cv
365.448 146.795 366.317 146.528 367.29 146.528 cv
367.373 146.528 367.455 146.53 367.539 146.534 cv
368.575 146.591 369.476 146.972 370.188 147.467 cv
370.122 147.27 370.089 147.058 370.103 146.839 cv
370.164 145.912 371.004 145.217 371.979 145.289 cv
371.977 145.307 li
371.978 145.307 li
371.98 145.289 li
372.03 145.292 372.077 145.306 372.126 145.313 cv
372.128 145.314 372.13 145.314 372.132 145.315 cv
373.027 145.456 373.679 146.219 373.607 147.095 cv
373.589 147.314 373.525 147.518 373.43 147.704 cv
374.083 147.375 374.868 147.156 375.731 147.156 cv
375.899 147.156 376.069 147.164 376.242 147.182 cv
377.274 147.284 378.161 147.692 378.856 148.207 cv
378.795 148.007 378.77 147.794 378.792 147.574 cv
378.884 146.649 379.748 145.976 380.72 146.073 cv
380.718 146.09 li
380.718 146.09 380.719 146.09 380.719 146.09 cv
380.721 146.074 li
380.758 146.077 380.792 146.089 380.829 146.094 cv
380.83 146.095 380.832 146.095 380.834 146.095 cv
381.745 146.237 382.385 147.064 382.282 147.944 cv
382.256 148.167 382.184 148.372 382.081 148.555 cv
382.706 148.272 383.442 148.085 384.248 148.085 cv
384.464 148.085 384.685 148.098 384.908 148.126 cv
385.94 148.245 386.814 148.682 387.491 149.223 cv
387.436 149.019 387.418 148.803 387.447 148.583 cv
387.566 147.702 388.38 147.092 389.296 147.162 cv
389.299 147.162 389.301 147.161 389.304 147.161 cv
389.309 147.161 389.313 147.163 389.318 147.163 cv
389.352 147.167 389.385 147.163 389.42 147.169 cv
389.418 147.184 li
389.418 147.184 li
389.421 147.169 li
390.386 147.309 391.057 148.169 390.919 149.087 cv
390.886 149.309 390.807 149.514 390.697 149.696 cv
391.292 149.444 391.979 149.278 392.728 149.277 cv
392.993 149.277 393.265 149.298 393.542 149.341 cv
394.564 149.511 395.422 149.977 396.081 150.537 cv
396.034 150.333 396.022 150.119 396.059 149.901 cv
396.211 148.985 397.116 148.371 398.079 148.531 cv
398.076 148.549 li
398.076 148.549 li
398.079 148.532 li
399.041 148.693 399.681 149.592 399.515 150.503 cv
399.474 150.725 399.388 150.927 399.271 151.105 cv
399.827 150.895 400.456 150.756 401.139 150.755 cv
401.459 150.755 401.789 150.784 402.126 150.847 cv
403.144 151.04 403.987 151.534 404.627 152.118 cv
404.587 151.913 404.582 151.699 404.626 151.483 cv
404.809 150.572 405.733 149.992 406.689 150.188 cv
406.685 150.208 li
406.685 150.208 406.686 150.208 406.686 150.209 cv
406.69 150.188 li
407.647 150.38 408.26 151.287 408.063 152.197 cv
408.014 152.418 407.922 152.618 407.798 152.793 cv
408.308 152.617 408.876 152.502 409.489 152.502 cv
409.869 152.502 410.262 152.543 410.663 152.634 cv
411.675 152.863 412.503 153.386 413.123 153.99 cv
413.09 153.784 413.093 153.57 413.144 153.356 cv
413.359 152.452 414.306 151.903 415.258 152.132 cv
415.253 152.152 li
415.253 152.152 li
415.258 152.132 li
416.21 152.371 416.794 153.3 416.562 154.199 cv
416.506 154.416 416.407 154.609 416.279 154.778 cv
416.738 154.64 417.24 154.552 417.777 154.552 cv
418.221 154.552 418.685 154.608 419.157 154.736 cv
420.167 155.006 420.982 155.567 421.583 156.202 cv
421.559 155.994 421.571 155.78 421.631 155.568 cv
421.725 155.257 421.904 154.995 422.139 154.795 cv
422.139 150.522 li
422.139 150.522 421.62 150.386 420.647 150.133 cv
419.67 149.898 418.237 149.555 416.413 149.118 cv
412.764 148.255 407.513 147.19 401.189 146.092 cv
398.025 145.551 394.59 145.02 390.95 144.512 cv
387.309 144.012 383.459 143.572 379.474 143.169 cv
377.477 143.001 375.453 142.777 373.396 142.647 cv
371.339 142.528 369.257 142.354 367.162 142.249 cv
365.065 142.167 362.958 142.055 360.831 141.994 cv
358.696 141.966 356.552 141.938 354.408 141.91 cv
352.278 141.938 350.149 141.965 348.028 141.993 cv
345.903 142.053 343.787 142.165 341.686 142.248 cv
339.587 142.352 337.508 142.523 335.45 142.644 cv
333.393 142.774 331.369 142.998 329.372 143.166 cv
325.387 143.569 321.537 144.007 317.896 144.509 cv
314.256 145.018 310.82 145.548 307.657 146.09 cv
301.332 147.187 296.082 148.254 292.433 149.117 cv
291.654 149.304 290.963 149.469 290.332 149.621 cv
289.485 149.824 288.759 149.998 288.199 150.132 cv
287.937 150.201 287.714 150.259 287.519 150.31 cv
286.991 150.448 286.707 150.522 286.707 150.522 cv
286.707 154.823 li
286.93 155.02 287.103 155.273 287.194 155.574 cv
287.255 155.792 287.268 156.011 287.242 156.224 cv
cp
f
295.52 130.245 mo
308.691 141.145 li
301.271 142.537 295.385 143.972 291.573 144.985 cv
295.52 130.245 li
cp
322.442 125.224 mo
335.721 137.52 li
327.109 138.214 319.205 139.302 312.369 140.485 cv
322.442 125.224 li
cp
354.423 114.114 mo
369.269 137.24 li
364.488 136.931 359.523 136.747 354.419 136.747 cv
349.318 136.747 344.355 136.931 339.577 137.24 cv
354.423 114.114 li
cp
386.403 125.224 mo
396.478 140.485 li
389.642 139.302 381.737 138.215 373.124 137.52 cv
386.403 125.224 li
cp
413.33 130.241 mo
417.317 144.997 li
413.508 143.983 407.604 142.543 400.155 141.145 cv
413.33 130.241 li
cp
290.414 149.316 mo
290.997 149.138 291.626 148.949 292.335 148.742 cv
295.947 147.712 301.13 146.291 307.441 144.967 cv
313.747 143.626 321.171 142.342 329.187 141.419 cv
333.195 140.966 337.348 140.576 341.579 140.322 cv
343.696 140.227 345.829 140.102 347.972 140.029 cv
350.122 139.99 352.28 139.951 354.439 139.912 cv
356.582 139.951 358.726 139.99 360.861 140.028 cv
363.003 140.102 365.146 140.226 367.266 140.321 cv
371.501 140.572 375.651 140.964 379.66 141.417 cv
387.676 142.338 395.1 143.623 401.406 144.965 cv
407.717 146.288 412.9 147.711 416.511 148.741 cv
420.12 149.791 422.139 150.522 422.139 150.522 cv
422.139 146.367 li
422.139 146.367 421.63 146.206 420.677 145.929 cv
415.618 127.207 li
415.485 126.715 415.11 126.324 414.624 126.169 cv
414.141 126.015 413.607 126.118 413.214 126.443 cv
398.722 138.438 li
387.934 122.096 li
387.69 121.728 387.299 121.485 386.861 121.433 cv
386.429 121.38 385.986 121.522 385.662 121.821 cv
371.409 135.02 li
355.923 110.897 li
355.923 106.949 li
357.232 105.939 357.852 103.449 355.817 99.4841 cv
355.404 99.718 354.932 99.8624 354.423 99.8624 cv
353.914 99.8624 353.443 99.718 353.029 99.4841 cv
350.994 103.448 351.614 105.938 352.923 106.949 cv
352.923 110.897 li
337.436 135.02 li
323.184 121.821 li
322.86 121.522 322.421 121.379 321.984 121.433 cv
321.547 121.485 321.155 121.728 320.912 122.096 cv
310.125 138.438 li
295.632 126.443 li
295.238 126.117 294.707 126.015 294.22 126.169 cv
293.733 126.325 293.359 126.717 293.227 127.21 cv
288.218 145.915 li
287.236 146.2 286.707 146.367 286.707 146.367 cv
286.707 150.522 li
286.707 150.522 286.98 150.424 287.487 150.252 cv
288.108 150.043 289.103 149.718 290.414 149.316 cv
cp
f
397.949 151.861 mo
397.935 151.863 397.921 151.866 397.906 151.867 cv
397.919 151.866 397.932 151.867 397.945 151.866 cv
397.946 151.864 397.947 151.863 397.949 151.861 cv
cp
f
406.448 153.511 mo
406.425 153.512 406.403 153.517 406.38 153.517 cv
406.4 153.517 406.419 153.519 406.438 153.518 cv
406.441 153.515 406.445 153.513 406.448 153.511 cv
cp
f
406.319 153.516 mo
406.304 153.516 406.29 153.512 406.275 153.512 cv
406.274 153.515 li
406.289 153.515 406.304 153.516 406.319 153.516 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/MWCLZL+CooperHewitt-Book*1 ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 20.1.0%%For: (Ayib) ()%%Title: (Crown Collection-2 up-02.eps)%%CreationDate: 12/04/17 4.11 PM%%Canvassize: 16383%AI9_DataStream%Gb"+`pO;,5dbbH%%[>>@kq.Qp!X(ha-O'u=(n9/ip[%m!TDasaM?+YiZ=a8"h"/-\^lh/c2)E\%H@:sEd=%0!-CKA#C4F$q[ekJ*%228qCR*VVWlgnYHi:]*&1VMIpT_U(\oE^IM0bhNG@<LiO:92S5&3ReZpB3o>5Li=4mu9bAZ4,!qV@57,fKA\fjEZ*8@DklX#bk,e%jVoNR^.suiLb-G=E#q]siIX:'mS7dl;Z3*<Ue@q#2&>\uT042O]d=!H"c!2PiQm'M@01nW'0He%"b7_%WUbI7N"c!:&b(MVD@Cp^%#=;P6Ma"YdDr="(KmA(I[HXqc$qZIlELp_)BCd)mb=j9C46E>Q#b*Z,acsYf!YIJL\K!f@h<T[mLqh0g!e^`3?s^6(&FukV\(_F^%#`i%,+b#Nkc`fH+i-g1lLm;BD3r'_&O*SQt_I)7nD+5+RP9qHLrU?_H5clfj-Rd>jffr-gLe-_oD"UkCd(n<X_#r(nW#;B3^h*TJ%E2/*d,+s1*"9=]95rY/HR\e=F"SD20eX.Qe0FA"OC<YdnT+D:?=7$;HJRXPP_T6[936G_*5QCf2<rl5M/3,!?Yg4Ul8mlk'-2T31%#MeU;n->ZG#`AU'>5V`p00l)k$$o>U+D%OX88;CiEZK\Td/=Y7JK3U`[j7%?)@-tp%#&?;cfb]!5+APn<M#<DIE(aZ#KEJDFia"k%ZM4q3E&QoRoLXW<:H3!="co4R*ml>a$?p+OhM`hP2`qXo_HC"u;`U>j*k9Q"8#&*7*m"KB(f8.8:41S]k`;LTH],]He5PHSKW^!,%/$\G5$H&&o)cG1?>dg?Rn1#e1Zt4p!N2S>7Cs*)_R0cT#6IXVfWQI5*[dE+m+i-5:@"JO?liDDo3M'V-L]p<@T^XtR1Q!B$k7hPP%"f<LlkV9p<I[:+8@Zd[BdJD-01]7J&A]-Z]lLkO_XA31695kB0iVUR/RE.?<*//GYeafUe2<-#/4^0dIr;2DFSWhahc`4*jMglVQ%59Ra<,Yc)#':eC5./7B$!!g9bTtenZ%O0S=IaV!NT,r\^cpo3aA.PS'LLmXicsr6qT#M<Y8W&lh4@K\ReMi$l^hAp1LcIE5H\=0u%0I&:g[eW-*-Ndq5mXlrKM$a"`#r3VX)KbL<(__=%r@\$#-\%4S5aFfBdenRiBu&^07l)re5r1ruZCElML5&Ve#:)QZ/fk"u'.b%I%dt\!VGeMP30$Y'P$)0)G.6h9R*"W^I1EdCYN9G=LOGqD(EZ'Eb"l]3-=Bl6W7KoJ_7;,X4NOQ^8,.)"j/Xk[-R_kg`j:oXs:/Pq\%&JMgt6?reo+#Ur_80J,$(,T4V*6m[jcH[aN53%281,L_/p2JASe]8k#lFZI@33[X\eMlE[YacglQ(`O5oE2tqcIOHrYqA7%\!oCe%3srF/nK7f5[W)=;S`hk8U@E"kW#dZX2V2rQN-h(F<lFkDVna+`PGAFK=86,H%>=@>%=eI*E6*%o7>1n"W//5#n0Cd%ahbb!&=oJ*%g,W`4ri?@K":7QYTtpiK#=HeZKG`]`'c-@#JQ74mV8bh&-U%\SrgD(V'Qg2Y$91%`bWD/%TRjiaH:Y!j?5IEO!SQnjIndK_eStrr%c5/5:Fe:qZ%\S(^0FTQ]WgbGb''rSs)0hBURG"r4%iCQ<;+B@Cp'mtmDkaG<FPjkMZeC)&(j,p/$5`bj?aat4jOCh`33]QjKN`U+%HD7U$J+r\4'*I0AXh"nTB':<>"ZX6m?"g]s]IJWa33,N`08D'??o>%FJ39k5@7,X];_TEb$Dqc6pp$43`ooK&L`Ypg<!'LSErbhO%OLq+n4'ht>:dAK`S&hfD+<nEfXcEe&2qf6qrp-IOY2]?bpuT;?F3=T;Y:D(iapYuOa$59170B[!A5Ab,BA?&6?l3W=[`%b`*:YiW%#km$aZJL3t)(Pl-rQu8)r9#;W;+2Mh$8(aX)q)C8-7%N3$[n$Lf!:>N*:WGs?jMLVj<cD.MghYBKr%9Ooj>M0<+=nM"9qU(:fJ=-%['NL*-P"Y@7!<dS,t&BIOWaX%f4Q@)X>H'-9OVnDY)i'$JM:35X=jhN_*qM>0%oX((G*cV4K>l2+=mc(=#lTheR=a7Y$AO=nKe%"%-BUZNZbLZHLo=&J9RneN-gZ@%/D130&MR3Ci17,(^<rZ6!ko4=d."SMm4<dq@egH3iI=-eD(64]Ep:h`-\uqs^Hp@pkU*DjrIIm'%U$[Yd?KLV+1d43b_-@c#D9%Ua:U8<-'VdL'rRWbr'KQP83l3tG;S:(7BXn?ef]KB4_B:4#PYG)6d/^-U9$8XFf34f]NiI+Kgd;2V%7fOGc*krELnS<^%mcbdNRH/!sG6U1E*hef46<Alj=MXaU=Lj\@6dI*E*Y77Jjf0]ro%+J+lr&][95l[Zq5Ul:rmu.aR6"+F5=[//%*,5p=jN<n!f&uMV)2HD5'K_\Wb/0)Acq3>"B;:e+$RC?1[K@-+KibXE&IjHVA2X$#bkT@dW\ZH>8*#?e<3\MO/*7F8It?hNS)4Pd%R(7he"i^8<3ZPOF,j@Im_&A6e?`6(8?K4ibVc7m>NHlYu;X"mcBk!`qS3t)%`9G3,5jp]94GSI-MoW:9!R\V3:>ITLpT9$4`V/@4%"J17]^C^Suc>fFc^iKp/NWIH\i&M#>I(\P=L,%Te31W_OQm@+l<.0GoR@iAE1XPRh/cjBDR!dX"8T5&6Rc:q="^PlOa2"<R&>;)C%j7n(lpd(XLTa-5]i_EkC+lr,1a,r?PgrmKCFKc8f]44ncAh`-KIQnpgYp/k+S,E8hUIIZI.bt'e$ama$AFB*^?Em-.%q<j5S4t^p%a5aOIA_HMH"e.<'@[[%)b0\'3YZu>KlW@%=m"#C1H`1WKk@ee@.UI@L;9BQmo@?G!)]ef""U1bYgEU+([mDN-:W(H0!T#'d4o>l-%>O-B'OU;BG_#KW3kI4oXr;MT#drtdA7ik*/LTom$a3jpE.oKqLRP,\E1Ac99Psg&7-C3d%e*2-J#9)juRe%h@cM-*aq+ttp)fMVo%MbWu4>EOf0_"""H;1o3kHGkX+8O8.EnU<pNWYc>/E^W#s&si*eG5StS3]Ke'UC"ae2ZfnaqC!.Ej\*nOIJc:TIrboZSN-K8h#>,_%mhbN#9X$kc;Y'HbU-hZQ2eL1H2imRHU[u;H3Lm<lGjm-#0N=2]Lu4(K0oktWd=8+o`9pPTM+=-T5/9p`cW?Z4VF*?fIH?94Ki(^+%aJf<lI1kDRq^mG7LZ44Fi+7["ji2bsr9ITuL7O@_Xh'C,i:2IPho;NBYI?K3S+c6lkKZ!QCt"DCK9"fc*EHusbXP;]-Dt>'m/Pp&%j=aF,;a%kl?1/%Y5l6VuN[\9]O55gF52(9spGOF4dA[uHs2(lIMOAY%[Ge/eVjcUEE,('T1dTXu$GAGcH"M<%j58ao:n/j2.$E=*%cg1,A1"gVQl?(Tejd;R\ZDAB]m]`^R7CgLeqA#oLl6oAI;[Vt*n/Z:UI!U*SdKBeB.GfS<M-*?[76>\II+VG_a)%4[@ra'-fqi$Q%Vr%9+XaO0+3VoO6hH2W7_?6.oQ(/3*a"a$r"'"U=NJ-:R`6fM1`L*0QO\gLr^u)]dj]Jm.E6pVR!D-.D*;?2AJCD4qL0M"gT_phj%U$WY,b@nl-_0`lKA@?td=+lgJbMPN17/b&R.HV@!*'DLfA8$YiIiU2.5[fIX[e9MCI#XqBVCalW6,=70i/5\s5]#2-mg3'SfrDsI%YJj@TogPBTJA4Au-tV:^YN+Fhi>Lb9-1_jh^LGsF-&)Z7Nq:iBl_+_hAtjYb7ZG/21;R[FEkm"n0@d"kq"8jg,s(=>Rq"7s0fbN_%a<!GcRlLt$s/sCS%ab2b[q"=XfSoCE#>aaBN,fu1MM;$_S=;ORo()S-Vt7`mmrEC0)m.3=k2;2=9MT0T;B/f/`ke&FSA4[3RIe7_%^L5HLh)9bPK/:Y)3>L;]kHrJ/i6621]`V7"fT!hY3B3cRP>a1Ka*)Fa'XifmkP3@(RWk\>q'&k2n7@:YS0'jLj)hJ43?;H(Hh7$d%3II;H,85c+)VsH%3@k?2aE9P7<U<prI/eUJkY[r4r"!&YF1-"Em$n#khp1r_7-pCP=ZtNKZ[L$$i.nZ9p?g'C!VuR4XkVNU4'T/r%XkVNS4'T0-Z#443m;1Sm>;u)\;<P09%c>LO.7X<O[nCsHU'$W.n6]3?`Q4[:kc@2<8lR,:+fHlEs6:S)AU05IBRDG?:[s8tJW$o<%%\8H&r,pN'no\07@g?.G_X+lGj0\6M_3A;-E5%S!Hn!=TTi0eA;AsE[YGG*RfdU3!6dgBl5gk!dUb!;&.=q*T"&+NLa'Zk_iS&_F%2su(*Me^aD`9gH454I1##60a7cf![dGbG&-Pl_1tA90<)e2MbLB(qBGX<2_u^`g4X9#8;'MfJAii?/jrEc]T;-<#X$5#Pt#7la=?%Q1iW)1q2+$\06/Jjj^8`5b=QQpkUOC]7!MG8K@3@S;Il/9og-R4e$G#7(ck=5:B!3cVYoA,+^GoHG84#J2g3mUC"ae2pnP1"t>m)%jibs%rFLoOJH=VWE@F&Am>hdGQ#d]"#Ng$_J,]':c\L>:H&P=_oDZ'9RcjW^C!rOGTDp5nkPaT8rppoSc7_W^2q!cMrTA=.4RYKV%_>Z7]ceo;?gD)`i=$,k2+)ad2\<G"s4m1j#<hB&UO5;@6V`j3,3>fu)^RsW?/V;t-iuIM%6\@@M<c/_^qAhZ<:;uZ"+t/?EW>$k?%*0,:5gtm\8hC?N_ZeOA]p_6s,)*7gqB)Ss7jOZF5YOVudFr5+4IEj:O0299Rhb/>l_4=MDk7l];R!n]Cg`\;l3=g==GrWY9N!rj@%THbSl,9fBVaWV>n5r'.j7p)K-@9B&V\'KLud/@f_,cE\6MZ5"N1OdYS#K8a4B`H\\dB=B7Jc]9h8cX]oHs-.j9qp:N":aK0T:JO]%_/sC/]2)6('[$hB-$m?=AIhO]Cj5f/LuV;_1]L."A,cQ\<um>_SUKjM`<A9:@4;S'#/5GQl2Z80'7$U!1?Y1O3@AmnaddE-kFBaV%-ZdSTS57<T9\furS9\]Oj`JeiSE#W@WVm-S'0:thc:jcb;kKFLI3(YGDJJG=.=cJ?j*X/5f,rrL0@gi0`l0CID&njBih,]&3&X0b%r-f-5jJt8ND`d"O<h8]-22?5B47]F4%Qu+e?:'_!,TQ^HH+r,"fN-=:F1]sh<R*O-S^d6+D/QfY:aY8<\:gI!6%FS^b5#)=&'X'L%kO>$[[Ao;W54e@b]Me!An'h*lJoB\a.DB6Y>jQqmpAY6'F"lMX*qFk.q?Imn;c+s^05p5.IWmJ\HGkX+=THEsr:>VCTRp_C58>Dj%>i!,6Y])/;q)^["Vo+jB&9m2$*9M8*Q-/?I3914kZMED(n9L;ZoTSV`E(4a%qQFD9$FN\0p?8[g[Jr"^G0Hjd&=#=^ru=$Gb'i2T%kOceTrUIpJnt4AQa6k:HdiYK`:r2U`r_SWr3W3s!Msrb*EQ!&!SGkLG5>E^,!<[*Y5N&?d3NPF/*UEfbpNW4>@7]MCNePac.C4Qs%QgsA>HRFRI2C=2j\.iEC-+1=AO6k<$8Hjq3NruDu`EeLk8#I!ZcqKuXq;.]:YW-b*>;o+<!1'b[q>9?q*K"cBlJ`eGAVp.!62-U6%F;qngBiXqWpFi)@?W)j4q>-q;7AJ/[0*t;5q>-q_\UNdnFm\7.?ZIQDitK`e%rRcpG$G5&1JtkAUW03PS'o'78SZK%mYh5$E.Y(/%"6.6DO*JupV#2%/e';[[SZ.cjGREg<S5/2\g1nUjm&A8oVp(Q7.J(=A6n&njj$&6q*05#b$B8-N[%5bPL>nsGVj8igloJe&:G5r?%3kf_33<oD7DOmQ<EtnD)<Tb>*Stj+$H5*<&PrqQfk:#g>"o^4hI+O!eMJjn&a+<D5n8H6rM?WPj#+i`JEu9-3"4(E6B1"$'2[fd!%_!,CH^c'+&LFfU`A=[5GYE&_OfQW/R&&I>]`e!%<PrAqR%rgT05i;*d%E1'Lq1an#%3'esjSuh/K^XCtaSEEs?&3ldqa1:*[[R>l%L@Ed\E0nFgj+pn6M4*?dP5c7\+A^&J^F82Xn9O?7?XeB')o@Zlj;iotLTT>Jku8E*ip!Gl@01W5*Wh*La%Un/Sb`8&_Y6`HJ*)3[%Dk->](:3b+ihAftT6]K5:[o/XF1bE[c11SC=&k,`n'-=%cEU<Qj?H->e;R=F$O/`&/+>elaDH+tlUWKhl,M!#!T#'d4oCC$A$+5M%lCK,.LZ,\mkEM.q8ERY4I8h9,,)lOK-aNn5+d_Tr3`:FGQY[6Jpi91T>1DTU>cfi>euI.AgYDhWD#n?ZnLDcmn`fjuMN-ENc)M"q%(u$(Gi5#/^=D%Q#1,SM%/6<jQH<9Ldh=qMna7np;rb!7h'D%g@cI:Hl3]g+>U-:O,Vs?Kok]QL[Q1peR5G'0%Ag0u0X8X\H+Y!s<%a*V!I&:mRUIM%cQ7.qUp&0p0tC..c#:*iBJo*'qH,[\O4I3J@LXZAF7ntQM2_##r`C%Y=UI`e"IZ24n?3HX<N]S%>u8N?Fo;n93(%=3kCJB?mR@H1h)%nN6<lo0\@rs5FB33iVE99-sV]T$cf,jPQHIl&!B']`I@:^1I<@^'RU"[5k/JN.1f=S^(=7Sq*)ui*[tPf5[=4%I6ZLt*4pLBJZdf-6S53K"#73!rh%]<jY'6R7\>oLa$oSQN!1Yb/LsZ5@l,1_d#InI`IR,%7?1]Lr^qLt0B6%-p/SPE`D5j+ho9(h%?cR.3QJc/+n(>kbb^)W$d.i?^1k3i8J0-`*s386E'2YW+1(oJ&6;PQm@*7B4I.kA%lg>ioWOi2IAkD^R:EH(PFu58(Q1ObbEh70V%iZ0.pHg@n0fik#O]*N4BpM-U=<5+p-3<Er^qS+1k\[/eo]sqMN(#tVXie&^/*eG1<1g$:1#0PhHEBM\L&VoN`S2ardjfc16kOcmJ%($qJI-iZ5?ctU,q7@h>i:E#Vl1!gHTj(miIO]PZL'*ZV1ajC"JX/t5T557e6L7tYU#]r.e?2-EO$qXY#5]nl::P-HI.Q%<X/*M+@%.T<(fF:!)QST,ls)5m!J_5]#%+3\a!1UZ^+Ki8[G'Q!-KAV4D>-hodhN?fQ,c"`"f))1rqWVg1hA7c%C/iPYoE#Qa`<F[WtqEOo(%/KB?;UXK\Z:D,3cLNfqC.VFlUIa[Efcp:T^AnX'a%_s9b)^#Sd60mTB8eHt./p0VEEWcFe[gPmVi<s(30*XYNgjUm^%NQU7aQN)F%%rQU,l[t6\/hH'R+1rF+n>l"se`s*Zh(S9Z)LQc35Q(`+X39eKB:$1?I_MkVL3J'2'-0sU'"ND#gA8H(_65i&^!F=R]f]m0s$P68%&01[Gd-ZE`pBS?;5Ff=B'D/nai'Y9nnp94=bS+smi%LH:oD(c;K?kK7h^+NIK#ur&p];;CilYTY<cO#TGlhDRm6ZPP6NK-#E!Tkq%KL<NYIKLZY0$NVhbbo-#XF^?jc_=r)+;Z6kDq4"=WbP=09eIg!J9QfgQ,%?Jc>;Hr)LOr1JPAIllG"ZOL4[>@T?(!6s!T\uI'.1\%2k,>j-]R`-9&FV@^&rq;ho*\kpqBk1[NE'BQ8qZ[;[WP)`n<('V#$)X+PUIH[]^0WgYSF1^"%=WAZl\*V)D<e2;o@e5.)F&\V(2f%##)a#:^s:&@7`.mciQ%YDA\`EHA]s;_I,n6!?Ku_a.NegCEV]W6lf.bg5I4XU%<<18RTopV?46BDU.;X6BV*$-2r^D_QsEN;CjUu%YQUNtV#3MpN"+DW:tK@/.<):HFW91[VQTh>fI9H#Qf@6k^0iA!=;%Y;$VSOu5WP.sG=odRDICa[osb,'J4rW2M?1.ToS&V!"lZm/%jr'K_c-Z:JCC\0sI<(<G"@]/SflF*uUE]1BiCt7X>OQs65Y0F.$@#2H%Ai00L/Xb)\jZH=W,6"Se,uBr==T^V:Q[K-#3sEk"ZL4p%1]oYd#qD#-5l:XrJh<cY&\hj[QC&^g6&plXMAnB[EWne#WrhF+\/[2nZ]P3,U6(pCe3`D'J2CYci9=-7QK\-5ki"dfeUSM3*&EX,%E?Q.`jDSLS4=P=@`'=0_Y]CRfmS82QnA8m6j@AWM-^;5cDT[i-%E_N`mh#kP81>*Le3:nc"MJ^dW9)_ap+!jM=+%iTaCYA0M1np@%G0P+dU>P/*pi\N#BqJ)"`n\[iSCt2DRuNcDq4S*%Qm=,4kU.7>B-o38$*%ZF@U-V;D-J:U'?IM!+^/eJFq>$ilC`@US8M&fa-WZJ%2d*u^_658u_sjell$$Xo*=YHc,VQ("iJ*_GIDLHh\4E,X"7NLBo2Ai)n:hUT;E.CX8<3&"cjE+6&\EC`iT7ZTr;j\UaJ:us6'BU3%Bp'D9-7`JfBY>tDIGu=[=*+:j6@jZ]aU:Ec!ZMDrFZS^e(3.Y;9<pi6-l-C5ZWN6l2$p+hf81P9pI/Jd*"7,R)pD9?GlUd_1,s2$%N[^R9'(PW$aK;qu7j6M,KUQ%'..`]Qkk-@aeI(D4Ad*R_[7C^i`At/!gOF`>(foJ3WKl_1Rq@^*Vs5<*US<7f/9$(VRTm#FmW5r4%:6GTEJM0R#%ap.ZG*8jRb'7d8.C+f*Fas<r*o[]h09ajf/UC;t*T/dmBWgq/B=WhD:PoCaKth[am:_W#^1_1AH0W`b9dh+m`Uq0g%^)(=T=Y*bU+i4()?<r_KDp--7i!+k0:<Z)/rV24Rruq)cOqPC4R_T=\_4QCCL(_>[bLKNho^EC1WXbMIYs^tOH8?'+&RT=qr]N7M%F#[E/@4hkbQr7r%fCbkuWZ[=5.c3Nb\\ZT:?B)^%%6073S[pCZHI-\'G#:MXP!/ETk^G.&p\A!N]_)!\d2^DPSbnNgM6`jGNRCV.%O'Wp4(Sc8nY=/`b!pi5:+%6t-WtAM%8B><39*lrG4S+mY3T8UYP*s_r044(^P4[:'Qk2C:#JSMsk7RRO4EUPtIY&2P&iH7n0LQ4W%+ciuM=[HP_qhO*d'>Cc/741\@*!\Ts+u'm7dpng0PI$+W7W8bnS+""-mKP!F(oCVW5QY#$2I5\L&?NGMF%j5MZt6aF.(E2T-Ff2L%L6=maDj4*75neQh>\cJP1O_CFp[hT98;!=fkct,'SgReif,%5('[t%#)DRd[gi?ZDmg4<+RB6YD.@gBgF/p<#E@)&,8-%+T%H8I9%S`u>gegQlld<Mq"=J57FgJ9P?Ir6.B)\J/5pgS.W^"l5=WS'`$mofh+O:h/QApRqk&8fKDZ`1<2/A'mUab^:aT_>:Z6hkM\4pRbD%gKbm#JmqZk^H%>]cAad0jJE@#PiG.tSXArkP+0D$:2aXSKkEq>`MYuJ3-$dLn21N6+pA;6"Qp(KOEQkf=C23hE'-6R4N1HJ5nb@X%f`sktk2gZ2h*H<]\3^#R#/X]L*R_C.P0\PT=:2t&Q<gaf/<[DF\m3,:i=$e@l7+TT':pLkDsWjI[oc1lK2qsb]NIdHl3aXgYe3"#%UjU.\#aCr&&9jk`4h03k_shH&(O!4i6tW\s?V&N+Pp@1%'(o4t&G2e*BWL&YNCK,"KrWbHNoiM@o;%qBHmk/sp$?7q4t,_hT#cm\%_mWhhK/[.qLF[@.6tXV<^OqgKfdLXWQ);<Gs41l-YA'!9@ao-LVJE;++7tgRQ/AYB!@Sk1S@pL^i55^+^GZ^Uk91!mk\n9ZD(q<8%'0.lk_[&I#`EU[WB(3WM6shaR]tuZ))F7_oSm^UdI]Wm8)\9V9r7XMF'>[o!'RVTKiRlOGYkg6XT?NYkCI=rE)''#&phYM@['cEQ%I,b7"CcASB-:Mqa-iAiKl:X3RFq/o(A*@Vb7Bl7MCD20)B3o*:-MRTHImUlFHdlWS=+j3PbfoOFXIa''KBLG8rWiIFPj()2g2&T/%9/o&1.uPe>Zr[p#G>=dT,V<n!CX[@%HP(^#%ubd^\iB;o+HdmWH;o2YHtu'H)7e3":YD;QGRV2j>?L:eDo;4!NVi\+jNuegh`nV,%)LKmmR`)98I]2o.04HYH??7f5Sn7gBr$Zl;_#i'K[#iSa%f-e0#!ZGs1l]HjnFN#P[+0mSG:FX&Uek:?2LqSLH!A#jHCf!o=>"n!%:eT=7=,(8*WUn"&QlO$<(Mc&i^<@F]4%h4%jF9ma_gPberLQ]?6tnMn"iqQ$=+l%[0RcekR,KS8bn_dXJ$ITtOdGmJ2,c,9nb9(j%^mZ]`Du?2b=mu*'kP2WeZ,V#H0W,J1*DY+$EB6Muqn,NCQor>-BnEr(A0(s.A3>822Kfi@<c;C:Lc%,';iVR%HmR6afk-*#]l!g0%q.<@T6ar-@6GHo-l'#):ng#ZV^)I>;\Uc-Ep'R10*.!A)TtS,DO@r9A51>Ilac(S.944jW)G_6_M4i[u9b6SdSoh8CNbu($i8nl&%_nS&i1M58&S@sbKgX!WK2!MFba=Nh/BWeL`3)Aq3=(]X^<b&kSHe2B:+UaHQ`)k;pY-Fj:pe@)40gXE0J(m_$j.(B3KTGIr[P\8K%f'j[1k\TK&c%Xp+e`[*#FUaZP+-:n\fTjpQY,FjM3E'QIQ=@e+Z/05Z)I)O(V6N6rhDC7qh5kT+a\.V/;SCUg>_(1GFSpj41MchE%5""sGj1"8Z1]a\qC4bu]7ha$ko9sVso:h*6i1W`eV4epV`+%=5buO(MW/8uj<Kdhqd[J[\Y+s)UfF(E^qB"8Lp!Y9_Teb/4MY:1>%;o82Jc-;O(XJm-9"jLmC6#,\=Z<,Lsh).'lfpc#`a4N/9LX+ue5^BqV"uJ!Be<B%&iNm70X]f#Z^RJPC#5qXq1Lb<01H)c6RS!;R%?,KV]3R)oSrN>*rm^uS!^h6j,1g/BJOue6H1qII;Xf3h;f$<Me[B;8+d<`%f7&AN3hSRmui/Q-[NJ-ODD9Rf+[;kp>?(2b_lItSt%dAni](FX.b.::J'qIQk=7buMH-JrQOmp0=kVZ`jHG3YNV[Q=MO#EaUB9/aTd'A`:`408\p!"*X\qK:LQH_E6?Y=:Q/fkp'AFam_Q%H1$;GT>>$f"bD/tMnVXb\p3W06'o<rY3>G!=&rC;O"YY+Vd$@-nTJWuh<W9Sh/d80e_sMueIf^q7/,gr^8^`c\s=9!3(%/"TrhQ/%/r[6gnA>$b)dTrt`O?5IVE)0m4a#U7@`>>/,*g0,(O8fnISmP^I2=a[GBqSZKQ@r*c;sT>&*k8i#3Fk.@f4Bn/uF$AU";\EQR]]*%E-G7/>A(r'4a)J,H9\%+lD$:mQp0aQeFgB"m7:S:?CLQ[J0V53fCF.^(M`lNn%Y!6rEJHmWh0cI'8*0CHO[u7s46*^9Vr#45T;G2%X4X0j:*rXa]clQW'b09:0l:S@CmTm3gK`?\]1B,68GF58FLpinbj=K#dD30W7Q]SA1O<9O%V+QXnmkE0)6^;AWV;D&Vq@9>9q%s!%QeA<R*;K!)`_!/V1%OB"'sN2-fVQUK(kh<NrfB?\\pOnVVG&mgB.="aBPPn:KB_V,n!X%(duoP[])3m==k&n"8YTj@VQ<d=TN$f:%Y?j2D3VT--bZ2]nDn`hY[EYn6VJ%;d%04BF:'H%]IJVc7E>Ta>(B8IPh/\eTN\,P&"_"r!0Y$59+^Q^*$@f@?alc/%cZC51B(PNF%l4,QiCF$+N>19[XJb@$KVQB1U*G`X%SDO*C%Q^]([MD^(D5N=GBldnp2n#ZUH*h.m/8;0W31]I9\a$Hm?9K1\UcWJK[<,np\*IO)%HQ[-#fFp44D0qB`0_Uh$a^]gKC7"<t7r;e/%3JgbC\"asn/Js',<hOt.#qc[e982kd0g1cCuubf2,-*=f:Jqi?E84>_7n4X9[3,]%c:XJu3$4U@02<XG53I:cV<]n)&lG!nW>iIPI!F4bbu]%jehGp'F`0E,(Cf;3qLY]BdUUphfnj"cbp0<?]?46>$+R5mQ=;O/?Z!@H%mps<&^,0$L0d]8uMlE%ipRT9cF+[";i-m?DN#m&O:4)nFo;a8#HYn)/J`O6%3HPl-]Tn4;YI7_VWUsLET<`brUB-#AqVJ7FhH;IU%06)KXGra1SkHg1#]J%bEBRREj9(-OV.qW/75'6VWD3f_0@S'o%K@jtrT1qB4r^O$HnTQDqjaRfs)Zl<QY<NRRpTn6jbInVY!j.i:%*9a_f-,B34g/>)\K@,'q)D%bKhV^aPEYB^Vn[FU_&pK,d7'RY&)HtV:D.XIk]b2,Hhh+d1fL"HPL;R/r#2$#X>kjm-9uCN%19Jtp%/rC>VnYU?[831VK,)u59.FN-A)^@K5C.DPVSM(mW]og_-W)nf7_'a<rIIQ`PBtq5T?,eFDoApEFl<SR:(WFS^[EfMmjbdm@1>RA=%h%VGp=Qc@d\0%3';o=mVSf1tTDV4-Qb-Y-]_R$]C'g'B%EG$T\N$eZJA%Z^-CZ><7Gad!l4HC-sr/jZ`qY.lqHe9AbhMh4XBoJ)0%P+gX`,[$YKf]5[\Vb9e<SlMU_3GpC><5MpuV<U0mSJlTkXn9TgXIfu%DRf=]`Sj?P[mu;IoX.rM3"7StP71X=RHB\[OWc<?qlI($%`apC?;(-cYN18L<L$*KFYk^';ZNjiX"nN1RP'bdSb.2_sRE`?1`Df$,A]OVY;'qU$=K#ZEegSNF$+'H0d!Y2V$?)UXHYo@bDm!T'%c?`c7N1R4C/L"4P<?A^1jhj`l#Qi<`Ya6VB1'QA.dUgIi<9[%uA&;+^[3"5JAk^Z'a2hekgh;l=nlmlD\Zl?nURQp$o6AaXl#(Ac%dAM**;9hW\knf\unu/,4.dre1Z0ECh\n^3hBiaWj0Dqs7Gqci>Af9uQ-"PH)oX=q'hcqrtX010Ak:KMG"eA`&a\DB<mN`4cHHo[Z%emBohBg\YDZ8R;oX(\7H2H:Y_IaDq8H7`DYq,e%a+6rCN-JO?8>J?FsXAp=\b,p4<o@>fIlX#jjSJVj*m>%?@gL^\qbaguur,u/H%RNcsnEOg:3ID#pAVk9I7qr^Inn3M\jK88rpFS4"bKpd]f`a!i.#+Xe[kS_)sp0YD9-hCnFo9@[e%o6!WC$]!olnGC1c]O]9pUPQR%00M*#.e)H:rOS>Qk$daG"t\#ZUY3k5$77=Nl.q?#Y@_]]p6q_\na"@Chnq)Sh'`+MhJ2']nS0):'rnb!8?H(_[ed+@QaLpN^#0@W%;X&ON%X[Os`<+ojgP0YFgRa>j:Kifk_L(\@&_5'[,XJ7N[=K_*hA]GJGI,,1&GHSrDGO\CW>dn90umrsSm+62W]DN0&N+0'dedR8%OLNL(,>$dWJG8m%YP&<AodB(dD)s4QN^F#N5Am;2JMHmW`MmP52FuZM0OgciS&?ZDBRMX]EG)IhUFB`L1Ig_fmQ"R>N%NuGRHqM`%c&B6=kg]""kbcmVkB4pL2:j>VHgioTHZ'^>/Z\D$#WD*qDQt3T+NKoCK@'X-b7N=>MPmL+1E\,5SOV:%PWQ^oX(0UV9ij?O4]1_n%A)^aiQ(;m8C,u``C=7MA-#]To2O\*Zkq[a%hDM;L2?e.jXk,?7;XbVV5+V+ULnLO'b"8,bG!\\n2pTqAC+A.0dc:9>aPn2s-G&\W%loYI*(_Ia]``YXQNsKl8W#&9O":o9'3;(T06*!$D#L%k\[(8M"1K9=MY\M*@S:a$6"]bW=1(WJC2`W]?pq&`B04q)Q;P4[jX,0"H%T-2LtE'p.ke`7VkRi292G,55BC7]uDoE[=r_oB3T_LKDo+(,1>p4SAR#A^odoEmF2qoBqo)Ff6H!tgrPfeJ*oG`l"OkV9/HEbsoi%V)T!?m]khP+tkIiW1'YY@Ag%t:l.VmjnH*h7LW^>$`A(V_RWO?XW,K+rtML.O=8HXAq.u.927m]p$<h'i9!Ke=gg?'.Okmp-_0oZ%P)C!VQtt<$lE`+)cn%QU2(1KVKW3;4#8"PaJ$"GkeiWq,5XeG@a"egM;b;\fKn_!OWrVm>*jRMh9tE/V;N'?,*]+XQ"seF^0U^V]%.e_LD)\@@JKhN:a%*2?UfuXpqrt$YUWXR8>?V>e-`Dnn*Sn4;r:n+'c4'l'9P;7i`=53[WmH5na#V6!1A]XMFQ&j&H.-_qp:E_]+%P6d8K:Pt*l_sQ2ISqZ=77>CrW^0R6Z1GlGdW58ZcH(rL[fT"a&WKU:NT8^`dZra,@bAN)9_3<8[bAP:q>q.Ur6jXmMFqS]K'Q%;&%6TAY4_ET@jKg&V(aT4u;+42=PMq0qsk-]2MPNqij-J52kH2#BnDZo2p8FpPn@1m`9'0VZGid;(47BkQ;kd+M<G9aYl'Ur2G`*$1R%8Fpme>+*L#2_NH?i*:-O*<dW9=hZ;Z"M=!pG-A')9'a[d@GDF+2uELV3GB4Fb&<^t72tm2i3">+ej(]"TgQUJUg<%cB*8H%KhmCS%HZHsRJ;b<q06NDB65f;.$_q@4_^7gdm<(`8WebO9fV)Y8L8'L\q?d^A>Q@Z(0iH3Xl_;-s<[6*gUUlom]=-RsMW)r$D-n2+pmpg+%A#S%DEAf`nKnm%t3ifNRN%#B`E#8Lc53(7Kj3:i1m(EamSrDbj46m'U)0\*>#B@2tjl4^,l(Q@E&WaRa/FfZUb/LocgSrWA,:*f2%BQVKHL\]\&4R+6X.Io7F904-5i>/@iruSr`UpKo:i$$.=hk$%g#J2QB@7je!;!1@"QsVeqVS*f5j;VZHX7YY-laeT,fL6o>#deIk%T+[-JUEpFMgb/LEO,gQmnM'-n=OT2,/8NE$#:_k\<q[9L;0q`e%`$?!]C6q'i_uVf"1C[Z=$sQSQ/:QK.q;d##>COY]aS6bnB(/0%p[^45HgpDH;7Gk)@1IL+J#:YLhFuL,VWYQKV+0<:,b!),%+aL!m1jO"27"`@Ar3puFe_L2LQCCAd[D&<7KR,Ejhq6PH1;e"?`s8t%8q1EZZdu$WU/X(a_tfe^OmA-"V>!J`cg_.o1JY$<jbP]HH+G9Qp(YEsEl;;\RVMr0"cPjBm;_g:ABK`2raOt^PMJ\RWBbSM?uTK$%a&@\jY+;hOHlV';iR+ie"]ER&2;7=[L>?.k1E&/@lN'=,^I8B1o&t#hDeVb?=E86OgZP<alBbc.Z`]gAi_`'D@sq`.'L.!7Jjr%#%<-hVI>O\B5elXgkrtK<_MF-p!/b:G#k.Z$UJEYk#XKbmIk"]7m0B_B&0;F[/gW^,cjDr+F]LpU2LB8A?YEooI?;1DU?.NC._M`m7%Bp.]j+uS0Lp%fd.DnSO`rFSb7SAk42NZ0X7rbh<c<7Tk`'9uP&RNBu#p\=W,Gc9%<^%[MH5g0I_ruok-XKA;m/lB`fhqFV8q;ulj%"r$qhRi5B_5eu#f+AhA[.sSo,qkTUXPUsdig>"=gZrmrDOF=omId4GN?FB9H!MPlFLrU_L?CPV5o<W;`2CL)M_h&JEXCa1d*GA1o%`N/X!LVA6$IZ7[1?.l-c#Dk_<24@5Al*/gA8LF)8afBR,MAa$6KHN9V,Ar77"E4t%l+3*PFKR>D0i@6nnsVEFMN3??g3@S+04(Bi%7+TK=T@H7remt/:;^6d/S?\A"fp/?7"h83<KrJ_]:dX2-W?qh"Ra.EAN\Xi^dVIDHJHpCGP6]W#eQNnrS'0H$h2i=D6=ZaW;X"jS%Eo.3T9IuE'QL;dkZUHH7m;hrP!Do5DgZ?_+bM/2t=0q$=(!3>$%rQ/6pM*do=*ObIH@p#\m0b3<p.>]1*!_dJfauN;o6"e>^@D.n%P+l/SU+s6k!(.I&b5nIX)ft&b)XN$q6u=V5Jo8nhUu,>o$.dN5c^jjICmgDn"Z*9mr5+*h!6+,U-Q=.6hE_8DRdPJlm6jn1j4;s&%'",_('mueC;.S'T$NYd`HHod-U<0ZS8nOhYbTsL]%lF_IV?p?t7)g-dF_;T@ja2?^dVM#LP&0+[6SLZt^@aV`C5iq;!O13>SM,iE%W5h=)of=s[)G7Z^U\U,V1jNp=.o7uHZ%lI0;4f_YX/DmNY[cUH8Y#1%%0F#WqWYYR?<'mFTJdXUYjP.?iA#!u1/OiH=>!U2_bW#=%FUl$*&`)pkAi$9dQG:C>4]M8X9Csb4RY7OlKfYs3rd)\7$_L`4]b^ZHn@,2I=<_M+#(6,dc/!Z4AmgfNC(.kS<VkhLP-E?YC)d6]%KXX-5Ho_#TZ:>$TJ[;>M.4rqATS]W>#Yb>.32o/#?Z*[:,&"1q'K!`TM&'%H"H'oGa/dO[/:4-U&bm?>EO?u:C6#/=:luegDO2WI%,C1u96oS3Q\A-<;$.aQU&K>PR6P9/[@]dX>BHT@<PN*9a[JGab>=-V,bTSTq95HgcKINZlb7OoNlX'h#!1$te0P&-(2D-Sd>)A+^%Z-WRqakObF'Q?L0ZQR<M$>8#$,"9uj9jJD$;P;YHRYW<Loc^KhB9QLc(1_^n-u-EC3ZuNpDQRn9[ZXhD*)[t(Tdl2d%'*%]+UBNC%0\:_0m,=bs/MDq@Ll,m,\Vs)t5_Rih2%L?fJL*r0'!*CJA'H+6bSBbA+?r6r9cj:Z=Ej]pM+4O:BB)IU!Bg=3>J+?s&i<]@LSa?Q%q*(>!=<(]`K6RP9X1eH5GV86#]WGrZ;rgS!T';6l%Dl!iE[Q6^<Bcob],fH\$>2UT[N<egM5H&Oo9J81<=@reeJbn4D7OcYQI-C=%NFoSRFKtV4'I/k/&;_<rY/KWZC_rX>S7(YZX=/5thmfU[eGbnJ2P3%<k!ou9[\fIaXl2tMD/Qs6DT%^o@@FE2ngiT)H:leqd#'Mu%0C1,i&VY+3-N\su0X_Ef=_8edB3PJnGsOANj"/fR&o_0m;Zbgen)6(=M1X(WH:je<:)&@.F0BL2Tlu6\&2LH.^+\MHKG((#CjsZ^%VLCZ%O7'07aGjKQBf4E7MC_RH]niTW:[)?:DZg'ah;iGNd?;/m5P)r:L8H.;5ppY'K#Bk8007O8[fF,d)i-$fiTB2sd.oqb.Q%j(%AeBh\cqZkd<tg](.Kk(;r-lge!HLcS5C>lU^Il93s0j@J<78=^ScJ%u)hgkC*r':+F&Qp7'XC3@2s\AIA:g&E;6Vab7%K3>61<bo%euN(Vh!q6g1lkTT('5%_m+i?I]-#&(eEBI;"r$EH(>OC_!-B5HpQOXC'a,`2JTn(9@2Kio,ff=Gc0E,CfNmJ8KQ9@:?*D5gra[pU%H#bH+$"RD7/\5bQScPs8lU-l/+Bc,\k@63m.pXN@X)Y@IgeVhM':mtF'=Tpn(6#X;&)(rn3K4o/.kmQ;X00n#605T`_/;N0CZPce%57Lbl?]&APcEa4B2dC6-+TN,+<TFlaG:D,dPU_L/Y"Y&TUj&,H@C@M\=l[?Y9-P'!g6W<ghKK3m5d=G2(2(&,q5hPOo)a!`#4[\T%:P72sQHaTsRM!Kf'9@<Dk]m!UC']m%FV66STf47[,3un,^rY9Zf<"(6OKiYZd:?]QbGG3@%AlgGh>W'.Xai)9ZVQ'6X/+cnm1i=u%C+fhrR6c_k83b<JfH4n3lca]j@mgJt^1c/'%9U.Wg?Se-99DP8_H9V:I/^5C^<.g\pK1d1j(7bXTC,KA[Y=4=Zli,YEhu][SZisa%),8<u,Q`Yc=o6V`-=./"S5/m[1J'TA(`9VT,I^%:(EhQkK?ot2MuF;^I]/+<-XTQj'l11@4(*40(OA?':][^Z_bA\X5d'u<aC7B.%fR:J?Q\N:S$FJ"*qYJntZj]>c)'\ZMl#qSq&qL7"@*\DGY,?s)'Y4J1Y8n=)JN7t9/fq]@)Ua<Gq3^f^mMq'f96HW#267q+aQ[cl%J`I[6ZXR!)=AUW@l,$rP!hG;hC'(JXZn=63@)Hq\cZXDbqt'm8.nKmtD!>`!fn>lbV=#R(@]1@NR0[LOK8]Rs!iQndU,=Q5[J1!d%jULcqg.B#s>8KE:KNnR0*btV#.9cn;lt\TICQFDm=5bkMSI_u1?VuQdr&,CF8`OY*\9,/I2LV4,8>3KCc=^/A,L=Toe#l.l9AlZ`%WGFDJ&230#b+jZ/L(Q1N@id=3)1>V]m`RfW-G7;'gV#0iba&t-33\^57tMt,jhK!8DGmU;%G@-;?Efkgi&8@%!0cI3,4BJ7Pfj*K%gRbG;BELYS#7dE!7DJjXqjrkGWKM2]"OEM2U=5nCoiEJ/C+js"Ye?;)*@igA1'ICSKs&;bVP3RrM'XY19JIS[:;rh!HtH5SS@+,a%cmHdHJ`m#,H4YCFAf_67YX-U^)f'8?FoUPe_2KiZ5d>H?=h78ildKV>?rC&0Od*d:r>mBg$&oUd7NrDD+h+_?*o(dD72AS9I("<+%2O/M.AlJ5./Uqbs'bV\Q3$I*'@<md?)?i5B:%P+4!)'EB`kuY&(_9Bp%a%F^6NI4Y"n;pj;0AZK;o-^_+!mANaqJPAONW:Ljo$?C%^LWQ6(s36le+C+73o1;8et=`2N?.UtcdIhWhi91u7*[gfe*q.ZFDAP_Z;fHM"H6ZN'<q>8Ol&\i8&WU:K%,HT9TFL3QHm6a>h[cR%AtnDqI1s]]rHiQ_M>=UAj]2bTYOM_ePTlJ$fK$,V\7uIcHI-%cYicou6lK1cSmQR8XJQhIFYA,g^p":TJIR01F(g;T4*TB-i6&B(%T6^>9SV$o9`!S+tp>YM"FLch[;*#NB'>VQmq1Tf)YP#[_LQ,h=KmjsFQVYstgnfkk$Odb^el;^[f]DX*9]i"/NO47<P^?&&YbVMW%fiR3Y1cEm@F`H@EJPU]lLl*h1p>Cuh]pXQ"?G(uH!o&H])PN#%ADI^:2+a8hd@$Se#*A3^ZNROlM*SbE"[';u-CD`e,RjoR^)3(R%_?@M!f.^I<HGE/,0PD/7lC-?5I$#*?Ab+Zr"!qj3$((N=HOGMleWoCTZbCND5CHlq[P?.&o*^/7]8om(j)FEl=>-j"Y!ph@X3PdL%$H+So-o'W#oY\q-J7SrP74i<t7+il`iY4d@Dg!EUCAPLR^oq9BZtsqB?!#N(p>G*YqLo.\$7Fc7KFVnN\.UZr`2@I;p\r$.)UF_U%(9]@sMBUHtqO^&!ULCKs?nK.XCqSqH,nqat"quUiK^E^WPqOEA!L//Sc8ZBA!L+Tg7AQKZ<fC'E^_cmNG-Nf!_r:iMS97@g<p>sT%g[Q\W22cnPc,&]9H3[IF4`uqp]qP\L)WMl*/)po:,t."GFDJUG&^$)se:jZ=LN_&ngS(-d?mGVL4E*7',_A%:LKi[0XQeHq8n#sN%(EpYM$,F)`(.4+q:QQA!D=U\f=LXU&7'J`nMO"BUE$&uf4Ri"\=(F!0fM0i<=OKrAO6+A8&fR%ls,Mfu^u);-Zgf1Mo(oH8h_2`n%'_ES1^c7tq`2Du,r^aE/VusKT@OOc,1VK3b,8B5@LX<dZ?=5dfM55@Nn,$>6k>j9UQ--!oO*rU=YdEraXlh!9/4R%jc/Quc^`UbZ%L.j`#g]VM-i7@16gYR:mb!1j$RQHl`C6Yp8Aq]]d3+otSVMj%I+SND-<6CjdG3u=@JOX9AX7W&rl7tNpq6a)Sm"tAThCTTV"^0]g%d;3_RND'/U1ee@I1q-uM4K,1sXI&I-2N>ulJ;HCd!qe_j"lB%Hil/W(DMJ&e?6egV/_)+X`u;M#LH?FDKhnkWGs[^aQgQF%qE,^j%l=gqOfkF[.M\mUL[L9h8@9t/F['p(rS#->E*HFg-[Pm-'H\0g6d2@kM@9^NmI@1*;hWo_q]:H'q$8U1-1n'!8MKY\5r2g)UT=!3J%QB97mD6QE&?!P5]]pXauU52oCA$hB,ONq1^G$doiK!k_#cThP:OKL2V,!!e!Qo"L+1;K;Mp(EX"*c@;Smi`_,CK%gpK#N:cN8SR8%%7IDFbaUec#r,uQj_iQN#020GdJVPPX?=5A/PIVj,Wg2#bX\$ocYrM'b@WOJTF850(l<0CUMmu[?d9R@3+"dYm.\>)dbFKJ7GK7t%Cr8Xcbusu57JuE``5X,8>Xbo?Gfrr8QU"ohiULLURCq.."Dp./$L>Ns1Q`WnF.4)eqt>,_9!pUDI$aa(8XD:LP<m!Nl@Y'.iP1Z`%pFe*#$0+fgVVB2e<gI_7ncNtRnpQb,?=ZSJ67A`5@q:Y$^RfKQBCOM3>CsT;<3rd*B/`eEVt@B/i*&in0m;_+;Q/YlrpX4"$ZI8p%Eu,FEg>#k:]7tk5^s+Y;!)MTZ]g&TF<ck^i([>*YASVQbS^dpdW53%kYril'Bp`4[R[M3Sd'*sgA2(>Pbf`(S&rfbLLN?]N!P;sT%l3]"niC)4'b?IoRmae<+q0CXY5^\^fqEV+AT;GV>O`2#\n]#YgTpb+&WN?c@O2]!-RiD+:9Q>CKif6/ZBMsTu8U='M]VDr^Vat?I%btN[0X5WA^e>lYf\7>n$@XdI]5-`KDcl)jLP\1\+:+9Xl)9h([3+eM%25*^1)GUg>/uSgS9,,l9(@RHK+unDNT>KK.8!VH#"OH_W%gMUCHFS4,6@FR/*Qo\0J*t1d*[3(_03[C>rcB.sZTE)A)6r2h%G(bWiNn;qsNj0qmDJU+9;OO.gY04Pr79Sk!OC&5Bn&$R]?g$`I%T!pbr(TskW\`^I^m'.C2e4WDi@8hFIFa<ZW^+&LlMAqc./g027Jje7M-")-3_4VUcXf2d[(kS1b/':9V,N]6jSKp;*\X%id'WH@4%787#\nH"W);t#nI"Gc0[2e?s/oosOi<_(AXE>WX$Zpco.b7E3o:0@h5_.uR6*bmN@emIAZe*JG,nYV?V"DD8#YIt98W_jS'ES`\c%J-/T.dsr2q&)"jt,907nXs*tpLr+J:5]@8,BqD#Bbl+._C]d(f(CD,B7ft?2Bn*Rt!N_2HAT>mk5<5)r-MN&UmAQmM%CeP^h+*a6%U8uAj]C`Zr^G0f]Lk5Zc"Sl,8L/qA;8ht*?)*9hQjuGj4U?7'!^tO>[]#+.]]Vss*PEE7qR?Xe#!7Y>UDiir!>`M3*XHK[H!%itq%[R7Xe!OQAP=W*mS@ahT;KH*e4RnosRWY8="(][4_=*K.ndk"==M0G,#6<n$$S:+OGf=Sq$M$all/HTTR_J1M)^SnO1K,%d,96N1)%+LJ%`=&^o]@pfm(4,,it)bOgm.c_H)eHA"3kaf\!YiWNVJ&U3`O&s-`K-Ab<.Rug=^VW:Z,QY15k-#X"$/[GHi;)?^T3rpJBdk]=%J8q#ip`9&02-SKpEBC7ucu;JKp,!q+GVe`I_Wr8^3gMEQ!cD"VLKar:65eJ4@^4]_).&01B3&VF8f2jf&P+?gJd.>"jQ>ca2VK_=%f#7'QKfmJ->I<`kIP"mhflY^al8I#n?64&pqs#P-]j7U$RFOMI@\g-bp0\1!FY<+Q(^t*7dANl.J6BTu.c?UsQ5CCW5b`s8ZG7'S%F;&n!!cZRU[R,-L72MS>QhQD/)^!_:$h&5j)K]=rO[W8(?[gV7&Wg2OXNN$t^)To5_?f?6Y.]<`L-7%Q<IfT*>pV*0cki;7G<$qI%fj9)6TtR?5$jXo)PoDKts/7B.?5P&l0?,b&`9uV(C;Pj78N`o\Zm-)MSV++oFR4)MO?s?lD5@(_fOR$m3UUd?O6]N>hCf&ZIdChP%9I,<f't;p`=4dr.Il_&kh`D5cRXL6'keperm[Dh?mWA1;7'F(kEQ$l)UKtk.lcLCUYo^n4(0s=Z]Z`^VG3(angiqS\0"rO!AleBq%K/WkJ\.FOU6llTp%HJ0(lS#`$f6>,j:(h=Sh>Z(P+M0#9Q@l2R]V*UtQfr*66ORlT9-DfG7+OD"Yd"=70%k&B6g>,no-W3J?StZ!%e+UL\B7clC"E[7mrWY#a'"L/Wf)u(jO?s#M^,tn9gZ+M9Gg06D,DNGGAhn)R/C!0=`A+4]-rZWX/`.SUPuh/&>^lWGkE'Gq)pfbM%(XH'ZoNhBQA1>&Hk'IP>Y?G50b@rQ_XB-Y'"$a?0dG(m<q;?Gl#sF)hXr;[C4UC/hH!TeMLF687bGT7DA^*HfR-_=c@iN+h<-jP3%kIAp,*\A2tlJK%iT($hYH30#?k=ppfX0]C-QhMg0hPWr5DnV[1.tbs?a53l>CWqtNH@l,$s5X2$k="&MX/E+JLIeE://uLk*7]B$%-==s*M1gl1=u5Q1p<K(%4;8HSs&CQ'\FSLqSU?Y(]rrfdr+e0t"BlBaO"b^E07pE%P"cC+:RX]5V:!LV1Yt&UYrO+&*6YoR>[r19%?#-OPpR&tMG<%MRqGg0u&)(;#[>)\m]_;c3`I(Z4(<X<I4U-nNJD#l+#F9R9b&4Qcbn6G6UXS<mV@X)D`9"[6QrK7-DFDqe^jFP+%bBZ#VCc6k*B:nZ`YJX9GcE+:@`iu28_oW('mb.PS(NDZ0\b_'X[!:4/GK2n:dq+lp>8LDIU,(qJIIM"-@12:Rd3>k>T[->^H35RI%1'd-Woo*$6TWd_R45Z8'Rd0`b\D8_CPRFoSQ!OsP]JlW^N2;(p[0Fp$_+^\UZEmWQKrKDrHWgGMkuV8p;0Q^ff*,!c:=jg%nOWiU%hESNU8Uj/A;f24[W7#&"Sk)ig=''RlbKBrE\@qVS3M:e%0#uhPJ>-g)Q3>LI2r1H&<t@?<R4YQ[-fI)4WmS="8fkG&*$LuB-.0u=%oCNW.j`A"5Kj`0[>kL:-Gt6=9%<S&RQ3HQgECFt"T^,c!iHji`&A+,1HBYVthYjdd'MqO`9kNL;k#M7.2iTskj6AMZ>9d,=7LCOT%V+\-@hR;??5[E&>-FNs_pp/2qMgC;@a8io'G%I<;2+^KL=Y?Ej4'QhVTIRW*B:I_ui9Jo3M.+%@%5b))ZJ;g5!J+F_aEsDa>Qs+*%8DX?NA"0uo!m1="d!NB="/rt@)RfjBRAY%J%F^*BX7VeL8HDiU3Gnbd$]K5;IKXg-B\C7cZ9[I1:+@Cho[3$*LC"FkS_I[0JW'6"%@\9mpP!J?(X,&=RS#?1,;@4gW`Oq6\=3Gh)PU*KAUmonih0r05BWHe@Z9Xm>B9#;D<I+sVMltX\':/`GAT#2g?PASfgK.[='Mr2$%+kTO;_7*t]r8_u`<uP[bTJr.pgKcjTOTbO)4)PX,\@ue>3iQ9lGB,sTY0QE]<#TErDIst(>\X?h4=gfTB&;m')$1'7ReD`A,QPfk%Hu<5(Y1QnSd0kM/\!3baMjRj`PE$"(hb/,+f2kW4@LdK"ZE+*"N=;u\I&1g%A#B/b:^>/QYB:DTI0C<MR2^sF6h@,FB*$@=\$`5"%0d-S]Ppp4t+Km,SXV_57c[>M6h%2KHOo4;uJ-*MI[nU9EZNj*W2ZPZrgB>Z^=6;Nin?$1@dsNsN2ae6ScW.;N69l\.!E\)%kNb=+%Q,^4KoKriM*Ih8n5i#YqR8%efVH*)A8j?#SJPEjsQCb6*T?hINe5^b!nhO"#0b!6F3iT$-"'M*_T=d_4Vc"9Whkg:&lidTcDi'H3%5FVF_UYd<fP\(#_kIb`nl&tphSe#;8LOaL8JjC'RZno0H:\dPdE38/rT,(_Y.XfERp!%$=q`?b,fZYc8ZoG"=""h.Ge)8IQAi<pX%5/X9V$&Y!Q(JA)g\"EL+:&H^ZPBe'([8PCqI,jIS@\olsIDM(<RGN3n-fo8/8O"dSZ>Z(AO'2>D9b"2FDd4Z"Q$IiQ2Xt`]\'3=C%4(B?G60Y<Acdda<m']P`m+Ls>Pj[qqSbL^P*_JQ6n(a75>9GFd1#hUJbA/V]FROeHH";:QBI0;9gUI-I8TSr!oos#@41?]Q-[ohd%_<6jGkO)lSEgrT7VcuWH9lq_Pk1Q,.4l(q0OI:rZneZ69pdGH';g(eC=J\n\/i'$=^6W42e(E*V2LOCV?"<3m)^,&9cet_$#+4qF%`a8$,<m_k>Elj9VI-P\S&&C`-SE1l1"JOc0$sI`d0TUkM&ua)I??XT/8(2([@+Df*q,jcRGZhE^Xt>TRf)2e?c=97>0NpqRUbc<p%>VT'Yq+2X+2Z$t@!34JN^nO@i"t4G-6(HDd!IFdO")(HigQ5r#Xsh_$!qiVq%HaAYs0McpUXmQa/-bCA?`<U+!oM"5,+s@:6+6oQ%]RLfl^(L#:Vp[iDp\-(^'n]d:nB`Hh'RB^65lEb-rHD=.!A8.qnJsl9Y-9HRjAX,$KeH-Jq3uC-[dCr=@+aBdAcplk!foOifl/b5%DfK-qAOT*;BrA(<C8BQ,In\X\STVquOhH9Ichk@]?Yq2Dk\Du2dPB`Z$@6Xp7$\!flg_N>M1ou8)PD-(2ZIj[.]gM[Gui.)X,46`%C&eI`pm@Mr!O!fc1rE"'C?d`9$kk*=jH@e#Ok.E7\g7?7<8%f*jtViuP&FLU`3YbV!_+gYbNMBEJ6bj*,/.:VigO(ko;^btd:dFU%<`=0Iqt,4,#7A@PW3Dk]"7o;m@pMlZT"3RLI'-TU?O^uIR9<RSP+*)nHV.-/F^Z6c,>_@\\Y*qC_BKQ)1m9-[3m#dARQ.<:H'h;7%YHVJM++EDaI[Ap95L3?1J^Se77HR4*K=:>U@YC+<'#05k!WQ-A31-bqLCn<MW!+gF_-3#]I^lVo#0-DL(#>Poo3oaM0`8eThkrJb%mdO4Gq^Cq2[,qY*%uJiu5"r$edrTH&2bXb).\rqN!)*5#jMjgsb<0jVjT)$G#aO'1`,\;agaSG[?08-'n!jimlo+Y%;4KP0d)lcU%Jr:S&H`'o5APr&(7#E:Q<dLR<@h3<M])@:?+<?oSPu:P#&U:4a(Fufm@3mMlpU2MS-A6VnP?S87P]j.Mq9o1X=;ViOFVr]CFYT@p%\YjYJKTRPgJ2.D"*b5OT\Qt*;C6c6Mds-sp4A$%dFC3-t)g^+Y1Rh$$Xt@cUXO82`GBe;a7#$o6N(s('kEW8?E=9,()hQK1BGE38%rL)D*P_PKc%:!,Wcqqe*gD\9r@]YpN1CLrj$Z+GnmS5s!Y,.8f,u#e:g%<.)Z"+iEDQj99D6c5TXU\Z4.:[bVANC&&PEg+np3DVV%h#u*;T3Je*gC'2RJ%)@9%aJ,1SU7R[r)N#FJ]W*n]86^]F/nkZ-Pb(PY*H'@m%+hppOu1uFE3S&YB3eOs!/SqQ-TucChIA8iUa8C%DroCri#gA`Gn..'`TgC=!-*RBoo44YO%:$:'mH<EmtV*/7,mr<CnG'Y&B34;mADA@DUArkfK?>p(Gp@,mbYZ!\E9KbA>G.q>/_!A%Nqq=$YsU$Sa+el9%^qn*OPc#85G=@[]_cu?/1M*n<NBDK$0kd[&#[^mCljVfq-tM@:9HWT&1YK'&l;)Ye(d-^TO]7KAX'PdC6>(.%4t?X4W:j"uh7*=/7-51^6kcpqFZj?Y<ASpPn]H`H8hV&$$JU`e,e%I*f.bq@Y)*hHVDQ%@6a@#+RFYK<>lb/>\HA!Q@eEiomQcuY%aKP,s36P*3blC;Qqhbiu>=#4h=SXX+"p!Ropb[Fd]O-2YW9"O&I7"L?4GEJ$AOC3DI!PHB2o6'A&,=9;*6d57&'8J*`T1q@)"D%g%q`dG!=Tr0Y>ppn_mr2\H`V\sNI`ZN-3-IG`&>Vm/QSpWFf:+7=GV0$laVPo&=e8MQ1oTnKKOL<W?QqbMaH5aD("\orr.e*)WUrgB%iEb]-l`F`D)_9J<"NTTW7<%;\B+TYM#%U4^9;aW8j1,H/HY(;C?H)UNVSaI<H*k`jQ@M#:)&jGlYa0!*GGX7aBbtfd79Ss9VDGmr%J;bufbe%bb^?hb';//mApG+.d;4JER(IB!r&8`<,RF1Nk+4-A6jpEM&B[pG>%GtpOQbO'P\Ou>$C?dsS7qctcPKWXd1]Z"ak%]*r%!EcH#O>-R[L!"dG8=P,R8QOusRSDApq2GPYGBG@:>EAQDL9SH!+(Y25g!M[Y@Ii6g>9]<7G&Sk-14@iJDhWhS5&ZW`J=c;a#BTDc%^*(/W>P.V]4;qdZVbj`NHJgbE1f.qOjdu8031o',5blQT]k*FM^rj,Lf_YT?S9H,4fLB%,=/S"U:&(30*<qd8;;MZjp5.mC/ZqLJ%h6H2h\]6'jb/T='Hh\fAk2'[s/.r`#\[#lVC\^7l!pYLAMl,47b!EMbq.YaFcbRH7YWl^H\?Yr&Sl,mu#^,OtFhd`B/6[++dItZ6%rc&WT1mNOY31mZn9dF3hg!-k5Mr:)M\J.X4!p^8Q\>1>4\W!Y-*D1Z-F((G3`!?G&Qt>;SQgCu4_p;TD[13_B-2(XG6U/)C.le;#%ZMXCjpNuRPYgqtCWM*9`S8!4G7m:TcTZdIE+Q(Vucar1N'M16$@E/ip8')@!NDVV*0PHt>7TeVc7%,@6_n4ADh\]$Yek`-l^UHe9%L2Eba[7\2X210`MFCmn]..16R'`7W4.*:Ce>K.AYL1%7'e415AMn+^\M2T^6qt=bVr7!4IQLaK/Y_oh!p[=qJ6*&Z$=2Xb"[1Jpa%3b1+d[:QhK)To4:iokMp22$b%D&]P7f%CjNLB&V`V7U$6U%mj$l557,p0_2[Zh9kWn]]Q(Mj6WOA1V,eYj##&`Q6304)@fjOR'J0%P>qU8q%O775[FH0BY?OI%LOiWG5JpVVpo5cF,/S:]&%XuDBmVg-7,jk$=(i8A]ZZf/CkW7q`g>5Kd#Pm=cta+C.k#hSQlh<Iuhn'%mj@/I.5cBZ8`#GNa%"3IgVUe`'eCr"#O8dRiq7dL6ZT@aT.IH1Yg,m1LMu?CD7URBFaoKn37gr!a\%4bactB*_Q39o$4jkr1I*IO%15THb$$`1Z3L*o\Wa,bcKdh.H)cqXcVfWEPU"`j=#NM.8;*u_VE,A\'M(QqaC?ThBclm?*&(JtJ",.J3,-CcB%GgFZ3cVRcB56XR%=4")"Mg_=SDKc9?>.*99C?ThBd-[tO<*hr$],`qVnHWgmG$!&8-$egt`M#/29+rUs*dW7Lo&DTL)[DNben^+)9[tgs&GD"[3r(h0%q"sn;VJK-C;dsrH#tgCQF@o9A@d;G*=-k:jWWjb^6C$%-=;'0/ZfIUf4::=`giLaLd:l#qffelGo]AKTIEp'2YR&RT;K=ftR63oS%Z9sJoopHN8_+*OV;Z,*]Git92*(9E>;d+#!/G&c]-G!^h=eWRr/XkF$1+*]9jH%Chm(JDWCt:7l9^>l)mJb!G1-Bg'm,"41*KW1n%[jrpSP!Da;q\]R_]7OKNWM:RK-R&4!]C";H=-Dgmr/"AfXA@U4o.)34NX^d20Ea\($Uio\4"I]3`&,X^=S&UOLfnfMFXJBF0.'b6%*cUN&Nh"OhY]lY/g"dsO._Wb)[+p454KGi>E?hcUbk,Lk*Xkl.3*T/t>3?Z5/PX[>rODtRDPLD),B[CP.^2El[jQDk*T)1SjcJNb%>BP=?IBPE48m:VL&q>&;^70(,ET-&EjNkUp=Z8S$Z+#b^@c*W$5TLr[]6ZlEIcdG@@^^[-!s[M$$\E&jop],2#MX;-Js(Bc]:uk7%Vs4dYEiW[31DH&1$Ma\@p0<<UHX;UFH(i=\G3c(?+5:kOLb`=\R"tDclmZ@J.(e7GHcm2`9bb3pfP>FER.+a,jWf8_8%Y#jH`PZa%"qsGg/lpi8UatS&hJ3Q-6[b@B/1e_;*48>l]3U,290[\TP;d\Tj<G_V'+oKn]"a;tG9-K2`iZaKQ5g,]D]=$9+q'T9T]Z[[8;)`p%RHln7?K@j#9!0dIg5hK%oV!R(i$B[pGPTlWBa_96hWnD)&!\Mp.Hu'O@u"dr1N2!BY/9Q8$Ku"_S5)uFPMZ]PVKWNKN0C2hg,1>,%PRbgV5[8J+b4?K3XerIRVom'E,[V65RCQLje9XUH$G5FY1,>GZcuf#eoh?<f/'l%h+&,sqFT;4,nf/Mg9Wk3I1(q,*"m%aHd<H4;%P&]UVk;+lt#]5ihq=&f)YRF8*36)4i0]&-L6i1sp#1fDTgA@FD3+[b?:n4knH/Dbr"/t8[`0$5IHD^Eo523))%GtpoSWqmp/>J[_%VT$m5,[N>_q391;!^^>F;Z,Id@8\WH[(-#"X>89Xbq%;pmYF[lU!r!epP-fF#mkmkj62)(K_4+1n)AtBFc&r[m63Z=lfo1KOR,+O%!qc^4f?#C+pD2@t*7P(PFiKDh<0Zc)mB/fQ[TBo<*_uNZI@mKogY,:e'le`7*pur^VRR[bcO&,d<"FaZW%'h_qjDaiV%ou%X,#H.%(Ar+tq!NGfH#*4'lf$EqdLIeX:gO[ApE#J^;@b/794R-+_Pc\X6r9>AiV:I%F^QP-dh7)5?7`]-k=n/B=Vs_+,.2R8nAijCU9d#K%k9N5l3O[Cd?gUt_gc>R-kVLhP0&ma)c6og'&4Y=YSn73*'o[3INP/:;(EDTKh*m4NUW^d:VKMZjBC#7\*\:_%9"=$uJKcrSN7_&@%V,F+DT=>/O1SY3\CFRUM-#*^?]%;Db)[H"!,`J&$TcL5oJ)E4m1^['r:I_O$*!nLX(hN0l*PscX^Zo:m_4krKKPNdoCAiaPmCNT6%\7,[%BALX;_;Ft;,V%PuJi-)KU*B:1Bm\=J.#qkEoEk."@Lu(\Urk]])8p3!N58m)2R<gZ=hm%1rOL7'o8C]2b%c(.\g;X*]i`^\%XK!6b,%LQ:gS%'3k#WR07-\.:%OE<!*M"M?B$Z:_QUcNgF--.G[u@/Qo1#P<pZs,fFE^,fIa@).,4kH(;32<(5g1"e4`Wg-,u#D"%1)eR4:-F>EQd>"ZL1ckI?sp<egE&[0>g()7)"'TpL"j!fs%+Wo_JFe+#7Q;*RBb*<9dne'pW<eqCX,a9rlW_c*C;/Zmh&EKiT:Q&%RnYSi/SS^3EbtE=);u0/2fOiqZ&HmK=#YoRL=^""bm#>(LJ`;JFQ7W!%#GC*Md@>L,+iOARXl)iXK@P)WZD,>M:(PV4IF?'k%"t4%9DOT1Al$Y8K3C)s^N7Z01#'83\>(77iLd%JKPOA$4F1slrQ!I5lT<EF4MUC+[1@$4lM</`?9>UobCaSs:-\O6_Nu(:IK&Kn^"i&:%`f8#gh0>\j?9EOnR1ZEF#Q!LO@tNP)?>?7?7Y9HV4kdL!WilU-?l..,4P^p43i`j9G3/84\?h`u0@$SS+73rfVgb3+;1IqW\A.V/%`!EuWW=a;\c/arB4SIjpa@Ftj]9B^2XhC8>NO:Mff^59Zbt!Ni@,Fb7'0?jPm+aZ:\bnE1mVHH,K\b#p0@rZW3ipAGkPW""+8*[?%m+lG1-3_"ET2mT4\=XOFGOtQ=:F:HGhHKdCrN@k%IJ!NgH@0r*4IZ2qldm68(p<.D:0/Q&Pt8Q[V_5'3[,W%Yh9p+]1VBu>EU)nU%);=0i48\-[oq$Hk;/b,b;7)d2`j!pOBg2:)\*],gs7<%tQ(a3$g8s^:1Xr\@0LMl&a[Nt5>LKpmP)7L)g9WNbT6-gRe\3QUNK\h3%B5]b#-+P0dj>q<[/*5#<:W&u@HhpuAWJf>eaWj"&YA\13[t>EX)n`1.K<Yikcd9ffZ[1n/`p"qCg8!67/6sIGXqP1)F/GJUV=C^Q%q`$69p<&`:gY!>)j`%!Z`q?Q.Y_Nug2br)02,au:RVnY4CQbQ=s3Yr5d&P66C?EWd7FR6;!+C69@7J`5>-",s?Y@K'1LDuprj:8J%7am@/WAQd5OJ:u7O,9^nZ[\@iFF3(G4JZZ%EVJUP&`!8DVAn,?Z6gQ+1u3&cnBF\[OUjC>DS3IG@7Se+>MZRYr<#L;NJjX&=taSs%d<+DXl"Y(O6]7f\[sg[dP/E*Q)]).+?;`gT1u5ZCEI?kV7apa5iB<uM\oFus#G/36AAYlhD"_PR).r4HU?Uac['=_<M]GtXh)G^h%Uf-%m7+7-B6#Y^FXD#1bZ#gZWPR\7!2_Of>r9a/"d<+DXkpFpqh1%9;\.oqFCONF#\oFusHe^.G&PY3%1<*GQ%iA#"(slqkqg"q#%7_5u$"`R.'l:CEio!P%9_Rk;IJ%LJl0bPNcaZFqHqN6%/cK)bgU)((.(UM\n)^k.!.UC8)YATm-`+V<J4mLSB3_pucD9)Igc8\UH%$5Ok38>_Vl)cql>r[norU:L!Zj=X0d5.`%npR8"n,_0l?g.c"SjP=?JMYXijrF9FHF+;VtBT2'Kdk=(S0[<ubP8\6ZAa[R^f^;(M%q\70L13[fh)*'sM]=k7VWB89.<Q=r'kN0K6%XXJOS'=1nTOmPKcdhYSGI(&g`8HBlPpRig.I<tVh1/RE9IP!aHb3pY]34aBR7e&d%+$8Cmpj2,Mi[c^QrI(R$=8#R]/p-9MSR"GKcqn"c[l;=^JTQ5Q/""<-qTaYEMFnTG%,S`TeErah_D-C:)CB(2_69W*OEY:FJse?b%kh[\u.$)l_](]nYX.,U++^Al$`%JLE!3sH5L3dg+hG=^m?Ifjt4n7a\(\tQrX!qT?/VEpahK.VB>(4YVjc,t"1VRM-'@f3f&m#R@%cm6:Shi\I(Y]`]lif%0q3M`a,GhL*ti0>Y'EgDNFr%^E6NM/gI1f=@MS]lSm:X(_]bscZ1BaN<`^406&oqB[`*^uN0$tOTRUAKKd%;]^@T+cp-`$AOVU*+B)h7pcar+98`2>%hTAOcS[#bpDdQW%kY0:[u.c#P))"%j?OOGCnh2hW]C$B,F`*;^%b&2[_Yh1P@O-*lr<k%gSt/`ek-T'^[89;1EOH=(%14FYM;p-].("'LK(aO]a,*s%/6oD2f%L7_(+4tQ1>FO@kkO2h**=M*D0SbYf>KYjlQ.0OQ!7i#_e]8%Ab/p3S)e]JCLF8*3m.Zo8]N/<Cs43foW`>\B.0oD;df"9UT[-%#5b@lr9+"RWQ%Fl*_'NhhBL[T"8H-[4YpEH(RFc@cN+,`kq1BU%_T`nSroY=dMY"ltYDtVtO!j5#)Sa#>NoA[Q)+.HY+Jt!#m.nqc+Y,?Bj^W8j6V9J-B5H#(^!>9SWQjt=H%VK]bh,UHZPasAc7Z:P%oUVU#N+j9jb4GFB11@%#Z*6';B\7NDT0Z.;a$rM8NO@;B0s2I2He/+d+;g-ij4cW=EfX9D^H44(1,<d,lc.Z2qQ$_\2LCDK`nF,&%ia[?oG3?EY00;^B^;5bbpVpW@b1k[$Z`nY4.uNET^YIj_%\g)CM/hoYDmt2Uq<E2H&d^DLhUpMlUm<u2muL+Mle7OA>CTn)Edd-A%Q!=6K?T,'i^#%DO\pam%S.E=@j&u4<ls04l*N?sMnE\,mj5]+D+*foDbh_`#n$O*K&.b,BEpiU=PJZhE]2MAcO*m?0KJtp^n,(KO%Dq9]Qf9+_#5HauLiM6D)+A-JBUG!sCFCFG2d@729)=(rV[^2mHf8krHVV0#Y2U>*Rr&`V3&S/"d'+q_Fo7\(l_e[EMSNlj_ElGSG%[Ik<$0\3/N@fJVd%QNfmI/2f`M'"mc\c(qjIpPU^n@#5_3Ss`5n`5a;^\dZc\;r6nd0'u;(QNt:pKahgO(S2MrD`Ldfno)'9s-(o%c1FL&fB-o:<pihs)OmBYr>;_lU):Uhj6+H[ed4M06uk-$mD`0`(eUj,GNY=)GN-eNDNe#!R-iuB1TDUd*<#JGY:=.j<r&3PLq,30%B[`QU<O5_<H$\j#Y#U+"3nZKcmH"X7I@`o5X!S_fB8B0Lh6h"$W3j6c1hY]A?cHs-IJEM@S(C:`I%>Ac5c85e'&KZ^cZ^^KCn!6G%DQ9&S4Qf02[)R4P1A>DT4_HT=aP)tdjD+#)f>Gri5J'*_1M%XhfGV!7c!:/1qEaK!,8B:no`M7]o?dIt\:3etp%e8aA+X8Vbn"Wr%*mlO"cTsBl']A=LBIE@C6ie?,b!taYBms5AQfJpUqN_%8)Dh9]kiT@fXOT+(Qrj.I@GR%VU'r*noA>q(&pQT/!0WH..@.nT1(Oh:%.\%Aci';7&\"<U"d;;hC[TRW=1sJ8'*sW)tC[K3TnrFe:/8?<?NRY0OUQ(fah6oI$cbW<'Gh]20HG@5#HDDR0F)sn@%hQmO`ld,T%S<,O^!^9eYCGV&Jn)Ti&=[?i3ISg6dUWKt;\Hb.G5.KJf)m/RMTGcK?0PI$qgU"uIm";ZDAo(PYn8A%ucHCYdl7Eu($?4Q55WY2-%NWSSE0Kgn$iBU7jqpm.@'a6R4%,g1Rm'B(\:;?U"nqNSl$?4c-NJdfWHE,1."ZYgq%X@*j;1Q!m!)C-Nmi;QkgN@VDokf!h@-Pq=%;2n+B[4#Cga8WuNI$8dFe>TK0Mt0TT=WD0R^:gmm1C"Cc/]q.s4TB+m^6(MJIoMYN(+n=XMt66M1NGHDq1ss&;u^Q/^<-2jVp3\f%rG.S_r,B+";#@<Z2d:0uK@]]GO^*[-)esb+^Zd628Q!h*f(BtDZpVnD26?+&>q7`X2q2)TrMEZh4)f)9;V,iu\nm,rb*hPkc/^m4%i4=@>JULU"^J`&;0GM)sWqssTaYfothfPF,mRXKJ#t2?aXQm:pqN\t0If%W!c<8b;r;Mq\IX>./R'!OKJNQnEY3WPuI,uLds-R!?%Dn)#*?e94B<PNPEfRE,^bnlYRhn"93hG1tgIadre1R&-CFo;g4"[-X,^Zf0iLD08S7I-fRi6G>`Dr7C-8*]Ubp]QV\l8R:'[?%nJ%e(rg!e4nRs?,,V_26nPK6=%@j2_<ZmLJZU+:?C-.IUgu@+*IPI=2n;6S"th-l>XGM]<:%5EH#Adg73<a-5d0#Wo#A5j\0Y);lfc>%I.m<5lShU&^4XHhN3DNU^Nt;!VA,CsO72"H%rG=]EAkQ0eFf;E]-7Vq[CmWcY2>Ipk<h51-bfVlI^;M?*NZF$+F\*-<PL]]fSjtO%p*l!I=k@T/7OqL;%\k*&e7:W3eDiVuArg,Vn)26*G?)D(#`"Nkqlf<ErK],`UX!+erMEr#a(76c:L1_TnQW\o1[4ToDdC-B@a;hA%K$NVolh\kj[HYJLr?NA&Hr[q0eDo9gh&KX[D]eMUA)>YYFr-XGY2>$rHR'GW@;2H6X$7^3%Yeo(#m[Hq2dNW+=_J:Of5D3a[]?E8%_o3*bf5LMn]roNZlhX>j[b"H'^q+uI);A0ADnl%hdCOdRh('iaXuYhEm2a/k(bnfd0H=<IO$-M:Om6f8/t#bj&,2F.W9ZB*+Ek%Q%2IBb)W<'8kZ,9H^:T<V<^C2p4Y2=?]_M%8@F4^((HTl4F^DZr$B<(8VI7Mcq]!LNkfsGP,R)>el'%JT,?M@'$HI<d/+4`q]]2NR6%UQ5)n:*(4]33(CFlEF"lNrAOH<oHK#\`[EA-6OI.YuPuYn"PUD40nd+jl_cVoom.nRE]hYRV[H1g!S]\*'*\8kP+Z"V6_PnT>.rf%cCb+8me6LDT._"H:>X]bl-uQ-a.F>7Er3o"OXiBYY92SHk0G)unE7&l9-6>^fK?_Cmd$m&Ykd[3q!_nemH"j3m_6<>r?.rKJ)0tp%k^iSVkFW"JIXhCfiQ_%&Im/1-F(P1Co8V3Ls),AsJ,=?VoXTGeQG/r>Er!c$dY$YF4$2U"OeZ9l^T9)2a5<FlH*[8BdHPcLfB%qJ%NdodLhCO)h[^1&>m(FXArkA3o&Uj>]O/L=;[[4TFh5-%cNBdETdG6qYj_f;6\%D*PG2?S0h>-m7ilUX:ceNrVY_8\liD@=2(Va6?%I3IHqMBt8L@;jup8)a9hpU@mWldgR?*_Y82\kmM5`U?$o4h5QDo>ZJ7(LHh^+=Y1Q]j!LBp"TH8PP%f+#O`]Ts0d"EZbLkJcb"Br%:EJcH(Mh&eSQL2cms$thn`nQ9#<.,mq;T6X$i0.e'>OCm2)mEGdpL^._rcf*o<pW,j874C[o\XW]`3=!!M&m?C\_g[Ga^PEj7?aE%j$9pX@3TVak*9$F_=d`(SV^"ujOk2R[(ZJ%eSgL$YQ$S)m<#Y;eurE3[k;=[f3^01oC.gQ=)RgMG>BT1iR3^-r;N1F^OJ7eMaiT:%E*K6Do>.<2DAR6j\I8kho''q&Q@@[m^30=]])M'_q2P,%f+f(aoC^]W^85`GnV:-Cr77>nh>5<5X5NNgi=W>PB/@H<nE#;5o^M&_%)/K)MZc>hhAZ/gWG(kCi1NrRerq5VlqDBAXqqptJQWO"7^V=]ZTqBR!oB0K9GeWb@:A<)@bAT&+gH;d*H[TQ&o^t_8DdBpFkF[6V%=tVJ#/KMNLp=,@'?T,[JT@sl^]R6UV6Y9Pl(Zc/des\fc4(=f1pXGV7)u]M1VD.tegq<Imb1jP+>3t5=.qsJ,9`'USp.bM')?iX2%>K8C@1jA69l4&A1.%7bA@;]A^&)d3Uh65\,L+r2q)/>sR*tN#-[`JZ6p5=71H9n7H3hi61WRmJS8,TC0'>Hc-QQe!Rr%VBAA#Bp'%]Yl>1Z>,O$j,_aiUO)%Mj`C4>3TRfcJ+_jUgJ_2A^&D[9g7?tg*q]4*:9jq=$l)8Yk.TBZ?I^R8DO`r4)gB!apWX's_9s:+\f^[,%Dr:Ki8UPmH_9_01Y<R;RYJ[;<h(15MXo$f5ZLD)Eb`1rb=3T,8[MekJ9B!90fUo3U?1bP^2qA#2o0k_?Pi)H)mhPbr$@?uH&pO2(%T1o4*dOXt_F.Y][T(!]lo@LA=:Y+X\-XF-;\gONBcO9^<^%CKEC&`/>_sqas5Q'hX/5JlKDRXXKG5C6OV<_dBb-T:S\jsdK[Hq$:%1I<-Zs%h$&'RkJXrOpd3e=9Y:%?pX4rb(QCAc/@h:V(JRY[gN,qUP_UA,>foN>IYa2QiU2.lV?Ns7K5?XSTsbf588`l\V([Zi?g9%*$>e$Z34G-g:KaYmE+)KFOSq7q5<i!>[II0ob%k_CHl1_qlQcc$VNYE*%a9X(@7A`Hl'trD1rMobG2f`WB2\+*dtrG?GdamZMs]\%^TQ1jq%oSo\:QfM9_CuVOD+VNS77ZWo&p0Kn&D3n>?U_p1+>O1U=bZ'%j(,"$6oK`c83fBkMb*l'6Hj7V#E6_qY5\(F7L>0qjj",%#b=OOTIR]t]#?R'K5TK'4g!#B]s)tQQh+QF=@NL:'b]BDWumCO^7eSghgSYki<nr]-=JhlO07__X%uN8lSgJh`iAu0`M<mF\9W^o%_b/l&2`G/pENee\B\`!b"1S2?s)-*6X(P)+1WY%s0k+F7$+A^/)s-4s0=lY_k#qZBLrhTrQ#lb-H11GA^%1=23Gcurjg>o5*]0do%=28,>n7?GF0l-aa+T-&e;2J2">opPA;CV"^(EQh2;ZsK9Y6P+\D>WpK,b#Q,f,K4PZFu&_(ihA/.^+*%2#<*%YO6h^Z<[=LU@!db%qNj[!+md:(/J+0D5ENQEIt'H!/-)[$DV])8iP+(aI>,61P[AtX4Q%$3[-`)u:L+:!EQh5[AED:j!81mch0eq)K5@hkYa=6B($ric%e*rlNoq9!41DSt0MUZiNoqL9AbC?+08Q&h89,7f<amXZ2?*.:t<D@TjW*>gQ(;]b*_n5-p;>aj<QuHKE?'iT%^8t])X;X0%\"Ed!%oeV#<q:5$4Iq8[hDiU^L.'^`J@m?%Hde4:MrTOV#[&HTAb'^tmc`TN)SqP;LoH<tO$^ubH#J8hg!IF?G1oub9i7do19l9O;g.D)8%oX?jf,H4U$"5rf#0UI8r?7o1Go$VHoBT<mA^R%M?+$J%)a^>b$:'(7=db_aMEi2[KXbEUdf8fk-:aTVn52`.8]SXOE+3G;]T;nH6%f>%8FDBH)'q'6cQk'lX*^Q78E'4/L.\Gk+!;\Sn7]D@^u5rC;+cj-NtIXkM`X,j_jV]RAKm?oj@<[d<Q2<\#f>0)Y2=3nRXQeU&(%?SFMO=T&Q>kbiIl0J8ppn6'(:C2)`4rB0/G9^]kVqUBHMmaecNYA24KcbjoVji5p82l\J0*a'HuS.;pH>,o3L4\!7E;dW@A6VZEI%#<;61ZgE_=F-!a#0^T%g*o"(sRhJ#+K=$'Z[7T\(`?*d[C+R]8)Z:$l2q7%A<b@eW.=G;9TtUsPRroPuP>;&:j]kn+I77G$rGAR"%ER^=fD!#05oQQ=$fu,/=oF&7V@J#4gU^sP(SDe:cb]#b,S@nRIn)X`Lqm0.[I&a#Bq`1:HqHZ+a&*<.Rlik(sh3\$(")4n'^>.'1%4>k$ZU^2duSESHgV1MYAB!6)2HgI!rqo@AsqHqM;ZQ"+W?S=RtgoS7WbBRs#q3@MGjO`DJ,eo5.^]-Bb$0>6:o&B5Bk#_2Vq/t&f%e(cUfDK#Qe%4V/)R=:4%1#UlMeR-ag,HGhWacY&Uf5;Tho@qEUi?blHBpPB_Z:E2&J+NHVR;ZFkO.?%=nSaEF5Q'iaP5K_0n!`EN%@pV$SPRd\u\l6X,DQO4$]W@6e%Qn51QTO[ZBdF:(``AsTMqM^DhQZ\'-P%jFmAScAj$PV%2[mnb)fMnZ\T'HIZ((1Ek$MYM\G#"'%KDVGs,7DH?(O&[QG4!`KBrG'Ic;.<>oSSq5[GR&CII`h?fku6iC:+FRbH+K'T!ucU&tMdS@dV"`dcf\Ee"Qsc<@i9=q<bM(HKFp'%h6#Si+QL<GA_nkN_oGPsqWM,H)K'Hmkfnr\.)]kK]K=Wa1aYFFoT=U3\$*$-nE0U*p%nZi]@`B`6*rrGq%)`&?#IjtXd]*q24>P,%24E_N?9#Q:jl)&;T1,INi%*V_h8`T8:/JgX]F:]^e;<YNANG"pn]dhm2!`33RBpgL^ll:_rGqB+c-mKTgcEo$IsA%ulflu1-'J[q%pW_Sk'Nuu$G`p'h2c-7)3n[G@\kVcHl8,OMJF"h9/ZBgf?%$dr+7n/E:G-M3]b5Y+Qf%dYoZ?Cla`HtJ>TWF3dP%c\qITW]5P>_3%PW$;>T3LI#h-5*F;m)M?/j0+so"I4%rSl#FHk+B&^'!Q$hLG/Jfi:N@OD\q6KN$Kf'n'rlm5=S5nu4`]m_Tia;a%gfYC4!'Y%ZI%%V]IpLHMtOhEOAm^YQi;:mpEc=X]KtcGss2lR>r)/^AV*,QW8g*F]L>_;H\+GO!tlX8Y\@.(3P-"4P:_-8*JPherk>":AmLJ@WEP4%?WXG&4^76!$Ou6.G#^Wq/?&-eHe[F<p%?:nZj!mfORF&-+'P#5XoqsFg+FJDBB5]`Pk#LOkAOD)FEc4R.XH&/^G+er`f=\d\J!6R%kI47CeB^@)VdKAtn_s?AXg^5t8_]u'd;)tX=%(ql&L[C#hPO)VIW>,(n!ML\qRV-&4tk%'VE+2Ga_&Wsjj^SPh-2E.oOIIDa>(;%%^4jR2EY7dfAtiC,Z<o!X61i88[VSg<;=;mHqD8kd]U@*2F+!$DF&G_rpY`_<d^'0ceX<mb0=$.Z<;5]#Nfo:pGc'l#IWXE:g,c;5%Z-UThs)+GYUOi\+Ns2QZ>GoZJB9u]a/%8OeY\D92rcrb^LKG%(G<Ne,DS<X[\C`sVcS)<SZaE,kfiY6ic9#k$>Z`J*HDmj'o?LP:%bhENr]o/B)pWTI(?a#cP\TsL*#:lnopZCSd[IH&oA%a&[k)Ipj:O2Opg`^/m+epuGlQD=[k.+^2q+qa.a@+uW.PJkB##3AW<V!iX%X&[IV^EFqNpGUX%;5"WsmWZ1iW;Os\r;)dfS)pTpCW1sQHu5^]hpuZ(0;mRT(Fm/'`$ApkfucMun,/1&Y'u>M@`(ZMnm$XsW4QG)%R.%4;,\m+g5m?u8htXDp_eEFn]F/qt?MWX(k<D7JP.pebe2,f.d(mDF>]#[SR,6-BY4&F9hX^Y$T8g6S)7rZs!b[V>E.rdfH1V[d%GVJ4i:@V+&\*S%DQ!*,Bg[nEIg/i25)Qae/pYk'LXskj(=sOj3C6]JgV)l>1U%IKb93lo9WY]n6@isR]C..IV"g@Jsil3RDa\Ps@%XhQuJip>FG-Qh2)J)1+Y$e7[D](u-qi_.SsS7lYqY]Om!h2OXjY*67Lp\W)^ros8d^RXGYRXY9]CBtTiU@!qio'+`GC]>r6s5W\G%998JWdZlnT]48(Y6BM#6M+4A$9./pSZ;brEYO/@q0k@Qu1Y.e9Lk\T\80)Wk4@DO`ZC=TCAKIQhPO=^r9pp&@19^V*(Dh[[C,(C;%(>&$Tr4'H3gWo]*mlrIs=ZEmpIc\"9%mRi)Eara/qiC.EpZ'tof0;K:J,Z]tG&dK'K8nWpUV!u5qTGAq77rC"?A-<6_o/40O4J)c%+Rl\[`O13Dbn%:Dh7rIMg-=EE`DI/UP@+@bG3$lZJ+Fi'`HDR>O/GLnkSk%m/Dp;Q#/>'G%>@:Ho(\=dlK6*UX5-"dO5ueNLE3R9%>sA;3Up,g*N[u_Um`LEtFTKd4p[bjXS3O<dXmVip&+Jlol,2,L;'3b3\!GSf9X=C]^U3MebMM!7Y8qu]oD6Ja2t'!)G;n@u't8cR%kAI)*+7<G7o<NXbm`FVSM`3jaHMlB[>Q+n$I7&dKATdi:3(XIuX_4pGIf3OGi:EPaB%cMq'2lA:C_cjIqN'aGp3P]K:<H@ie],Q,%n<N-@hYp+[-Tbbq:;lnBo&,N#.Sb-RGrkchH"Ht"#OQ(Unr,U><$.SkX6h"#L$e_lp%AmuGH>f0=@3n,_f3X7kDYZ:nKGMSNH<+6%)*:fAXDuNfNUtXC\RUV?`ldZ3OPR1]3FcL;%bD_:S21p5,)>KE29m)?WWs$Y*G_0$(,!4Sl]*jJ)68KF+.>:B3+jdcBfo(5XDp#>%#dlbtGH>d>b[C)S`>r`a%(!0[f^;l%A=/(I"1_q32V]&'VH`M[I'KY'NO5Z;XT.&PPB>PLh>2r.duqCkm<<Pmg,Zk$>O'Xhjor6o%3j[D7qB56fM[uGP\m@ObG.Tg"n&M;P96Jk4s44rXWW1D9"b$qfEU1QF<Zc#tS?1G;9_?Wce^0kj6AKb'5HRq%]jc7mc91k+d3*L@%hQYi,g66.2A^n]nVptIOTP*ja>5hKlE6,,%U`-^H2k7"lDE-R>j4nUN45mOiN/[jH?\ZU"bnN:r0s>*pcB?=N-=LKGadZou$#?So%8[.+;,Woj*OiZ`dVVk$-"bZYMpr\YUhtELlQfmi2P@0u2<,j`jkWrGmen/mAR^N_T4^)h-grh'^r'!BoL`-0%-98IW7X_cckM1tD%qcWeM#\9@RX,I*"kAa-FDG>ab]_[)m@D)ItiZBSGVjUWHhHsXQhp[3Sm#1V0:H0,r:*k#/A)&'q]s8ZuWT25R/o?"513gd),CB/n%lr6TEm)=<58*(IiTDDW2[sm.Zh0s,)YI]4mRYC3Jr-`@J:[-`6"7Is:a`OaM[f,5OhNRarHfVthm*Xtun$/uJ#9geV"g<*h]`;qE%m7]X12N2kWS]ZDBIJA)le_#13q7&%.c1[#rh[\'>E3ZP4Z'.3FC2CR&HfFoS`GSCKL[j>R)ggoB:J-LfOC@L7SrI_;K?sOm?Mlp3%YWb00G&2)WXM=ec^Z*>V8+.K-I)KC:bQB=b*pLYEm;I?r`#a>Of5.E0[@D@d?@A3e;1&e[I.d<USdRTE&&%ftHGISDaj]tFX.Mo9%?XFm:3r&Bd0to,BFLRQ=T$19c,SYuZHRc-&W*^d6TUSGPYARLObl>#S<qTt3f#iud/bd>0Nc+a7j[d7&Di>X&"CE5MoG:Ye?lsQn%ft.%T3U%;\7;X9YmW'\i<A3k*2p>=Wh`m3ro2IGTWhY@b\4'S:!]JW\8k7'Wbn[rM64M^#AdoS_=ILOH[*`=LbJjj09qK&ufZ)V%%OoJ&nBDK]"Cu^3:@_ZiOh8Yk,1@=!!f#EPClmLrHIr+.M=HYoIQT!,Qq::%0j'5\1/*DCuj5_>8q=K=2CBmMLh>c-I=ktq6;]@)'%\*)3NmU>-<QYGJsV4M&or2)>]/hAScjMCPNT3p!]4hnT,pAO1!QiGgs=\t#kZ(q?i^EG0Y*>c,)q%j9Xo@:_KeLMS_DVkE\iSA9"%Mjp=TQCb9eg%fXTrTbQo^O1L@o=r8NJ0+a%q=+*c`NtJTk3!MHF.^&,q18Iq'j+;)kC,V@?bWhm/O'0Kq4B24j_OkS[tS_%;pOSq%r3,h6dLT*@J0(kii,)<_K6B03#9UVhMiV3ta=-U@s-J62-3*IQLApY9l5"kTI/8&rp]fWf^S"Qi(0>o*gnt</5Ap%QMLOV%mEaSK%T05]9J%C'q\UH_kh!:^GNr0qm#P7T]bE%S)0AiBbH[kqcO-cKrIb[,6FsF3Np<I/s:K2%S].IpP9ks<3kO\DmrKhHZs87?>XQ%7C%[m0nbQQP,"=]o!Zq"[(Sh%+u$]`7nQf@0K/r;?I>s5B%=IEfNL#C9S"q)%hnnE&=-C$',7HKD_0c#7I6J,AZSJOWsXh(5_drqp8-%gY8@Xs*4S7j6o3>^=df-q8`-Q?bua^?m>=bm[rt*r-3F9&!Y2^HhQ`k04Q@/j-S@>rpTaQ#8r/_B71<!B?Ou6EO3pas(D5F]9i<1%]pCf65CG3R*kYt[(Rdj4^&7fjj7^dSQ_1_,^V(e\Roc#8B:;RPI!'Q_<EGHc>9`8*Dl2q3<PQ!@rVbKsgM[k2rbiCO043UdR#/K!%F3h&hms0>!,+\1UcMu,g3V='#$`OX[kmk)W-)E3W]'FI8nG*<aP9]@rFg)@*b-WmKqS?d4m,oSgdGam41*K_29e#Hbm;G;(QCP7K%_uo@89&*<gSR%14Xi93,6aj=i+Rb;&aLPgs?S;Dd:+HO$nq#NZr-o,Dj7$a+grl"d,ip45)V9QNjaASs5jbW\&Wg;a9`>?[o!X8A%BZTf/rLdFuZRXVu2WkD2U+`:aZYo#!^D<=m4n8;0+<.o5O@dG'Uie/h\el/FlIKu'bLD65f+(XDCgtJ#mg/J%A#N<QPt,,O0n=#`%GFI8hI#B-/E^*d,>P%Xujj=-QR"&bI?*Mi;/n1(sGM)!$:6=_'P-LGc$dn)3Z6mthR&C]dep!]53(Ddj]JeV,4_U25nk]_TXPt7/%Hn(23:8tNDI%gqg@*GBMV#Aj.`4])p4r9]:R%`:mqJ$-/r39qXjqKM143L(jE%hI$fH#KIk6n(!:O<;ZM2B&rg'kBIRW_ef3eL/i%e63ZID'1s@ekD[$O`ml8V4CLdYmbp$1Ru2uN%0mCTZ^E=_;&TMR\Uek^/H7Q_Rf<5"dC7D3<EBd$p>SX/>ptWr)$NPm/WZf/kB'F%1eW)r;)=c+BhqJgroSlBSt&E*G'PuoN,lf+p7tgr&M$@&elBpYQd2",(Peg-@XF-/:9S;r2+';gfITA_251XS0hKPFfAmhG1][-8%bLDCZ6saKMO9=%01SU:>jdC>S"QL>tEibPX9QBXSdgVXT"$nY&c]E4J*$qHW<+iMa"X]!OC+GOeo-qo%<AtIRRd(\]]1cJA$7W&=%8?h2Ea</AoasdauI)7ArR&'U%6\sq3*R#WnNL_W6ZI+se$'s1=.tJC:715@ek!sc[:Kr*E-=09ae:&&&$quY->Ip-:]IeB$4qMqZ%:m^@)#AOV!9:\`;8X9&YR@RGsRFrEq)"L#R]MlOqG]o(QBr#$HKL+I,H'NYDnPR9C`6)l_9&F+@R/L,e\ncE@7`qYb:uc(*WB)-(%@uB&[<284s<2OiiUZ'\/UN,SXXKRIZ?NZ-3+#9/fm:\qm/Z^iU@G!FXX_tr!!nLl4-'/e0R7BQ;Tj;7r@*AOKNqRJ4o#f&l_sCnZ%=ufB(<UaBCd8?6?(MmR?n+&O'nn:]X:cfJA3<9Gl%%tg1<<M4-b^Fk4K6E[!=sjk^)Na@ID)$<?*d->+G'UDEC)=6,&B$ebo(ae'%ohk6\Zb3#d"Ln`J.7:+5*?17i84+NY)$ui_O'6*f47*YFRO+s(2V!LL:l(\*.8Qrt3\Y8H^qB?M>q4<k+U(X01(c=Y2@pp`W+#$`%4)9F1l>Vh@jHrHsX,nJ!;/]/H70d7UT]Dodq<X/-`n2Pt<j9e>"J7,>hCa]#WoX>.=M?n44-:+:cqH^YfE,bJ\/FSSYVNO_F`B`E%L"#,ijr)I:0AJFH5_Sf>M$m#0-.u!Jm?qn8qO>9B[rU(O"_^'AL%AW3]SC:7r'ShSnC?==,gs*;'&q<O9iVa"A?c\kDKIEBB0IUD%UnQa!W#[99TTfd4b?R@G'RP.mP!#1IE?W>YW.")1dR&jdo\<XdkTQs<EM&iHA'%%>K:SdTMLjJ*DamGC[96D:L*7X<SYNu:+`DYf%peVnE7!`DNKI$3piJ"Okc>)7\kC.VD5'?sk*Qr9_XJ-f6bUsaG0ClR:*,g8-M4d//FWGCKlVs:5ge$25_&%B'-dU%(,_7C36-%>=%GnC_r$:!6s/eBbUgN6j=&RmR=6"uU<5$K)YSM0.]0-K`6)!%V.SK:/Ek?pD\:RS<C%(P>0P5'lG11(ea")\aMU(JQ"BgJVVL8Z?Z%c"SN?+k5m[:5m47:kaOGRd%"*)^uF(ms$bofD,V#%)_p$d]RBB7]4>e!bl2+lW!SN9tZ[1kIbD=Ao&j]5IeZe_k1F^rSau'2[`ja%q*Z*40niDN)M"4ke*LTnPZooq0(s.:S5P'ljnfm3q$cP!$WT"qqppB4lI(]ri>KdKC?2st_(9ZX3sV4*l1<)O,l6<>6N;A[R6f$U%=5PX&#:6`@EIYU5E,qi_JIdZo3^ag89*VGbTPu;Uk.6Em(J8mO="^#2(<0+Z^N'1INk.jG;2mh%78k8p6)Da@12AAkQ/mcSA.^e7%Od`?Yj\_@R3QZBD6$HTa/*Qf55i=IN`$88ca0qNDdBDpMGbg,oaVI(4fp4+K>2t:be!8ME2Q3Ie!>g\'jnl0B;0cFg%7(_Kc'$?X%9+tjqI$Q6q<HVAs3h5fIWlBi3L7rqQAKnoU[?,TgZH;bFT$&2_osrLCmQu1t"9S-@MXnG5aSsB<Zh-o>XuDHHap2',14XK)HX?k)%0LL:G;j27X$INPdC7WAU/@aEU4k5*]!&EDsG+$Wk)L:u'8r("FNRHphb2B/ZEKq>h5e@mA<N^cGDmg'3mfaLqqaCC*:]cAlS[5-#%+`^goVX(+g/f)U"pi;aGXqP:3,Oq'819.8[H8$#]jET-XS)dTc"*_WjREqBtPpZr"!WuJ7q^GQ8J5M(I"4`+me(pJuRf?P.\hj+0%ArTjmOoTC$c0PeU$^36K_fg<4G[K<>6+4#A?.Y?B/p=gB#@h$'MYA`$]1ea;-Wm)+9c[7M_@9jO1]?[Q._!idpc_6K&P/Ci#r8UK%Jc)5:3g.<1CmE[qUn[pHehZF)`t9R_@E)(MQnY^;n#c&3bCL/M7u\$'#5TJ7?Kq$ZK*mit@%9J-Ht'%F;[p[OPbl;Xd`s2e%:mT-%&6-_e#F.P%O(rTk?tCJ4d<RNR&Q0@m1*$=sFJS6(:kpT/'PT1'cg?<>U'XYQO/dgYQ?T3l%:Q!0@\";*j.*2<eAJt!+?ld-.R9h5%^>tLh3,9?Dq(W8.6?n\/3AVque2&ihlse;n"Nj(j[dO&#Ra1Gs+aX>fV6s!A40N54*D8@[NEoOOCM(2U$9\DP"-=p9oD's0_38W5%4;q.l[@4'/OUP78;:,U[qis$=-Aol4\has4@\H&TGQckpSg@NY+<rsT79:aET+#X=X+eFPN]>nl8W.%Nf0`J)4O@80F:L\_YP$ll%+__F#c5r!&BD.GLUA$>_'SUkI23WV=KA&,@.3P:DXZ_3A_k]=1C.bP>V>-]KDJ!pPDm1!lS.,3YN%%-T`m@'Jes/\1nn8P[:Q3DP%/I%+'W#3\3Z09K>\Bhc0pFa%O.T]:ko,(RN"4Z;ddu:\"r+P;Q+))N9M$JP48K[bG;:L6.3GL`/q-p(WW:;HU4+NJE?hII=&ZC_t%#<cT0cg<K7Q'jH!eR2pBXXY@:Dpbj'7!A/=PVOKL26sB+Cq`K4)RO;6^1V<k/_Hs:KNO<$q;qrr+=HY,A!-CHY&uQnDi/QZ6rlA1%rhlp?cM83[%+5P@+rFj(D1)8S/d.k^elh6,SdJ9*.&J,!M5Z'nh4iI)h_jdb`;hUA+[cDQDV`042b1ZDmd^5l+FlG@g7Ei\-S:gn%oU#cC:+nNcl3.P5IOfot=_aGr<;,d\1Z!SeY"[`^G,79>Yq_/$a1bH,6e&!eG!OQ/ASXrd.:o+@W<KPm2NsiZ&MQPr8e;@]$M"f4%q@)K?GhHcHYR3@BWae=2VF*oM+`B#N*(-Og#NUdKmVl='Rp:KpOEE-mNS%Ne&XcXbR3&$A0k_s=&jmSs1S2g,dISs=_bQ+CW+rN]%qn[$%P\h!pR2KAmb=6?7fkBYUH'p$PP!k`+fntHBO[N<p?jHXWoMASn6-2E#0E`+:Z%N"DcQYs@AakG`<#.qj.d^=dmh%7t,Z"-,%\!l%h\\_QAk<OhNn4L7.RWC]X0BZ]3dbB0D.1QF%e!Z$%0&$R["79>1ZqJaXP^_h((s82RnhqGH4IRodN^4J<SgVV)"nIKQE#>ij%+2uOGnn:3`jf=7+\l]dcbOfs`Ajq5L@&F$m13fl<e3sh/-e#sd+[_[`PUY4qj0uSW"`i"U7t]c92ltsLoE(7!ZD!8`AKqqB6\4_T%bb09h>qFH]:I%#PYUO[*%'!PM!gN>)^!3=&-30-%[V0(nHq"+HkbB[mF%eV)W@YKcFPO/)DFDmI<C'kkaEl"LU-'=+'=AG=IKTgo%/2=YR',4a"#t3#s?M)1WUP_GPS3Y0A"D%m%dccl1Q'PLcc;G;L(c$I@b%*h\s/G$=%o-4?6"O2a)77:n19&po".9<UmP%-.DkQ"M%h4Jd'pOM=MpWJ-/"!b]eF"['9W6UYuPt7rlWq!SllCs6a1iWs-HGZ!/!SF6ak=_4FmT&,/IcsT2qFne+H.$kVT8A+`i)7*(Pm^?'%md^)YqJp8,!Y1`WmjW35nO<*m4'edfPaaVfW-NQu:/q7R[NM^ZWBA<!)Q\iS,;(XVIX9rC'&]i9%Q'3a?0hdUMmX_l6LgcBd07`E%._FJmb7!RO1)-e-i1(CBhh-3j8[]IdC^g]t:.^dTZUe=iMeiu.GF:`KR+%XPPY#R3=p3R#E@>$&H`QbVm4>c4Qr]$#JEg0r+32uG%n5NVImr84Fn7^)4Y`!AE/mGib<c'TE?oO<UO8E6i^/"i-J\U]WM,k=$dDE-te5shE;1[!46u$")#<L'ED4=YPN+AU#VQm^d$?8m7%NO0("oUoO\DWj,38l0+87"*"4CN+\K!bt-2R*W&i>>+U;;-BU+R=pgRm-*;V?)4"GD*t"i!YK.0h:mQfZDgAB?.I3H`eUs)F?`A*%eaB/6m@pF)o0>B=ZkHb@O`%ie$@aNtZeDEhq`_bFb:C4X.MTifApY`*#f0%c/B>`gdW]47h7XcifPK#b+(c6uh,K#ofNNl^ik*Q%%ZA*fH!F;RqTF"aXG?-8T\;b+=Z*Xe"!9k"jlE!f0AU&Xp$+*1#(p*=ZHr2!:ZOSW-eWL5$R`%>:[Yp9d8tq.b`"<t`/ieK:_i-T6%,Ch,&JiuK+D@IqLOjs@s&drW;n4+uY[6XH@-k\2_>8dSI'#]nZ+&dG]/(%oG3(X[W]l5HG4uNsqM[B((!qmGc!QZ'^I+RW!"W-"^%`%>"B\/6an:Y$J&K_sQ?^^hhh@-_@DO/cjt=53d%=nS#U.k[-]\30Cbgcuja^#B)j9!1U)`>q3a`GIlE9?#M\$:8a18l$FV(@&c>%]J%TRTaXOTH(Q^LOe<+ZG6Fik726h(#WWcCSPfnr[]@hbcn<+R7%Cn6m9o:!<Sj&+#(JMG5G7d_.0KNBL.k\CKTH&0.LI;s15kK+%T;t^LZW,!4aR>)NKH+,683t+XY6rqNSH286[reXN)3f!0)9U/o"M\F;$rH21Fmj9*Rg'q&J@*eCSWg<RKn7Q^a;;@tL!.bmikiZs%S`;KSE1u)J%SdFEY]F!Hm[OWAb$]8nm.d?9]sGhK,Ol#OGSp>9j^mN8=Mu$8G-7!a8qM#/25B.=e7sH>SIM<+Yu1*d]'>eZ&fj1T%QkcAH&<dD5'2a;:KU/VS5b3)[a].Xs.=,<fSouW^r8JP356iu**5fPGbO?UKa1@)cYk[cXGSftjV"`sQkf$2JIJG(tmhCaA47bmS%>dRU^M`5"eqm($.ET`7igr4h+?\XG(Z#Srb\7YU^O0LcRL/R])@lM)W$YhW[c531WZ$N4:f1I16j[AGu\O[HR^?G?QX1^H!Su42t%K-,I37JI'V&bjpb/7Vg&/'Z_7015O8MW'q]*Z=N;3SHRd7JMdt>6R+[ALKPn?aDOq$nsJoZ+W-gAPa>.GM/B;6cN,e4M(>Wpds`D%1<>OQ+>1C9>uY:ZB4npq3.,5DFlnVXN2p&mM4OGB'ucP"o*lg^jr8h^:@L.nXoRP,LQ3W7c&4Ab$r"?8HY5O$Tp)\iG36^3K3Xh`%R1F@OKho!1+1?[(q1r5qeuKJWJ2m-h(cgBeR1C7Wl%/+<gFs*7qfi?Y&j,SRabRf<EIoiNeZ]dS^54XQKV+&?-MHS[\3I@GHp,jR%o!K=Hnc:1';rYrTQRe2\`0E!.`[.kr7t/5E@Go:`^=l?3`Pn)q_OY&8aaAB1@>ZY-?26`,XP>_QPn,Z]7GMET5!&C@a?'.\7@7rW%7CDp]AMC-1HfoPn>"NuYq=7sZ]7Phh+3ogH"'7\?8"J:Jad!B@:s4ip\FO(+Ef<D/jbkCRQeMhYo(>i>au9=RPn.f>Z,id.b!u]`%Nk"Z=oL:]WjhhY"*)q+CgJ,uVi&O`\PB>Ps(dmc7LBEaYX[HFi!'67lfp+5-EE\>!m)g-d:*q063A7V-aR3M=^'m"P]96IlYT't)%)o\'q_D=mq>koSn%pbGX/aoh$T\k+e@:'6/CLp:*0K1:n8tLFB7mG&T:,gnPbg<7kn`4k]TZ!(1LkGad?loH;6*94*_'+=8DCe7J%-\VPtbjpq,4A,rf#$n1]92]aW:_/[&3<V$eEG=t(.j9ELHppRWLB(r-Pn4k-OpNj9HK:NZ3a?e413&'>%G<UjF2H2/=4=I&*H?_>%&t_R4GU*g25mUkOCJsg?0-Pi`<,BOU+b1.W1W$:S">E3JM^'Bq&`-4@B?q`OJ@#pm%>=d?:`fbkK/EcCTCC593MHtCqi/s.#m%tH%fh8T)!+M8*1sg:j3/rbA61gk->grt(;ljE+b#MnP#n$YSP&^j09[G2E(DDQ(-?@'CKE1`CYR(>H^chn*!@7k&6WkBJKE*@o%bY=D%QOpq@#4KM3J3j5LD3!UN^nH0*1S.@P#/[.>7*).2SMt$Fk7GE;"Wp6$!&L"R:3oDRJ:N"qm5P5f!(dH(%lPS]"->kM1DH$+VisIJ%d1n$t#RLN"Q^%\+E"$.>rF"p<W>!W"0p6J[pIS%kOhrCK0[]&P'2`3=BmGB%E"(ZT(3'c@DXoUh*M$q_-74GqDo5*S?iu9e1f<1r%kY<Q20LOEJ?]`2+ioJ#p7B"a1E^Gkl+H?KHkGD0%X-XYg:bX78@?(?kSRZ52NU=W?9B$()0n9Q3Rl>tCOItVM`A)m2KB8gO0n;6<%?'#F!`;jKu-1PX0(dL-MY2&Om"q^,D89>Wf!%-@Kr?)<KJU3`*!:k+[YGs=-r?n'O^qOSA#*9$3:1kOKLk0k"JjKbF`.V)-J:dhV%D-h$S?Dq*?A[Uu`S;fRg1t*aq6t-/4CSEcj8e<,2hMH:s#6A:dp`qJJ]'LZra[f&9+RM,8X)Sj3@&n;^i9oD_a5NER6nta(@Aa>D%ZB11T>o&%tOj'F%?m4s-"<)G.kU7k1/HYK#UaI?[$;eHiLcUrhfNE74Su?DeI,P*jYE#?qp@KcYAQ8g%)?UD=\Cm0k#+f1r#/Zc4%jJ#m9U*\n:^nQ'"-_EMm/9Bm4B]3.AG6)_AnqWHGGgt_V<jmd;D\&Mb%)ksBd;oR.Ic#_aG%kh19%^S(MTQQrB<G(+/6TOSW*$S^%3#6Yg8!-oh'ER<6Mlo.(CFDXjP=Zr!=[t92-VHE-j<QuoW.,DW0YLUKCXeV7>e*KD^-N-:j%tEH!Z#.P^0MdcEHBH&(EGfMp[>CB%PXi,&=OmLa-7odN_q7O8MT.M%b<$$.WN/Y^_!NCt_E^m7#dWg]9mQmhO.'19\kl9,dRKs3PUhf<2&_#+ldtNLkh5eD,fd2Q+*kn`%G1KkAcqsB_&Z.X5dmu038W68MlNo[taOUr&U.0_A1Y@\?p*UJ#e)5'T7)t=8(&%O)-Ka1$n%"2Ho,(Z0Yk83R?jAjIjoBM]Mh)sF%ea8NYalnTtJLt5DD0]K[V^R.fTtto<8P,3!lM+So%Q4`l7bS"U66j#nn_7OCc@fHCRP([:&k>e,e]3dJGm(C5+c*I'DEHDDW!^4<%ePeLo:&Sc+.N"EZDb]@tU`iECUBe>tBO>t+$kdamgGGHR5EJS>KkcAqZ3d.<M1@5GE$#Ws./[q=r$G^*;EhFqOIIk[_DlZpO\j_&%g'%SL:CC/<3!;rGS,hVTCc@^bH@NW6ld-<FU33+/'^D,#AJh[kU0TfPOo\QHW=e@L8-D2hiWi?AL1Z0dq1=Ehl.efk<RVGB\%t#H%Ulg^i+m<@t3]:I^q82W-1F4J:@TPU><-PLP9>3+1Ia].gRDgoXBT?pjh7,VSJ2,lk+TdDEK+J3e`i6k1LVZaR2%bE\#V+ZQ,iBH,%Kh^Q`.FkX0:Me&1dOl:Q7iSpkZka_>A#'2LaO^D47u%FN6nZtDo*TdX4V>"8L&V6)WB6dDKJG9ePC%GV+n75uh5d-^d6qa4ppc-"%$W+qpcl9e$-KimO*B[(cR\K:65h_&,XQWskAj05uXJk@DHM0J]i>]as\itA.PmiL9Q/mfhnVik.`(jl+lUW_JTJ:JunhJ$7KQJJo%>Z)@cMAd,V@%MN/+/rp!R1[_8,*Ta-Td:nrM/>!VR3F1)N(k!-!>6@4YFu+3O:#"tk7d-o,\G6Rc73%"7kp8*?"Hr4%Kl?(,0>\A%ifr]a(Hc\%6ED6gUc_3_P*ZNAi64Vd']hmkn!>2n@'M;Eek!>&?:SmG`,nb'd0+UO?!!b_W$`kn$a`X$&(Fr:A.J_j%4Y>BBkM[k%_j`67mk2>c8YBKl&c>rI@gYaA):jA1#(eo'MArPT]4W>bC0*Mo8UH`d^i[QY3F?J@6,o;OhQ0`*jjD@S#AR$>ejENn\kCM7-pdIT%K,R8#F!@$d*<O)XBkO+5Ugr4\([>,r(Z]]SM`lZP=BmLsV"mEU0S0G`g^s[2VU1Z3gqk&lE2GTegkCYiMeS22%'*?RX,=kNs("c@%HZrnMpeb,2qPKfnYm-;bHW_Er!HUnqYD*Z#$<j;@[EE&55/\A+2'P@fR0I-kP3(e642gV*koI&Y&/!poAE6eHaeQ:h^Gplq0i<!h%*$Q"9BrnY-)b.2<QUc[lW0..ICd<DX.gPIY)#c8q,FiXRT:$9d27^s/QDq:rar0td_(RFE/3a&SiTD@1,YSE)i*qbBbOd.`Z_Z$$%Rj4TKX8?meH'\@7MWA!&>m%]O1.keU.*RRf*!=BM/Kfua5Y@7tc>L]^'gS?8k.uQCoGE7Z`u5\IrGJ:BMcBkL#7Dpth&ps*i^gqZ%)57cih4)F9LJZq(e0,[f;b7PT6uXN*;BAY@NH.`kMTf3'ZReu9LgjB2O]5R=EK"ibco5#*$H*qp8_K5L^4a9G'$rDPg<P`<OCEL`%K_eO\WKh)IfoA16$pi$,oH-AD&nYRC#45g@p[Vu!4#G=FV=ILLl_Cmjkrc$#$*p83,Q2-\"aiQeDCc44]&WXi'_!?,b^/f.AF0o)%WJYh_CnQJ+N0CRH4_We.`mZ@lNC37RSk`Q6d`n-SX;:IoJf)b(E8gkaQaXd8)@im"Rk6&F=<C$u'6Mp\62^\o.T9M%rk/[V^s;[,%MoO6!OUM?='R5AFm[Y3i*f+<mqG=lR/do:'jDC=?RZXds@O^Pg="-I#L)-MgD@@p`1Fn];cnurp(rZjR3mX8C@8u8B6m[hSAP!M)%Z1>GT)L<0%D\+3][,cl`VhZFk!m>Qm#Yu2Sm>B/chfubhkJkAu=ipVA)fRP<7hi:aLQV#R!,QgQ$Q:?d:hGN-%4hGeI/%Hj/#I"d%r!JG&'o;Ea&%2NB5\ETqN90+1_fiI<QcNg*#c*`%XdNW;TnZ.GAtGuq7?!gO04A]76?UIN&5-j1Edf!YJO=,7]-RF\Ednrp-eBSY%I2T_uY0br2>XtB\BM:\Ac_]8aBl]IOYs31X+2k]ZBju?!839BSO=uCNaV]@63jh=so^HE':$p"LiBjRBTP%CenssO-&$F^F.=%$M%aeiLI/D7)?X.UILDt!No:e3P/=G3l9\:p),I/oZHI<i+'?#ZWG-[$U&PQI'URp>[?Ym-l`CB8<$.6-a#/Cp*sHP7XFB@/XL%lATP%D6E7mc%47cSK(?o&lP7P2\D^c<$I(8m5cm,_BMS)#,0k98hq/rgu*Jkr(&p8`POke/jMlt'&ZMT=]4A#rCArp9A5XZ+hDA<g.%k=%+t/X=?+1D5;+Eh<;&dV9<jl?`$?4WaPFQj=/(DDdbO=o!N$bt0DSe179q*1mr,X#aKYC$t*6N5aadUHjH<l_0!rU,I\Kk&;hE4(A%;I-]r_GM&0Y"DC,g3SZb'QNEZjOmBd(]1S'=;BT@8ZR<?q;qds@qca!j8^(k*@(S_D$fc*6AZ=&'*/qMn'>1kAMHts$'sF;VNgoX%Atp+[b4:5l(HN\I:FM,`07Yf4P[m77,oV^:8LoW!O`pn(QGH0T$W.M"hJ#h,)p^@r[`OXg=D10_(<*OF_DslaVO0u5<O!=:,tU16%9=(9;==JEU?PZ"F&3OV<3j/e5/4)Y@pD?14J97%2g515+!Lc'7*PsB/=X2LEKijceA;giVd2jhP@_jH=K-tL4oMmP^YgJWS1\Hc,%!/d*m`g)/.F#7b>1jU[WUW#lkAkkqc1P`nuJ@$AnSA\mU:p[8celu9_ZX;^%:c2_:W.?@0ak#$0]^s)s](0D8J&oe?l%O.R=ESU]%"eG<]2Pu+G73pS[g;-#^h*>7q2ekYG$?\"9%*;?]q\M@;MQXQ:)Zgk`AG=8+3(*(29o_W(L=G0Wa=LuA!G4>f27O5rJ+6@92-LB5%:p0:Pn"Z1O.LLM^We0HngcI5[)^oPT3KrY2ig!B7.X/F/5(QnM;COsQSZEr-[lCD9U!Y('.X::K<g*)B(9+$B_^2iY`1l&+#$0:7%1=>CAC'B7[bNfof:Xpj4\-F%-)h+8*7dJhkhYScpXA!Z9NC309\=Rnd1Vsu.C?b@-H9MSCfJ=+ab8E?9JanRt+k'NEJ0,ZYVKK5?%V$T#_U[.]f3T\4\_f71,[B%_IfC=;\8p6`r<YH`6=FggoLm!+b[&[WqiqNl%-?27&^8eOtqj:(*0k7RZrs`=8kQQ0+_!LZ.%O[aQ%R3e>E(8gZ-%ASm<MdEu+m(Oh,Xc+9_<&G[>1Nqi"N?aB&$$o;T5U".-FRO+gfPqBI2RbGb>RlGA(WML!KclcfR:/UrjgU0h)KKia%WpPC56cL10;c`[K0Qn;@,rW;Qp*;,^T!Q=;[>mO4H]jNt4_KP0cjVp]ik1UFc;'5-;T%1M[b]+<R'S$j]/OWKfoakCL&l)9OKD0s%4<(+"<"'5SNs<^8=dt];A<jQt=Fh4g5ZkWc+q(Bo_5nYRW/bc6g'<_Dp&W5j6>r&*@FgIBG#m$]'\89W$.T33=Z_A2,sqjBG)STl%Wta.Q.*6'<Y]d>%MJis1Fu[P,)Lt^f4-$o-\='[e-UdX`oXpH*iuD>?2'@cr-j%1Eh[R;VE4bCu.A@JL&JBT2SD?MO)Ka0U)lVrd%"->OTmGg-YZf;/Aee"'4<8lKqX+*=\@pG5BJ?rJ&YuB1-9N0%W,kk!lluf*e@n03mT9-<s4%)_uFg!KBSGRV,Ar[>\A]r!eN2IQs%?(*(LRu)$<)*<FCX0&lcG+9F'_%4cBZ&t9\*&(mC@:4k\L9Y6l\sdhq(cs3p">aHP4k)1Z!Q^4jhI^TIf]`\,&]Tjk)b&h"`pP7u%LA7i)A)B`$k?pE!As7*m6c7OiP^0tD58*1n)`%-D`*=0AIYabXS^N[YdZtb4`*Cu7Kjd@5+?0#:fI><A&)+G6K>Q7QYuc>YKsCMi%T;[_)_^M,]N.':\bV?kf'38j[aX<X@nNG%!%1Kh?7R.3:gd_Fb=oh&AFu)f6Z,kIpUTI!'JgBE-;m661?F%O3V!uT`H`bHSUo$TV%#?OXtNp/bS]c+7E#&tm=r(*ADR'3I]`&H1s</:ahS6Fu^&_T6e6&(Pgh3*BL"-::g;Hc%m!mn@G;b$t6!!tN"5WD#\YYj,"?+@+o%8I/-o<>EHQ\\#t@8qW#p!").Ya!D@A)H;^[FLbd/::^U*47R<t#lge?n^YArIg"hJ-%uV1.8R.5clhm0`$2"?SmJp'^Ffu)6L&\'%r9N+RL+<H83'@9s;=Y/#7hH8g$O;JH-YX*rYC\`c;Z3A&s+p`ad;DQYhdH`c2uoXeL#7J<A.iI0SHU"GN)OO8F=#*EV3FBs:)DK?%pd@Q,.WJM9kS9\>aA&r%-Udc]3[Z;#jb!&8"JQS6)[d+2is(^m`t>Os,S._.=I`bI.[.I',iOgI?l&$Il90qS\$Mb=[N>pm<un%U%KH99s;%>qiiN!M2;#Op^kiumi4^jOAHI3=!geCl4+FngY37<O6q@R[Vm>5YeTT1i1fW?G##,QPHA:4o5<:%YUU)uiS*uRW=J9pqF%TqW?o%k[Oq'&Wc:-S[]gT]Qef,`jCC('pM4&\>-LGmd3\&)(1./I"e`3/0IG(L7d/fRQnq6r7qU<ZA9K8uR=[JV#bbJ-%3rr9)T;%HuZ#C'=bKt=%04ACiDc)Whto^@s%/9g/qC`6PYDiam+1hPBN?fe\E-VPVBr0YXTG2K*d0G+]_6["]A0Ce#L!*Og0U8q3hUBhaJ+`%f^9@BolQ+%p<jpbol)*Ebq'I%$"X1FUosC#jaJE#Ve?t[OOW%V;!BZECiO'kZ!;Ba2\l>mK2a3$<G)M.NnZnimU/]5!;)lD=M-4$%a(cRW\DZLb$Y5-+"J&KN<j#orDs67Z`S7C7C4YrN80VuJ4s7=%q1Fi/%6#)J6D4*>']0Jm60:[#X!#!:*u%Pu;DQU_44aIqYr3`e%UjU]sajP"H0LWl0eAr&nGK-S)+YX*NWLN3oN@aB8qerK+VX8_=2kO98XKRAS])fuR>)^mP76k6bY-4k.`o]o?-mWJYD8S3Q50Cg1%;&6'^7Z`/5h!'rE[T4eek61,r/^Yg&S3ZsG')$j32Ofl8ie10bL:T+l]TI.2+%O+!RDo.-P#J7B#<@WaZCaQa?..^hUT1u7%_h,A%r>\D0INn*Yq?_((fe6%dg0gVdOSn+*[@^r5*DVQ^SuSMY81<o+i9/3@NCk-(j_mI7\]p'VSjd=9#aC+L"]<Oanh+grZAZQd<0E5-%PDUcgOVH:FF\Oj<q[U"XXD)8'KPCWp[@l3l-pA3-+),A^WGeOfTkc^+k3PpIf':DOpsF!O,drg09Cs@;O[n-F%HochJ=r,6jKQ\(%.n6'#N+10S>n03''tM+i@)39ln+m?(4RXt$,pcK,f12-m*6j#8QKY"T.R_It.Sbj9=8]##Y(OZR>DTBEQ6r70'9iP4[cO&.1eAD3%FA"k_n0D01,%N,fd>RU!AmgK=M'PMb')'`E*_'kSQ]bPanq!,O%ruW;lZZZq2^j,s_c@q<)9Sp2&<sQSP!#Z-9pC!2c@#,Cj"dF1%^J`LuX*U^hS+*19BLjhO*99!0(5;.S]:>1R6?`n7Z!iZ-4E&GLVqHapKW(k%VYDBe-Ak(NRHMG4?SpnB&W_VFM*sKS7HIe\N)GkJ%6iKVA@e`DX>-K5JhE%f%g4L1"_t5i;p07!V,KM.P1)-#Fj\bCjD,5aB,L(3FhI)K%hb*V4HF3Y)cjWR2=5QH,d2n=qTl@)8PZ-3[%;$&`[!fq%G)5.@apYA7=B.))QWnf!FI<HJ"r"FWbVr=TG%T!d28P'#I-YF6(\"#8TT[^crZ%EaNKY]s[L01D*LQF8\QU_31[M*tV%P;5t+D?K[6(?5g;G@+:(]2"WlKJBhoW5rk%S$n.sgR!0EXOR</:t`9-$JtV;9#N?#F.ANsTFTMCKNs7n!S'hCi0Y(-d6RY4#9ZH?%[VmslS#Q?9j_Rbi_pZ0.&daC/_oR.`XQpj1AuaiK+_RbdB:BB7X\U172RqR@-HBkeTtm-o<V&%WHj#NGeVKnKMa*feFnPB'C7p78%I@WoiP[kYm_BNC+]`QpjGm/%:<RG58",/[)8e&[m+(R<([@enpoaGtLP08'*O\PqRAQf44;E[$)BEhomEGU3m#+U?O7c7Co7kX(o%`4H*-DLcON6'P>DXG%5IUI'75#=76t\=.raiL0cqE-=hblp@/&i3t&iFQ<U_KZ%&a/!QaDA*V%2Tqk.OP]jWA;@m^J.)hXtOb\hb%^=G1RcYjW<=B!pN/?l(>P%?$knS"`"NP)4L'*mVGo_P9<g8bFG&jAq=LQ8YW!DBl@:*DhMG*4UQ6N&VUg2F,D@MC=S6=j1<,m0%;%IjP(nOoD@LN)%)L=>>TjYP]kA=6dnA1@u=`E_pr@8L[UJ7qPk:0nAPSdHRs1K+^bBTX+$=$R>'0/O9GO8H;%;c'g"4kt[7t(9J@+%B[M46%,*"&5Rg8!$2"d`=KK7%.;r4bAs@*k":+EGbISrOf*5('d]e:XMBGSq.o.mEfLU.e#f<?U^(O;>[%i"6iZ?"X#RU3IR7hD?%EAJnJ4t6!r_9Rj#?>1V9/JJ8MfENnkfa%rEF@\E\kk2C8P>Z5N%D?tPJlA#0G'UD.qUWJ'\EPWEAa"5]Zt+8+HC;9KLgh'rZIaI(%Ko(Yh'pDTI"UA",!+_?/`MRAVbs<)#+&-"nX)CKs.&uTd/#sSb'YR/@/4$.7/VH3X4+9$Nb&rheJ[SW]dnP#"m_V^#`Ik$t$3/Y\%gtl;c9_5BPU6V&)pM'(88cE5@HB)gRV%sBm1s;X<V%or!3,@?C*J.'4.>OUI:7PZ)8h28ZeTtpER/Z^d%hTT(mHeGDF7@tuU8V#/%NOMrQa*mR.!/*'5KRbh]MArZf5u'\BX1f="1?JX;2'8fOqbk/Y^tL:O(m2J`Aqj3P2gH[^M>0GG]*%?*>`1aZ^S7"sj^_%oNf?Gl%7b;;U#R(g!DbprO:bb!'R78Ut\/f**M6.K20121F092GEPQja1?TSLd'ZmIOT2Ut4.OBNULWFL76C)aIRV$_(#\;15-\a68J95gS%K$3[LmU40#kQ>g--sadOJo,uHe>qF2+F@A?gMEQq&K^q%9IF`:L+=';n&3l'%Mpr)$!Len$Q<cPc+*7K9Sqj.oSYhI2(4"n@%H,n%d">=(P.$P`6<Gb7)bX)DUA`?'f"JY!;Blepc/;=-a`?j.OT:lqe7]@\ldM0$JHQuuGZ16n;(fEWBWC[aiU98A_(0NLLM&Uh(bl88%0I`VEnN_mYaYGuARWLj-:[&iU@&bNElrap0R^dB;,1(q0>re@^i'cLBUuRDQ-Ehl[*NKHUn&gN7<B5E3/.mc'cn8WjGh#`@Z8ClN%$^WIne@M*m+`Y-teJbY)c%.tqJ;ThGomoDPr$:9a=02!!.+olr0,(mp!%O;2Nf+neTmES^&/gmlD^6c?6$=>_b?'+#lHul4L>Gqn%Ig&ImNM2O].2FPm4BCF:V.;.'M0S[uk](n1PW5D"[Ag'J"W8;@^0+_nn:&:]2QNimg#?W:L#oai"FL[`nD/G*NidUeeM$S:_9R>H%-aL.F?:H49rA4MJ+3NpBE<IOc1*CL'K?N!K7/9mkIjd?`,]hF_e=,?.8e4g`-KO,:?Bu%%WY'i"4/iK/Di:R%>74]$Y9FRXY&u.k%F"sp5@P`Z<6pod4BL0QX>)L0<J/t$]!7g)>Tp,4n7Qa`rqkP>8.c2VpPmYP=fh%C;S!/2:7$0A>ii.S95O"`'3MMW:ZF*"5?bqjS%\V<fjKL^[U$1$=L,VbPmc'5>]npEsVF:F;J/Qa"M4fO[-/32DC8YmtTn.pmXGAf%>@)$gg+B9@*84cpZmr6CA9^e-R/B@jIX-%Y]%,k<dO2:AP_'-=`=;2GLdha*!:5[O-"R.N;bGFO_u;YH)0kT-\FeGrDe6OVGX;aH8kq`"Y#j@Di;cYE_$B!P1s`OF(D8Ns/GBtLdA%R?&5tCXN4jqhKg%*OJ.fNg`#!`,j-T]1t9pSlgbI4\K1K!#00jjpn;(#Z20t?Mtp5Phej`LRjW^.-q'P>8P`OBJYc,NF`#[S2CGK%oM]*#Pc-YH.S9S*c=f0r[MJd_p$B;*qP.(F`n,h&PkQguJMY;)&X`qVhFVr"I(('ceWi2\J>?3NO-?1E8_7s6.j3/P'RN,fn6nd-%iOT:M:8H]F<A9&l77)%?C42`e+H<V)@50l>AH*(C*@FaAqO0$nSG\I^2Mr/H:eVmk\@.]OB5MUnaE8]e7%-)#VN^r;f!>Y_\T*U.%;<O`6a];IJkdDXm&"lI*cN\1\8dcEKJhIPc$AqW6;8.X\jI5"fq$IaI`rU$JVHu!'g46QA.]JPR>/b7H<]kGof-:t98Q`#JRqVtj%5n?LRM[3nX0r.M&e/f?W]Og>s:j,H+1TDW/-q)HE>/t^cTVs4q]G?(>&V?pFA#L0]9#V5rO[(58,%;u-b(Kdc8Q<9qKuu;2I0`V_%kDUDK!.Qr]iO,gclM-s;OG>*ImUkV',!\bp.O0K^:ol-.X#`8'+k6.$Yt,D=cpH%3A)s";UogV65;N[OdsXJr8stA!4rbP;Kqpc@%A.[Bbc$$UeN^="H)+''hKK\)_D]=(Hp'a-2WZOR%g9rlkNU("/.-2BRS.()Ug>GJZP8]r=E%37V<``f@(N:D3J>+N^>H<%-NjNlh%'@#9Ns4lGhNLArr9m<I2[3>^3>>RZW>f8$,*"!ftW('oeAfaB$Dkn-&;'n+=o<R=FB4"k#h&:uKf;+_D)35QpV^C@h<Ds!6-D@hu%$Z;,J5q5?,TXJ.aKcKiqiE,1Zcr=!e?L:AY0ZAlVGX/G,M3Mt,5X%_EVhB*&4J3V(*D/XY8kW%<QT1\on85a%SQpm5WuIlcEZ$3c%+c5#!BP[<m:XsAodA4e9K$ee,K3I:NSf0.o?-O]mgu+uB?,\[s?D8h_JCZEBLJ^fFnj6'W(E"LaLSciMW?=`#ph0]$p[YE%c!cgO%<:2W*@6hi>WhpG?50'r;TMj0[#T@qVj))%<SD]<X;m2=9OSNC;?IMtUZ'n6G"ih!/ouPklOF20NQJOoRA@\q)!==m"!_g-NBuKnR%b,5qIhPBo!im(Xgos6'!$r<lS7V;C!$bug*Gp&;.e=ukWnYPNLL^WsFiukR>n=H;V.XA<6.&DbmF^')m<&@MCF*L42'tZBM*!^Ma%15!]?G]@?h?n0,05>DHsc6e+!X%`UojesJc&LDqQ6?\O@`Lf'3`4?qrEWO5BdAQOrlQfP5Qe7p)d2e0#7@C?A5*#e9WII`m+t[+4%T0ZBcF2kk;%3!NEBjihO>$6Ih0nQdBo'=4++NOlBab:,SdmQe$UaCprMP72a4-a8p%#S^o+@FS<*g-n/I1h.;eq7Q=:0H]#%P`We%6BL]L%Oi8S(.u1oDgA?-5K]:>,ToJ9]-.kNlg+j!CBPeK#@44Y0G-])/Cd)bW+Pp,gTK#2=S6Moe9nY/'E!42\"V:tKZ`GX"l`$h%bsbI`Q-sWY>,<IhMQ33]Qon+"MW^Cf3.U&u<At&WXi9#D7'e5E)HJ"gLT+\>/Z4"k[m[O2Z<RBtU#9K8R@7a/_6cVbX%%tkMD,+-%AP5kE)rAD3f*k)YQQ1Qq!@LFW"tCY%P3^eQI8G^,A=UXgfV2t4MTOLS`Q&O(USOEEU1Df)XJDD+A3Egc,*!sUQ$KR8aoH!1$]<>)%1-\:+g>)mD%V]j]"uTbWo-(Pr=o(PJ;ZN+7E<7KSOajnQj%.9O)i4&-dt!/qN]TO(Ou"Sl*eKOf%o0(?2X&O"Uf%[_P6/n$M8TH<%pB3cZWpU#/l959g<Bj@_>X2&i_C%]U!=;1@GC3#!DZja,:3YdST]%>.b8Ka[<(^!_*S,]3(8P2E%1N'iCP_Di8/V`!>4R^$(AHk;%hb4Vb;P79n`VDB7oEE1R8X`20r$:YW4E=CmIoY#]Fmqnoc?5g1?b/#hl84qR-Vr7*?V<-!D:8;Z.5237#l^T7(pum1B1E#aLDjC.%7sP:='i>9$<H-R+&pg6uWasDOoaep9T_G4B>+*%!.V-NW=L"EK5Zq0g(e.>a7N>L+U?u]+j&fjVk/"&q!=S:fFTbYf>Yk`n1'I=*%^Hf!e;-1m?2XLQ-NH2a@2ZhOshh1ThoP^dcC"K&J6Pc)=8_456Oh7?A[f7$._;N8e'e.h12@+"G%LX%4X<A`)nW=*Jf1!.=*-b6_%6Wkb:jij[u-m2dsap[j1A3:OEae6"n#FA[2fTT#5G*"63jS_CgPLVmK/F%>nP.IKMHr)0H7s<co`nYIOhL_]Y8HI"7-JtH<*DW;s%ge9ZD,/VTF,:(Xd\d=IqR/Y^u<"N[Pq-KU?]lk%_*Vde*S9GVEbE8RB9+`N7">)\;.JUH0$`)1G`P>)=@V)h]&QC4c!n&Vo+C0\7%0l8JYC2C8E2KF+>J6LBYgSDt5ZP)._jW*J::o[S3k]OGMM5+j#Vt7"2G7b"=j3VeI(HH/4^<ftRX00NnP=`(K9+QZXJGOB5eWk)?%i/AJmUf@+n-F<q"q1D4JFjj![p&MlV.P:)r*A$kGOSD>5ALEKY6.c]]F=k!k_E'Z/Y6HTda4sAuAg]E^Q%^E+!t&X@_P/$Jo)WMM%%P<3"nEi[0$l\\BVTVUaam,XkLJm[Jg=W,)1c;B;mYX@[jQ.d;^BK8FO*Zoc)[Wg`Rqu^I>p[Uc/Lt\"=c+@oWG!G"bbY.e9#>SJ%`,R9I:f@Zs76`tUi^;ne'1ard$a!I7lp=YLOK^T.qD9gRF^Q=A,i-CBD^5GtpUVb*TAGfLk_tm'N9Q4%TK5YP!jcFj_+%,/%WN\?%\jRJ!'K!DPnEq^CKtiLk=.t9\Ofu)<,DA[i\:?p-;pmJN]p@=hCf6s?M]CiMJGuJMF:,8jW!Wf>b#7f9eRg5nP)R$^[gc'g/>Che%S;:GCon98;UEae+75ldq_*'AN$mI].I2h=C?*.R(ffq`Q1WM&OX&NO@kKS?N+_\foCsX?t>]tYGI6/)85gq`EMeE]YneWBUkT:WZ%3Rb=l2Q"KWOLp6*&tVCu?k\EJP)hkA5X:K##8C#G&9s/#^"\1,/'E9@?3Yn&-nUmK(5TH5el#h^["AaHAE51Xl_3IA4Xcle?WK\$%CS\9Mh`Xrm;9HCIU@gnTO*ONH-aG[^ZlS7Sh,,>]*\$n"=N7],h;+24;=c8^UD&dV5?T+p#"!5Oj`YT>Y@]P=>7^BKD*[>io/7K%%mX`YIKnkliAu\=Hk,A2<.Q6Ylc5Sk"gL&ifGlHY"gX"2Y1>-MN?!+[YgHE=Nq9A'Fs)%5+Y4D$_\)4q"9M"=.r#bQ#/XjXP,kM'%%bZqbK#B9:b_X_VHJ%<;`a+KYrc-Lb1ZF6;Zn14=LO8n[cHN(PQA,H<)aRA=.f.k!pTAP%</a9a2T=/ZfI^B"Qq"G"X^?kbnIb0MD%Gj``;+7EQcI/id7qp01:H>[/b.mqGIs'PceQi+b9)>_++Wa#CDn`ereiZ!:BrdRp$,;SRl>dY>"r>&?b;O1RlkR-HfE>Ce_Y?FH1%M(V/M.T6qB&DXk%csmgtS#PCIUjrPPP:SJ_GnUH7ocFK>W#Q[lAi`ni3`@/cbL)5rk6-(D&E&92TZ+!?(-eH10[7c@GpEma5J"*"%cr%&+mTomoBg<_p,7sAi\3?2:L;cE?0@7#tPHnulE9IOJ5_b+k%>NZk*E>s+#SgoIZ]pS4kQ353)H]`;SYmd,N%9r*d6!cm7g.+7%Ag`LQih_ZN"q:_oi#C`RRO'S>:_3bH'<6V1WZH_B);I;ueL1o0nWR++cQDi,*nQ7HG:@d()ZF?q,T9)Yf#O$_:HGLTN[+[jN!CH/%n<Sm5,dPaXk4B5\;25dBM;AK4((/VRWoD+5<<sS*:6cAm]H<j[*[Js/N4'CP'f-Sgc>ehbL0X?:UL!7$^C\k4atP5u4PIjd,aQSV%A<mdhT9#d_Ma@pc59b+QRQs#e]e?!9S0h`F)6$1UI#Jf<A:g,i&L_tT8BM'_+@7'/83>Vsg7pD,C-3_Z3uR[lL1=Z_oVa?V9!fg+%D+)&Sa(l2Ur]HF$Or(h?g_%,GimApJESE(<Xe9&IP)VA95WV#)_e$ekmS.Y2YKRW,k)6V&2=g3+H5uK1Gq8$*!`uWh^+?Nc*$jZ"%$`u[5SM4V]-kndf>G2C4%,A"<dsf6#TDTMq152[%#b;=Qm_MC&5A5rL9!(/()l:2Xr(UjqE(oJ+V_WV['>C_*$9B(VK;O6$*nD(S%Md*#`%(k4^hn8F*_C0)32mS3gm9j6nW]l'9'b;OM!f71L=3'#\<?4.MIpM1^DrZjeBoL7U:-2($)LanNV5-73!g42)J9<GQl9R;1%V/"kTa_H](Kc01@Wm&)KPG$%\/HEl/!A;GoThJX@]_(i(:PG0nRsr+HG@@q3U#3J1b7M_%%)Z/$;PK24P$JLcG=@r%5&W%UW;DLB%9lhdOe6L8'5J7*V,a?BGT(+p*AG8"b=o`/E206Ju1BIX0E2tUU`IT<Q>^9gHImS\R;!CTKn,[c1g*iaJ5Nf9f>Y>:mPK9ObhJe2H%k"fU'^_X7CU[nIJZDaTlarNW:;/WY%I!btJGeL8=@50b&Y2n1Js.F9ckQS=Mh'4MX:br=0P'1Tq_\G"b5\,Pp_Ti^g(m)^pf,cIr%^H1g43'aLd)/0D>W/gMWKnJM*E2o/",X.--(6BW'SDoqYPG&IoQF=0iD<uE+q4po<bhW@g'GW5uJ02o_<,.%fge`5=\RH\Z+>Z&&%F;m6Zpg%?n(GVqPnS5C:`oEC;mM9AQ_5<XcR#@\L+@J]CVc!BBr6lje]JFSg,-5>V#p)5o##h_b*A@QC\OM;sdLQHH&CZJ!`^p_t%/BUF]Kh`P`=Trm^FGmIjQ6*F[2]IcY6:-r&8PYYR((h]THt'VlE@uX_G@>b"*l0clPrSVZ/I`uo\O&)7oQ,,'6Ro33,VE"\?U8u[%STNsCBZf9m[R(.;7M*/O1DoD@7b[O-/ao_1K8Gg(Y(3d/ZjVNHbRXi"9YeH$Cn]c$>o+'N7s/a+W(4EjKD$04&dluNp&g"JjPNYt%8S''!.4OXEU86?O,pgo;O9Bbq(g,K)R]76X$pt.OKa_11eq9VG?IoT_V!Q)f!O[HRiX\U(T\V@oAn?MN79pX48?rBEU+F6u!aLTR%,/R)ZQuA96oAZL%2[+m8EZE.0k0'_6!(&J7*4d@%6YnjQ46GV<I+&oJ//_CgdM+OT!gu_^,E[r&lj*m]aGdj]Q)q7`irJ'/DI)!g%7Gd4,)%"fOM)fiG?mq\Hi"&UWVT]VJ$K^72>9qlUqBV9+k\e50YFmJAAYP"CArRpd3gS"eeXQV+*7FfbJ38h0H<Sp+A6HioY):kZ%?XZbb:"+\4,CFRjm>FU=-JAUUj<10FZ9_>ec!cE-:580QEbKE7n.bdsNtu"THp+FHV]#*n=ktW:P+,!!j_geBH-##YaAg;KoRT<[%;jPi_<&.qEAP"g;WH=p>8Q$j`AjSlHE0Z=;pTtKu7,f>tTp`G=NlnEe8oF6d!Z-^I2aj&dPD.BqnYRgF$(_`fFp6;Hg*D8,-n=Yh%]%koQ=#'bo6J$9#72K\!..rjJ3F%"rBDs%AVBJP%7G>jPg(KrcOMrHfTe`*Z0oqX^0,2Bb`+[h;!<em:TH@!=W(MWbDon%M>GOn;%]5&*@LfF\R)X.24Q0*IA'l7H=o"M4<5skekToaS*=m904"%8R,0b6RH?&4TTK!EGu7&Cjo'i^+'AVEX9+AeDVV/1qbG+Krb>a&U[%[n+@D^H.1jMSc,>'FdT8g^I7,lsU&4M/1ih58W"\bM+/`^t)2]pnMr44_/nC*0`q>j`9c(l`85^7?8$L%s?1o(;sSo,qLZ%K5,.C%U`3<&6o%,!*OKO_NefDgFCu%p>fBqbdr=frc2=8ErJZtJ!l8LRGEPL*!t@fq!I>3OhM*p298&_]ip=R3NmaX)Bb/H1=[]M:$sad'%grS.d.EfJF1GM&Makb+C>-f7*!l5$2/`$q@;X.0$F7l((I7[73^7BNQ@]67#4SKBo!grFIq9B(NRa?[DABO<UiDN@@eG3F*3uru?%A3l1(6]eH%fE]p@U72/>QcM6C^_$oaboi5[=b6aa$(7kHPlHU4ODkK!]-e#?QmrC5?lYt%e&WSkI:>k!>)!Tl9XbN9"'Tu>L1fcU%>p26rr.R7q!sp%\`E@,X-usYh:f0`Q$%i4@,U15E!bJ)]PU],nNPqts@;sG\5qjl$Sd('%eX:mi,_2V*,8GN!(LTu-\.uqU3_DtR%Yk'onP)L[t=m?2$?dY9Dg(a\[Y-8To3<00IQ%ra8%NO;R#3BYmhX3H-rN@,uj#&OpVg7`%3tLN7Y+5S)"`g\X-RqU+.cYtE1E1jc%<&<jeb6C.MZ8`dkl[t3`QBCog5iEKAR;'2dLg^43^:miTNau5^$i1qnO',hJI?CKMFe2aZ<:<]]q^6eXACd`+UX2Oc.l13/!cU-[%&FcEE2[D6!8`h`D%p(KMN92$o%"6d4&kY59&M50HfQ4U/o?=GfWePeb6(3T[M:Ok>poYC*SIkb<a\\J@N'oXkCP?`57XCj&=1-Dr%?NJ:ArBX#AZHPRb86KCbOspAuOLLS?aKe`!P2(:QXtCco%GI[DqWO;1o*S*R5u^IHGmX6?amr%k^DtDNK5C8Jf-/)XVfFV<D"p!H%3smA7eOr/HY^.'m_[S`F&71ip6LYjJcG3o'7A:,i#)EJAY<g*A.;0)-g6R6"fpI`JW:!GTm)MRJPp0)O*kNDmFu>gDque,cQO);Q%<&K=//Vp\LhUl5u.70D0e3HuiDWW<]hS28H227b9/VKCDn</Q7pLZiR:uMUcXsg@LG==tSh*5js^afFW:ILIH`YtWaDU9WfAX?,N%0-HGj+U^.<k;Gb2\EF,?#Kt!>n/T9jfl)MJTUMrdP*VoS+Co.)c.u2L&8c"nYZjiZr6\C7+.R)"?c@b&RJi2PJe1t%H/Rl,BYGaB%[ETOb*]"?bX^d;0Ltj8oPljD%W%IKo>*BY_`!W6$e+D"0!.upJTsS+SXb1bk8B1#ol<p_WMC(%uPGJI@lJPn&MZ]U]"]=5bI.&OT%TE/WAI>0Qr>\:]!C]r]^\>fd1"mdAsJE1`cBgX1Kg=]2g">DbS_aouYWen;5b+RKu?PP,$Q;B%P!#!+R6J/Vu4/F\-R_RY344i?Q%IQ_SLg,ie%2`>13o9W%n5akZo^HV9gh/@hH;4/XK`qbAn:5iCeW=`s=f&JrP`u5[l5A((]$+:Nc&nlN"a8j]Wioatq!bDO_+cghm%;j\Xo<XZ9&"JlZi7dU5_N41*:A(]K`HYDf$h;4t2ERIg9'h0,a9=.Tb&Wualf:K#B5_Ln37?C)Rs,0Mg2&Kd&rSn8SLQo+7-Uf4W%C+?,;gla;A&W7fnU7X'<D.G*2D3#2YdNg]9(/c63c5+P<.(M$iMoboF9"Z^-Cbl^A$H,+"DQfQ``)*ml3[["Ip*0G,hGa*^K'!Yl%$nP>e-%&Wn)RhdJpR,e/@m\(JdKX$(+etkF("#pac,:#WGZfAfD=5mR@(Sac2P22U)BsdK1]k5QX&I%c7/d7\Y*FX-QC82#[nfdF%#L4XS*ZQQ'!KD*5WVQD<;[i^.a\0Y**^fme_E'B<C?C'+QC_o/eje]0S'r"EX/k%qTU'2ZE<9+7eP=?n%`1NJV2G(9VW+5=UI,fE%T=@>JRnS:)W7"+.6T`7_bHW*Di&LX"l<@qQgSPt3Mgb%B]AK;2lB#Fsm7CS^i?[SV^oIRp+7=HN9S4aEJ<dkKV7R9SERPn60-Qf3%K]G=g/4rrjR3>o?IS*@;MHZ]:_>j].Tb-?YD`TLJWV^E5MCOGY<-tgV?<G5Z6<uhF<AIK=1s(+P;9)T0crH(@OKEP[Ol0+U7f]]D%YpErGi9^.OkW(7EPs;5\Q-n*KXpoR]!A\:t]%pL#'jdXrcH#=Mdd.kRUi*8Dp-[#FJ<FKhGLWIRBWpR-[4U.6,G-MNYsER7;+_a'%A1lk0IIA\A!6jtT6/fEYIXa05[E+=3+ha<U.G+l&m5U4FZP^CgY=5`6#W;88L0%o\ZM7W-dl\<]7$DGp&.-.pG0khqC`m9s,3H%+%Zn#?HQBLA(qqqW\IF8QGmC3Q,rj5^5o>lIWTqgoQ!j2FPO.h0>)(JlobI5PuS"rT9D^9uT.E_'[05eohX9-8gMLO6(i74m_"#h?M%PLP4!od3=DY\ma5OHl+S]$?EbdCT<bBJZod(Ht[/I3;e-1LYZE"canT4kj2PhtGc&p)bc$WuG'WptlL>lr$!Qag%0RP68:p"B1JB%h54;u[2"J/$Et#t1mYaMJMY+YD2pq^ltq@=?fO-T+e3qf%)7cQBb6DTXg7T9&72BK0Idl;j^S`W3fg=RcX.d*akj5f+tr:2*4=Z<%.aD!rb@!--I2PkIXN_;:nudaL3_9Mj!_OnrR%TI21:so',-\3n>%P\Dn&+S%AbQffJ5(KeQ5Io,^aeC1BtCWbB^Ef3QTb9bjl%?I%"9`\\?tFfNW^ZtW&@/eA`]![jYboc0Pufa11$qdm5W_?Ms,o!L3WtbtaJA63dkZrkL:nB:g5G`X<apE57u0AU`df9@;@S#JlSLqB%#b7@qD).Q#Lo9n5+sP[VNT@'1c8'`:OO!QnU[14$H$6X"D[\W-[X%dqdZAYZU9[-cBE]WR[^r#d.?f8t_IdH:AYn;jT=k)U40d^1%#Z75BPLg[NjFbAIFO<JW!mE(,>$HdiO=:ac3C:."c2dq*;"Baf@Wdd^o1;X-HUlV9(=h@-Sm`nLql'/.##?M6Z*1AfGgi6H)^^\!%X*"BIithEZTu0?!4G9QIl`h=4(pY51SE1=,-A.(h>U'JsYAeQ#X=&f.M>)72Di0j="66<)=G<ts>::L8#Y:>oNb0OXfP_cVQk>Z=%9c*Wh'ChcH&@&;nK^c32Eh-WfXF_Q*!2-_dPR;2D5hNP>A`bQ6Z,+X.86F":02"+UGZ<r5A;r$5OS&[A*:JZ)QG@WuRY;;Q_NQ+r%.PF)cDjgUeFnI84Y,P>J0RR0c5P.n1DfCuhh#TTp/>Wp/)Qr1d*5u30,KMJbRg0n!-OfWY25lD1!ej2S$[f,*g4@BLO:@EdqBu7>%J+uIhqC#$FAqn(5U_1ob3gWqpE_&$NTRk;qV&isYQ3,j-Qli[]P#q1eTB\VU0sl#;%u57lDnV8=7!M38/dmRdeD*,b.p;8_\bW-M%BiP^kZ8#J?8^Gp1k7\gb;sdf[!J+CW1$rs82'Me+4STn`Z.4r06D9"M=gBtbr#sh#<hSIGcss."W.#m6n=cm&JNJC5nDpG[!.Il&%pHl<U!(n9gGu0hD&ao!:Ide&GraO;OrA(bY^if9DMuGE%0h=EO5=[X3qL$mH\NbA_U1KBeSbBg@;tH&DLZO`k\q2NZs"3</`:E)n%O_P_>^-80-%$A-9\no(O*3Nk135sVn,(K:3?V_h9(5bR6hM*8!]mNeB5CYiNk,07@Lf_96<3tHj;LYcu\9&!c]GD)!5FfZu`/$4?%q/n-L$:GBu=L"Z\i.5ju27OU$&FSY@<4]KhF.3`?O^C![]gJp9DRrLgcLK\[R=XT#gqrMceHd;+YT?CF"$eO9Hn%2lPV!N%8gHDj%CG./kO[F'6:d*$NPiFe='K`?ld&kAEGmF%Ai?84QbEX#];2JdIe0d<9)7,2hE`sqg2>l$&#&6Fd6sn>%`4dZ?.>0bK!(Ynq*cWAJ%@'e:/3D^R<RQWkG*e\*\%_kdeVA78pEM$\G1=[?V4e?g&_X+h)B4>JDNqRL8Jgj8AnXQfh_MhA7a7+FGg&FrUC\l[;h\:5\INMc!%,)%\270M\tfV:[uM+)`k?63\`7767QD%gB5a;j_(@IStUa*sC:&C$I%_]T#hkSh>:@Q4s2?@%)<=:gT2ni"BLFB'R$fRs,R1h+3K%CkT8=@s8ZP.16_^@Yfb5nRGE_aPb!RGs\==UMWrDCDFH[Cr5b4+C_oV?)"$=LhI@'_P3iTRgj!9<@-fFfFSep:2GZ7kUA@h0YOGf%J+=NL9d%t-1-B^6JYX_K&m$95`$G2h;*^LlgidZ,+=O9!]+0'GJS=o"FtPL_8EoXa009`i\74Ga"MrAgFSE`\&?dp=e`$Iaq%C!2%iYM6]S*W;4<kB3L^h`9q1Gr2b^+/]b$W1JK2"&;D'\;Amga=6Z6iX]@/k2IFGRF;o:Nt.D-.+:[/SVWIs2!GB7*G!Thh`LsFR-Y&%"4<8o2nie^\_2o0qn.c8kc.)PnDNQ&f`;-sdQT90H4V36]8+iBIKk[!Z\-F"#R[Es_efG%9&2*B3]HQYZIS$r"G(O[YSF1$Ei/ZB%O%TYN_?,H&f8G<%hhQgg03e.Lb(oS^V]5]$(LJmrnpj#l_H0"k&[R:h5f:VFOXaBrHr1T<ikEiRKpQA_qs;u[5`YB@LBe7`;0b'\%#sDi2"W5,U1l,<CYFti3&1[S<\E=XnTb$mK:;$=mWrF"Cmr9F-g&QY:V\0pXm`sA)V=&aYW95HN>Lq[BT-Aq[@?BtA!j45<6])pW%@eu*Pd@O&21mP;niX9Nch4e_@*JNH8ATNQ"#q,%J)<l+<ckZGOV]5[b1kBAXQ2OEc:8,,\ncj';HhcqELFA4&7bF]!jLX$FeM`uE%Mb55$%pd[XRa3J7Y&"C<$nY,=2ntfFa-_m,Ld^P$E1jNR4$Gr#4%+LM!DRe9LV>79OXq#K7kFf]h\=eN(kE4W?YZ+n%$*(qZ$65t%T`kEBpKZ#U"@Ym$_gr0mPh"[kIKVJMCh#KJ_8$9oP%678GQaaA_Y<+F$A>G_!fGqPM@KoP6(&73eIWi@7eVd.=r7<O%4jR\)#Ah4%QY,[i"(X[oXHFV!EdS21:Ai9A6W$6Xc4d8l:e6%l'@alHMXJ\#r)trOAGA,PL'D9g[QQrk&7.HHTrtJpRc_sO\IT^?[+75>`C,NA%0T.-O5"HZdS[QrN!j;]gU<>Ks#I<+dS4!&^@'Q1hU'DrsVb5(7?m5jq.H_6*L`]X^6QhT>ZmHXY%IE%IOO*4mJ1u!m"V(heTas<:%!0F.R4MpFA'Jdf'%`;fSG)i4Zh)62Eem<t)*9S5+I0T^3McBa-6Nm#q1CJ(K_."-?Adnq)!$]7h".-5oRB6$n:nN/4noVhL+^+nH%!']=.5M>u=5K,<mK^b/*q[7a^)dYiJb2U*m#@W-_-rO%0#.6]u=X`H`?QbeipU#Ili2`\qJ)4!?#_f)^`6DJe.d\l#Q31!!_ak\U%>4>0:c@^OrW0>0l+CmZX<?k>U+(eUgNVIDuB6jQ?nEZq?8>)4jP)Jc52(dZIoeqGp+At8nJOiY6bM*K&U/6#_+Kh#FMA[1#>S`*4%04UU_CZ<^C&m2'/E@QiW#"7`D8(E)SbQJqBYY?W52p&kMi=e6'J@[JCJ+8\5#b)E<)AM/kN'u^A1]@:1ebK+hs5h))YpDh6'B@u#%Pe7^26#8s26.C$g^<q$6MV[TkmeG8]!nOhDlp&'2'`^K[ZWR?>oM&cI"S`mm"GsWn"0TQ_cush'20$/?TmG']*.Tg1"!bd-U?%%2%V;a/;+=m_%EBDPiHsg)j`Zd&"7Q!J4qlC>#'1Ctq#`R8gIRa(&m2ZHOFItQKqgl\:W"SB=n2e@`P-F0OlWGd>S,*6c"-N*@!>/Kb%BDR3*JumFC4c#k%XA"'%Os%=Gf_#C?5do:\.cKg6knA6b!20qZ<:@Xl8OG#t2<oVDMUVod",ZCA5jE<AL*/8WdDI-Y%4[H(Cn-+J%JIbr^^LCl=ECB)-0oh'7,E@T=fL@0,i0'OU0Kk'rYL:`uVhVis",VgFqTr.L_#O5F-_CC)S=D;b?E9h4-GFIga99D=3_\Sp@,Do(%HQK7H&sIC)cf]6a]+(]M:Z'/(D>Nr30RjB"JW2%M-s-@SL&Un+0Kq;WFWKMiQmXB_1`@7,8YNfg*'c!b!Q5O'GG[bFN'em>A@AZ'%km$3i,!-JT4rc@L-L&f/!(3^6A`74ZF)Z556?b]d[3\Dg:+*G=p&R@Wn2%Q^B:<Bg&-*k?N_JI;ah1&Dk)/>6F/uM4N:OEe9B"sV%8bdk!\=$L1S8";25dgk@_6.[YKqr!_jtj(["BdP(&N91s?X*K7*lOeupWpco3s7H1R6g_)8KKmrkLc$&*"A4T_0Xdc%iO/KNFp!)%WmW+pNaHU+8(X22Y'[Ma'H3MZNi"#4o!m&3oB[h%#.`nQ*7-jiTb8kD$l[RPbZf,-QIg/_<1b&Dm<,eh+7lk,L+bsnR8;m!PeP2+%pWB#(ZK%]#."fJhOpjr8,%[(V5I9ZYCbgT3B&H'M;C"%_p@o^W#<7T0PA(3&(PJUm6bHrg@>7eldq[4^Se7D&.7CR:?dIn3m#cZ+%H<ZEf<gKPun,&TZ^$?&R%&lAuA,r)dD(AK`oqB'@m@s?M]>\p!9ETsE8kU]=FVl+`Jo`.;JC-^I7@c#s=k:^=aftPBIW".?c;:Q>%M,5+J6-H`urf0P(H/WRN7\i`p*CeiIYIep:Qs42'2-pR9#.d9$?[Wa2i@ID@HF459l\d#4D]_t`4OAI!>km3+h=EoW@1UV<AdtJ,%ci'9f,Pq#`]a>h,`EMfdg1-08eJVmLRS+^I5UY>CDGg<(hHknR!2:tu/5q\3igKic5)-oSNg#%10m6)c=&TT%4a]&,`onuYWL*sb%&^H8(^4&rHGeU<WhL*&[-&#1fh)6jt^?ueXWN8/i7dgBpPX@BE)ODJCUd'7upQ#Cr[.d8hcUaNR]ZaZ]-QqND.>JOdJmqb%n+Z<^%dF"orB;B],km<Fm--cT_hW2nk:'bLL0nM^*/"Hmg+`CV`N5"MR?19B.S["Y_KaMdl+'O"j&MnZs,n<UHQZ'%*>l'SVM2X#`P\1pg%U)ZUET>C`GC]AOl$m@B6PonllOZ[]C<?<4-_'#cFj^kpbn^1Qc)L(%]GN#[%Y=9B1XNI9Pk7k_gS@7168L+BR&g^ft3u5q)dN3I.%SB[OKbL@Le_0%hUk*["C1)J51X9[Go>oo7^'+*5[CFPS#:4hd1BPpN/K,!C<<'krdfFO\"Xo=j@Vs"QY;s9'_]Ig#Hn^Vti_'d^p%bOfieFF;q`]1%dahSRaQo<u7ADghR=Xgh-P8CsL`nP(tkbBq&LTIi**k1i/$^6=N,emlPW8L4@K%_W:)I'CIqm\ZMllUG:PV-92K%a^D+kDBf4[OcjRHKoFs3qP_@kAL@9A]sVKR;;aCV7:fQ(YbZ^9r=BT8>++`Pm*GJO6=0DJFa4AZ<U.>jDsOF'p\_$[J&j!8Qqm0r%mSJktDnAH!YMR.F])-?B%rZmpEJ(i^=0Rb]N$ZM1\Ri_H2-Y"k>0&C`)8?mfPMnh$IgQj@5K$Cckm"@%o]'m#d3!sC(;oU%kHJjq%I(kS0o]kV?4If&A\TtS8(EjTlGdcC[pO:sgA<Q7^<]F3qChAJ*0SI=3<8TpCKt:SYbSne4k7`m(L9SMcD=G=sS,N>d7=liIIGCfJ%%[[tP@-;A;dJ_UN0O"3q>P-mfY<S<T1'Ug*g#KSkQq@LnMc%lBftu`qi?!Z]SeXlkfrEMCJ?tka>O[Uq"MAr\BB'Nn)-1='8O!oQ%HL0(,kRl\(=ls4JZ9`<lXgr(FlV[`W\]HMDoH1,jojfcscTV7AS_`uRH<3::k,nOYk1SaQ[/6_JSg3uJH[49rH@5?#T#TT)4'd*s%WTWpR4t9B8@mbV[.7$5Gfh!EJ@\I)W8f$h\@Si5+9c]0(-*`;Wc#fm$*$TNpT4R4jeHp+:aB"1P#aTMs+WUl<=OsD+U:*=tdU1>_%8b2$t6oEp8H9MN$Ep_o"MDC9!0_,h5r;G5Gb3"g`K[Q]ebNOeZSZ-n^j6P/"qmYa%I2YB[oWujD%1Ea5&)k/+B-(4T,lBBSIcK&G%LHqgDLr&h,E5BO!gZ^H&5SrCrr+p`$?3g7SnfD8Rn9'QIbHF8A3^SlREhOCWY!>E!K'n]C!3tlt0"nW'7ToN?6+l]Z:Rut(M7iJ]%Ws:;Y3eWPo%=A_IX2h5pkk`BdWWkXXN-EUEhKA%r$5$-2q/rY](U8M$rgjR8e@1^M@O40Mj*pQj%D=I1bQbi[F1Ini^<@.76e[jh%-A[\sCk<Lsk9c")r&!?*E]76_SIW#aa<ST#H]kNj=9(Di&hs`/a`WSZQNT;[_73`XHMk=&$1L4ME+D?B2M.G[4J2p^"U[G,(:jO3%iRMbqqB--/G'6<W!Xkse&s:BGQuFVEKh2"pX^7<9\Wrjt-DoRql3oW#(:),`3F0`M5U+6BB$e4g9.--LM.+uK&HgZO,mA>JS.Zg\%eb!_b11C/-$t?c]Uoks`8(u87kE1=s25L,ePIIW"qoR9PO*'VZban0:-j^P?)6;Ts?SHHTn>66O]JUHL=04Zt;1a.<K0/ahePHC6%0djUGV%]:Sdo>H6J,LiC,B$-=OcK&1IUnX*P&u+sE^/FV5C^@<8J$5?EH>C$G?/r,&Pm.R7T=uh_Ijo=H4H\X9eQYAY4EVT"<C+G%?\^Y^s/)C6LHC"a6gCY4Zp+cZQJNY9T;:Oq]VO@+?k<3&$`7fO0gup)_#&6IE&*pZKIh08MK7Fu-Y,Rd2JGu%?Qr_un"m!pN$-"D%?JPXVek:b'W2lM,JVAWMgnh]DrBlh@,mCS2kLaGM^P5N3O4]J/2Ln7b?YSCm%Aos"lt-]gV"6]QDeUhrT$?Fqbm$I6_,Hr`%KpF\%V75_e0=4CYl(MZ_4[`r=-"RtM*=?STq*`ZTUXgifcfqCC_;eqO=`F#oV4K:W_e)!;.CJdo>C1W2[mI[aPBL[XUoYtea[cYG7@(Gc%)8XXr72l:Io>d_I-OE&gZC3mY\tg`/_nK+?SMu;\CQ&C7+rH1$<V9:j<K45u&kVX`U]>2j3`p#H*j[,_3N<KX%U's_%gO9rgW*t3%6Rp\alI/8F5]2-SgCA'0Ut5"L69:.Vp.GG[^eAhhoH[\loe>'Z9_ATJTPge+g/ujigE_jAkt1BcE'&2`ncCefmZ<$sHZDSa]c:q;%\qcW%"/bLL+Wp!>4[[s>2:JR:H#;5T"[VV=mk@*tlD\HfPE^D84Vk>>>E0&/Y4EpM9a&qZhq4`+)>Na2QRipgT[!A@&kdjsWA:2,%F8>GF[@Vh_e53,4#@_8`2kE/I=UY1e,i4moeISP8VYX@5_=\^FKDItt8/a=;.&b8J]!O9Dr#q^@24oSCf`R%EUii!PAKrBFG)FDm%=l1nFIL')uGnGM\]P:Rn%[a%H>:aZV(PB+n\HBAM2uoG[T/T>ZU0M@UD$AJ"eZOIRFk$U!i1;4)*:1pbl>UQHZL)K/*I[JkfsUY9%>k/5=OP?rLes`e%0T7B!GIW*\7!K1-32rj:Lr&4-\'6,u!7k#-EO_Vrg9jr"Oe5DN'L4?a]T381@V4$`/G7!s-+XFk,]3t%:o=P#%7=O#5X)<u7?gm$2ciXkYSMtu\l0l[S,(j*;m`=u'6KT4bk]c!./^8"9plUamlJQ]rA]/aml)]XSkkWs)j>HVM9Q"_<NC9?\#FW9i%HtA=ki+6,Dd]XJO?kSAS),[Z\nDfD4JEKd,p?Fn'&_]:T$rCS^U0aXo/_dQfHVo@tc?.^HqR0:o6:T5Do/j]N#p#W/b8VP/a1!-g%\,__b'L)tm2('1K@)g3)",5WCM^"jF?il!eS*7ttR7(k[\.g@dkrTE#Iu.lmZrXaOONSjG('<U5?9`#\1UP08V*iXIIcn;8:tD;/%6fAZrB$h^b>Ln/6+(O:D>BmpM+a\V2Q9JJCBA.h%$!d"RlpdUmdf<4#YiU4ZE"ttH#00Ph;9u4rp)3I+opqLrMTuo"Kq<'.aIu;r%=:uQ:HF%"N[Bg0DH9R$N[ah#9jsdmVGme,!j'>qE^=WLVONQM!i*Lt(5JhbOD,AqJ8'F'a&qXU`W4gi`&1L"jG4\^T[f/W23at#]%2VtHEZV&SlC7"7a+9LrHFQ;P7-[L2D806[$AL)!)>'n!k`st5@O&(K9^P$>Q098ht6l&cfM'*]aIm(!JI^i54`Q<4\]R+uh]7iF1%OFDGC1<M4SME$g=q#:&TKYnKuDC+t#'$k?8k,I,(:1)G01MFEb3J!soO$S/Uh7EP.4f?*UNT[\DE3=j)Kpo>L7s37W1Qe#c/9_3L%4F(QV=RO;&CEs]ne4/BDRrG6hes>Yo^Q_5!)gaOUfl6JZ/E[]uQ$_3(B%.tsRZZ`*=W6&Pl'Q8/kbF7V>/L[*Fc3];\kX;4Ob-)!%pBDQ56`2X[QRW4[Q]!3Pi4Z^t"1rArZS%]CJ2n&^M&P"Ujm'YTC-lb[I4[,*npN84DJt4drfu$;$P+rF'/c-8?2@@+A6m>HpP?Po%gb4;CG@[.$n'@,FG7-'di#&.=MbXea_d`D<1dE/(S<[rtLdM/"!*CQHdD^?iCgKIHk:B=NA-IjJ>UnuFh2&A(oJ<HbJ$Edi)7R1I%)1!I[Hr.$q7WHP3GW[0:<ojAK9'B=>-S^`hGGLOq=MRmUNGB"Tf0lG%+3i_C9aXl"eRjO?;T'LX%mbJuQ@mIX^.)(]Uf#Z5NEd`$%.@^lr)-u!J=Q>Oim-h#QXGQ95II6sU22/>D.E>=r(+k53*ehh$;>HQL&]l`;S9]6IN-kf;,3?%I-h%Fd!6.Z>k3_V:jBbZkZGVo*%R6VHmZY+!to[WSZ,:T$Lc.:rZ,B1,Y^W[h3V-ABd*6_!<K7Tg7q5r-"?Ut2C,68i[M9/_]NZr(,!/Is?nlZpM2g`PK%UA4hG%0L]%<&Kb2^I6W?XL_Mb>IcN)dK"c8JUIYTbeFp8QVksp9,Qa=?*/c[;7qgB/oRhTS/j7Lr^(W&NF+$M>W:H5DI,K_HYmU%k&Lo9;fRS2%8_5@slXV[/g8[$I^<G9'9X&OQKD":lQto*PQPLps@QZn$d&&AU"+VCrgC.n^X8,?^K77g>Dr(@`0[Q.t,8`CC#fsbUGr\&kjdL`R%_FsC(SL7^,n(lQ6<)A0Y,@jqa!Q2_l4U5!gYRG(jEG+U3:QJM/W-N=\UE<9A=J-*reW[fnNcZAR8"aK>E6V$=Iso"Y"E^Op\O&PY%[N1P:*.T6Zb]Oqtn]P7&,P%nVYsJY^kT71eV_2a5)"q8Z-NC7HgUisln>5oLO>d$`/=+O;U.K3Ta/#Q%UZ#J-!#^r?;B;Q:br'nD%*/^G@bQ*l&GC*:10U\5hJ":`Db,eUO@iDGP+I.kC'@rJ@lmWR])YD(*DJM(RhR!9gi.CK9WM2FYR.Su=!>`=sksYgsUmE&OIB#_(%M=0"0733SuTT;>k/Dg/@8FE5oL(0Y@<Gr&W;B(!n9%1k3^#aZOSXp`M]sZmKP-:'rJke^A3u($!hN:]bml$rUM`fD5F826A]cP3O%S.S=iV>FBP,VKhrQ%qR,A*!Hi&JQU09L_.a`83K8`2.:>"!4V>9XJ;tI!c?J^@Pdq^jfD)I[EKP'I/be(j=BbaGu6)p)$mk=spX9%DGuKaYb8Jgi4Yp"-=_HaU(N5clG!jN^9bo<pGhh3oHYgWYmh=5*:70&GU6lB1c@;>^FI"iD3rU<Qi]iG"(j>4@-!*>K<`1;n?@[%%U*]AMBJo<Sq`rd=$Wb*+3/5^D=^`CQ$*4_tWjiAG`hBNL.I;3G3%\q/kbg9>o!XCJ!9C7(1YP#egkKU*@iEs?U_gK7kl;D+U.^W-%2ur&n7#n'%l[US2a&E$PLFEe^ph!q!qL:nf!SOc4#6pONf\3pS<e7[RlU+1QH!!^Zc7k)GD@^1D;1YHB^(CJPbnl$:'-&4VTOE^(%,+0:IFY:O3&ODBR;FHD>*S*"2(!'$DF"#4A_6gn+\1L2<PL<ahB\$(We$tuuCmD%kg>kqY%75:DU?`kJXLbZcIH[a(7tZZ]p?b:P%7gPHU<_Uon=i"hh2ZrV^b+g`hMM,F-#60f-g540q<PZe7aM*7o]Dsu2hL*ghr=(spnS6^X$`=Y+1W=qqaT'6bC)psZGc!a97?#LA%fErSQ'scfSY:/?.UTYX=GbPq=b,h^R=NaYa9*!_^Q3C,l,"IEF>B"Z<,]-94=<0EmG]!m!#YI&:ipiugo^5r'k,7CFQ43/>7-Z:J%id9/Q#s:+V%0/5YWGX#Hb+`O`JNU39_+ZW`LS"Hn[XEp'fSnB-V[Xn"_LIDDkc/'WQo'/h)L*o_P;?4]5BLnUL`+M(9fG81c,qXl%+LKo<>mi72L6^.4#YSO]h\/"E5[E^l$.ita9EKTc*70&p#UE7>f_43Qjo!:=6djYAg#ZB<VbmgQlU',L]IgN3`\T)0s(6ML(u<Nt%U5aVH)p^42GjNg6d_,X*keF<bJ%0f\l_iJ]bNSld^ajL65:[07btReE;+Kmp6t--?*<7'M7\'\KnEOE/9W5U2VW)8'D3?_2H_67+%BZI?rYo,%Earq3>543-S@?9'HX>5W>ijpMuF]N?BLosJ::(8<t5P.n<1R:AdNrdk*q([,NE7.*>"p]mh2gp=sYD,H)A<[ckAUc]+%!_tTU@5ToJ!$kBED$$VShc5(fUrDQ]@64T<_u1Xr"pcke;6YT`^/EGcr>c'QJ-Ej$f4t]&(0jOlCJFID7l:l`5<Be>?UhKQYZL;6%W.pcXcpeS4V/!g`:08kT?+-%*,8bk)_c:!<TF*3V?*b&2Y7`B!,YGp79JaCT@Ym<K@RZ4^BM+k]5@#b+%bNP<FFHKQE<12]MuF55%).Mg4].#ggS\NiB79]1b:IB8jG3V[QicXdRd@qIf#B(]nCK\Z6^b:8"0#RY(2pR<b>G;gH$p.-br_d00X:fcJq#6s3#'Tm&mMhG@%o`L"P+]IVGJ/]U6QP?Q54@[@=;K$g2'imJ!BQD3k8!->'TAM`1rZdc2H(?5/_WrGcS[`RfNh+<F/>OYU[OS9c!U-9Y[g\I4Fge"K%U*?N70(.q)3uLOF5,X5(9:_GB&0p!NIgJ_Tmh/M-5go@bf68*/.*C%O1^#O1L]Y*:6?2qiW4J$gC7J$)dgK%hH!nEH#;RB7qVacl%+;kdNY35;[b@NpQT$sTf&1i3D\c=%UTfUL[(M,-omX9i<e:e.=$%@?%aH9st$<WiWR6fj*@la0uoP7mk6QLQW]7RKN+T9Y]ocCC9%=KS?[':_R'NqH"r.u4JEd1Sod(DZ`/*i$8E`8PPrUDDF'%.^;B/al('llfPD`3.[>SgrO21aK*;hG\I-]/Gt[MUuX=+)<OM]5!B*%/f_rWS+?$5(ffb&%t2t>/AOXO&I,bZ.4fpX<EfAK"[Me(]<2c-MV@FBT-G1GrMV;.c#.7a+@[:4:7:NR<K8rRN`EMH)%Ekb]NEC@%L<0'ABtVSl3V=M=RPml@Rr1gLh>pPMo!kH2jG0>LHnKsV_7h`#H8/@RfhIYB3T+S!TG3O.6SqdE]k#q-s3MAtV0N'HIL7Q`PDTT0%#XmI^3l^,@$M-9G?)U(C6F9d98eXkn_,A"M>g>pAnnlcf0?M'?Z\Oij*o8J&0].3qpBU5oE7%])c\jt[0/M7[OH_K55$(fIEf5I<%.Il%MYAJNOL<TTsbLu>O=-9;S0=81QQf+L)3NSF\\8[kdP>HMo>W>"nEDSS:aQ2[L)-J;Y8inkNU@s*&Uq.&^fo3nM\k%3US,R6@%-&T12IZAC&G9QN?:;qg#oV#gYdoGg<[&"8q)bmi)(tp#s9e_m956+==8:DEkO+DR.bX%[lUu+<Q/YZVTgc24iX^VhTc].&;:0smV%4*k.-cE=u]b+&?:;>:ZF9h%Um6L5iOQkF%@76sFcF\@WG15?p2.mg&:e")!/&gEG(Q/[[lI/QF^4Q7`8)`1:G?f*Q8,WjEh;a*-`%".2>n"kGjucU7k6ZF'(UT#uJC9l9207ICi-nuESnSoe;t%*q\plmT![n#fb+]@gTsLQptRe@WB^.lr:l/E[t>PI?6aLm3Vfr>rH9%N^sJ?&6*nGA7P6QYj/-qGo$i3KTe60ga?L`fdpPCBC+^@pV!UGJJu'`BT-3FHt/0TK_0B5V]lp+jr=2hreM=9#cZe=%p`uXMPfhK%fjEJm]ahXr?bL?)^;jS15r/gp8#.;.?N2o8.uP`4#^qjk$b.bA[%jq'HXR2a[mtD2Fd-&-crH(@0I+:%MWp+Td.%h*@WAe%*:/nk%A5XjEf?GXCGF'N.!&-k`-ikh09rC$)"hsMXg8^](HV037"K&)FgC/MXLSh-[qQd+hUXlqM2q^JFjH(UZ5%%p=D`;,<)&N4t<K."B%0!fd"lLLR/RNfd</+4Jgne.C"B8M?cEJ<Rc3"c%H4P[fM9H%6@P[pu_BJo#>ME:jAOm#3>-ZIW'X7PJaZaYH\:@$[6iEjFRZ\"Pg%SY2^`j5I(/r91#q&Z3Qhl^A@u!9o?gMRj4O0mo'GHsROu;"R_e.\BhFLKd]B_ZNMI/Os(DZ^l_":rb4oMDI$]VK#nWW0WViXHX$W%G_q5)ma@=/qZl*#c0*-R`Yp/n)eJ-pgB!Q0V_3<EWZXmu@8DbgK'Yi!&#)B-E(hH$eJ]DNacT>'RfOL:h.kadT8XqF-mOEf1G=K7%&a!a=oVEjDDg\sZKG?ig*8":QT]oAcH$O@=E[`5"6GYO3WECVHe#fpu>&MWH5+a6'<`l8]FP(((LYN0Y[4#G1jV5+3+g*u57"MgN%lKr]W\uinA?8i2h>"mptRP'?N0%iG3C6]ZVVNKoT3><WH%*\V/1-I0=:AWbG5kmk>PH^olE=PL7<fXl#2rfV\h=bg'Tb%J$2!j06%)AZ%,"!agjBaQ5,(M5!'iSUHu@PBF.,dh</Y0J"G36_]N<f5E%fbELCJ@kNrE8LffP%H9iJ6?XkJK;@ekOa''.^mtO>rC7bkWCVG%J&e`']lb<](!b*n.T.!!+Nd4USl=l@?m&"F)_s\n)3deQdiWocbRS>_JL43\P#7jmZL.dt,8khraL8pWq+!#?#6hp_%n!V0#L=-,%V*lh/Q<k$<J]"tHfJlSR;B4W>"#Lcj/+;:X@I5tB'n+CLN?[I6@>us]c"Asd`oo4+'KmWG_i#M_)Ip=H+(V1pSmhp&F&g.`@0KrM%'`YVA>@=76MOo`rQ>J:D*.XBmqc\+UP&r<,#6nP"Q`sQXR^F,HJ*jWKUBe[;&dkprg8IH&j!`hHbtj^2)T?(*i`+-F"1UKS%o;48%_nQ['1%J0J7fhdf$]#/ap`DBVdVg:G:;+0+*$5$pSI&GWSQQ'k!U5EbZo\j^\XVfM-dL//r7P]n`PPn5:jX\$8SMp*jA;0S$Y9,B%1FNX;$u^=`$!;@%%%NG+E"$g_f/j0]2]aUHF:K=S&XYK7\[8"H1DC3ET+;_d<_Hm;9(;od*L_^e\=,)d38ih1WL\"(pHEpT8DRur%9kh$g1@mM"atO1[J?;\-1!,)?i]+1la\'%W%/d7TjBs#Y;fWEtDiT>>SIF^?E2bAWjrZ7s2rUfHEY;]'cseP5`\6'Q`f*D<:Y+D?%<]7?!=%6,*qE&Il&+,EACFjRsY\GS^SYRsKE.sNR4M^!k8<+^r'W,:+c;G=)1bKT0YS/kB^`);-Ae4;\6"?'uWFmbVs$/dAaP8lk%ff$2!G\ab%aP",moMc%,#dO&Ki@\R8_SH,sCC^X!>2Q%)W\t02%P-7)S]R4Aa1`.W\"ndJ=OLnZDfJ#r5c***clm,'4Y15TdARsR%pr$p;,>#[HH@!j[6rT#<6fg<(q=3`iYYAhK]Wagpaqe=\XihcC+\-KbGjQ*Q/gH6\2Ut4soJZb9F4Ch]#aCCkXCt@kACHffN\[cb%mB2-u<0P0dOhJTN$!Cc^ZkF$@Vu]Y&rZ4HV:lZS%'1Mh9;NmqqN2%jXebsi=4UfC8?8K$k!HUrN)eX*de%J9Mm=`goF%O5S6=&RK%c9l[pV;h,VB22=u&/>IRh*#q_dj$"f!E37@aXu!=N@J=-QGpcmA[,\u\m1Cr/,PZ[(]iKf+2;sPK7VLV7N<<9+:gpT[,nR-5_'T0%U=b5g5XOpAj1HN%kL/FnNH=2(?E=4L`>].0QP`?O,$qY!<rJm3m=V4T14SL:85n;+k+G^R<hL=Jc1g(3K.14f[2-eUkYBo(6RXK5%/*XDUkETYLGt'ql[X$HD?ABmXBslr*b&O6:R,Ot73?N;3g:3r"Kji8!"`QgQqO-B&k"J#u_SBQ1)ZCXkH%Fu0R9(`J0h5m7#5Qba%Ns9(IgQ[CB$k/)L[fE-00<%m0Gd!R$muJA*UHBWoneg]_`d_P)ft!!7I?cKM0!YSjX$+a`Z4-VDFXYiO+G46?lcZ4G2OK;m-,Umr%8H6i@.<OkV<S(fR0Po'hJ:`m`*rP%3Qla7>pf@+IYE[DFRni^-I?9\02W;j;n'BA]Dt(sunPM'OQ`CS2O&*V"'h%P?,P2uIUZ1%%%FgBF8mT/=f=8%^S?m9=/4F.M6&/@oeNY*DI@YhNaPI`!9K#@SKQ2uQocO$TTre:2(Ome4LM[SV^MH)Pe&VMa&"5HBmR,.D_Z@hal%GFgR_]#s"#W7>ik8D@RtU>]BThg5,].P83oh=iI2<:'clc92`nAI!$SjmdFOT^%&$+ZeI(dLBJGAp`gUj+3#Z7;$p0U]/^-"6-K^%peeBHM*T6aRmV=8/UtM,n82uXH-'*n8$=fm8sM$a5h$O?VY,UEFEQX=,1F&*j'J'7*US!>CCsj:#*AR"-Ru*X-0rC*W:6%)3c/QR%C)t+C;M&ja(Y8=uHT7mM-Z8e)JS>Y!3c!jQo8:?SC0a._S(A%\VJ_MF/!tl24Z^OY:K_JG]TIXf0Tg5,6WTUp*]@AjdR6NkaH&s"%>;eqf:1N$I#-"p*3L#-"ZXS2RNfk^FHgQKA'LX&8!cBTM7b:.@Z]o4=!`Sg`m`/8*Jm(-/.Rk<.-@/8doA)F?%I'6CY%im$L@S_8%m(%u""EP?ad#O8AC*)FjN0?A%OuX7T$BoejBP`?J`FZ_=Zb!uGO%cqa#jJ7)HT4Xm[-9W@*f^jI$?WT$oo!GUi%el0!G*LBi9.2e%883`o*!]hJgIn-H@OA4_7TT9D0C0V"#"M*E\<^5E:m`j@(7VB\A>m_Y.Cu'dOA^qYX-k0^@rsf_F5Cf[O'\I6].%7ppO7*?9KUU0%f'TMa.t,e0O>pSiF4LbIkY?FhRn?@#9+<;9Ad,Z?=p]]FMA1VH4<"/_6P24I-VYQLSQca.;JT-EiVK>(gHXOFXMiB$#M%^(54QbW%[f#?qa'uWg!`+kXPpb+,@>X;:@2_%+6#$N0.S^fBXOV=[Nam>ckj\3WB#IO!:Hb4@3DI]^S1QX;5$:oD*VR`Ms+aLjD5+l]UBnuJ%P)\:f=%%SF]/d0o!S<S'iCKM"+n+7\E$0fI@Ed8Ld6S,:kYrD(@:i=\F*WFZF*3sqNm6%jNQU2cZeHu4Ts0>WoZ!@V=T?s0VX$-8%l,rT#W-AX40O.O]2.W81K6YE/@ne$paDDSp''!Hn_'5ArOM!+cb"pi:(0q7/%q`mdDtGUANoP>Z?==UT^sdY.Y8D++EA-"q*j8=4%>b$tRprVjI*3Q@h-4E_C7cN&Ap*t\mUIE6^p#3R3[NfBGj@JZMHIHbL2d8c^,#<LmpmKg01M%'ZQ2^!ULSG"Q"&!]>E?O64p_r>D%+=#i)I(PZq+6K%^oYHPeACI\h[I#P-]lHP!Y+0c4F?2j#rKg^Ja!2Qb[5L7JoKS*&Vd%T0>qq(0UCMDXAl>8.U-"8A>*`(-Ie;8;%i=jQmqr.0>!bs<XZKRAiS>H;o7=J[,n"khap,,UVBJDgeW.IPjSS(;I?JG;jPI3[`0c5_M"ZQ&>O]^=UBLV%YL=FhHr9<%-Ig9$J%ScV@.,A27]TU+I*oY#JG:Lr=jZ[Z'gl<A3"720C_VW,FY%L@LH)N-M5kYXr9jZ6mN&IR1@RF+k8"'9"o)*3Dceo&4?K%(td,g5<k%)l-[H*En=gZg:d\X2JpHM0hDoGu8aQiDtKe)#r)s%E0G=U=WW<^&Xo<kA9"8]@"4u^@M(rJkWRB):qE-)5A;%PZ\'g1I_(mV#6$b%ej71]\bd[$aL@^'W90I7h=WX!f2?\Jr`I?sXVn_U&1R0L;=S]3*c/[n@:.$jrfOhN;m/>&/Nd3)G9q;O+JtY=%.(>mM75m2"Z9C<%U`-2;I!QJR>)C<M7`4*a7]fG-k+"RKrAJ4R%p&m"Dq,g296I@mNN8p+)_411V:?X%mOEleWdr<&4jZ;(P8EW^d;P)d#\tMh6Gf-N%+ArR_oq(f1ILmY_DBGNp(]eERiVl10BB0&PXd)&d%`%X+]^h%2_aC;<FYmjW!%)+9#%NgrE#G?k*AX_J*'.k)^+#00.l:QI3uCT.%"IO3&@J5R#h=bdfJKG`aWbQaBef;ci4I2JDQ'%(MP'&gQ*p=3)<N6J8!_1flFbkZZRm]geK/"Bs^Jer_)U/!LA8O0,pEFf:kcma"%gjO>%`?tOt?@ueBnZR"pX8m5[cD8n">1S\agj?4^)GJKa\G0=_.kJe&$lH-_RFWhQ*![%d1T(ul`Ee.j.rN<A!N<aDgt5:r4U6^h%ac8f1<4gQ$5*1m!1BVGUPg_brpK]l7cL!E5ALl.u;niA2DV.(PLmV*p-%k)2kOkt'*X^E<Lu>G\0&Yep[:-]pG:BMm_R=9-`%-%6%&4F+83EIHNV-jZ!Jh3nVG3Js<fplI]m57Q7HAI#8n33%!VAr[?h1LB]q@(]m7e"!V1Z2D';jbJra5(QCb?d6sTn(l^G!e]?pKQ(Q%"00(('SSZW'oJr53XAQ@FA/S;d*M+IP^ph&U,ao@1Jlc#NJuPr<T'mgP\(*oTmg5?]Zq,9l:$G1,SR8pTVo<p:?HFuqdpFp:*TGG%[HYj2e7fEtFI40ZGa!OB8=pMZ4]\p"f1B=KoXcmJ"iS0`&>h6A/_iIN"]DC82q(&KO/]rA2/?ae<*rp^a$85J]m4@Dji[1N6m00_%Ko+)hW9;d_aT,D[ooYZ;CeF-.#J>34,6930jOWtja;j^C8Xg1q/tNu[!k>6jFLrM#AC'gVFkRXhgk6CV\j]8"6C3r3b&i9uZ7)Pk%s0cemZ.-HM&A9_EJ#,V74K4pSVFn;ib$p[1d-@-ua3L^-aFpDP?iT?^)2qEbBW@S4/5h@iSCU*iML;LSEil-)#[iXfZJpcXEZWrV%%@b2=.XqZO-'hb<<,@T*Ae*a\g:P=Y(WL-Z>UTSdW!&32i0YDJZBXt@=\aS$p/_s]?lGHCAq0MW6c&EP)B!a'jsTJu(=*IXj8?D0%P=Qr5jCHZrh4E><$NX6lf8:ZRGVZ7I#JSWQq.B6d7e2U;fD0QMc,l@@bBI@IM?aOl'aeVkD%O.&L8#<0%k5gT18lO*;K%!WW^%X"%0Vj:LWo'8tS-"/U>ZPd4E5aWp<NC?$'j(*+@!h#)4_,JLo;92^fsX$)qjKfk;6qj?U)_9Ghu2.RMirB1cW=bZ%')o(VNu)]*cTsi%@TgdMe9rVUN-TI45"o8?9Oqjc;8blFZHeF,,I^fR*Rp2Sc-`n*.^GoNok94"4jp@<9,3n:o!K7J&rl?2mJliFH.4&&S',@OQ+D*]%\//0YcW-d'9+*TXPTl)h$c]o&V]/8eb=c"oKqg!l+dp%ABat%4?@a=NXPia6Tl]%dKgY^60Hj<b&q\_n'kh#/?o0nFMN,$_'7K2;%SLLST$61,<72O@1b(^Q;dY55R-$A,j/eN2OA[O??ZB<_P.u:6P\ZEN!?a<Qe9+l;N3b+dR`ETg]]d8?tT-=>`.0:oQ+s(_<2&4Q7%d]7a*-:q7W7s[rl@"s2RZ"!E/l?Q_n'd;<g\iWsDFFE=H%nTPsKlU<rR!!b&ifuuE-9G$UkQAp-F6=*G('<s!PhEf8bfct3"-W!O%[>Y;)-/.9URgt9-Y*#H!_b;KIKPPQ)LA6iZ>!5B.=I,#bNV2j2Tf@HCS1qGqK]t?O>-+",@e+fF.1>m<70AfB%k-f"W_D342U(.F%E/F.dbkFW"-iD>)E6]BO#&?])n.6b6*`e`D?PH6P9me]@W;ku%l"j&1V,N)c2m[8HQ@t\$0R2^t^.U5(etuI;c6VDG,Ps-0N*T^,%[gZj-2Y.8:C%\X&I#&"*\ZCqd&0`>%[C#@giHb]Dp@6B=rHU:RK`>V7eP9lMqo?3/+\1r!`)CcHndn9S+)c58hFC!,Sf+]MfY]AL%<?i(h4JX%^maN.)\oi(d-Wh"_FpMs+?+:**.9b90W-Tbf[>M%`!=9I/=ZTD`"CZh<14i=>C[:@d2@sU-P+h41N]RS_DkToLnSXnS%c`!Dj\'n_GNoS4_:Z1$oe-*bP$GKX<E<?*`#7!BL&0e#;68Fd16OZ168[[2tO9huF%--d8:h)dmQ76_#3td\Dl^WR?h5!IQ'a\-u%bjt%UM*%fV97"4`V32)3**K44UPhqd.Wco>oMEYd)[N,ejKVXniNiKX:u$.(c:n67Kn,OJI"@ShN=NCurBpEI(<if741SLRU,!Fd%m!*CLV2oXrK*A(@2Sd<KU>Rn36S2_6:s=h[&=@+m&1q:Z#gL0#'h$VLQrpbj43;WP6nVn\!`!AZ1NUE4"D2CCXMkef.*/j=FPFn@%L-<A'$hmaMlUYN2\'+p8(m1nQSjfNI\MP%fq(u42[*XP]5,q/*6a=/V)(+!,;e,Wg7CodhV>Ci==WDmMVVO2`@8jLn,'P6EJ8k:Y%9U>N$M0(3m0%`)-bI6UR+]NG'$C>N;2lr<<"J3#+>]jm(;%<K0[,rdC*a1V;+R5jsnU-.!<)X)&qc''ueg%!=q>"QNrsUd494R,1%(,M$O[:@-k^36,6eXsaDL/*fME$i.FT4?0^j3,r6[&_`E6Bm'raCV8If0"9.ipE5TZ.?g7l/>Aa@':O!)2=o=er3X2AMrIB'KT<(%@ohk_hV&A_"n<+f4'YMFG,Vnbl@nu8XTVNOQDOf,big]aA-,rRJBunB&7u*]^$/^3&^*cN+`0pfdmPrIY;VF^N%0mFY2n7!-pY?>%/e;fLnsV+`p='ulVGZMD]3Nt+lP41uFO6OGg=D%V_GB-*R'/O[BB`rulHt%l?4*R4*a3Sp(3?ZiOgQZ-*S0=k^/Q_G":.Gl.b0K,%N%$f..r\IQ+%);,Sr/!6^TK.(#JqI&a#+qX5h2Y+/%O[-irrcn+)"q5#8)WCIcEDm^/T]LQTZ@*.c-U5D&XRGZ\&i;k;X\(?U4]s%*iX.FU&\uWk(rW;d=N7i9KJM[F(7L@dOOPW/h!3IjJK3.+ci6N.bGi_!.KfW@;S-NL8tiEg$=*-WG:+&#[hBZ!.f[kWJr/2?J@"_%$T:m\(%\cQnA$u_!'M<PL>*t[[[E;1O^!77H&;%O?AK(A[*>Jkd!*tdj.Hr%^iKS]3+0/8Jn%0N:M$UE'Emj6!V<3WmL=&b`nZ;D%]No2VBuCRrkfsaVXFk->00_o,K?b]mT0O-&<j:i9OqhQ'"jg;.LWo;4!G8f[Ra/tu@eZ9S#@i/CHB/[i8Q$h*U""LbZ0_<saRNAr%d2c/<91Ga^jNJ]aI#M@'H2dcaOF5R+KC(DXZ\:9/45%&NTi>B`!5$'qUTo\Teo%>mP\*_u/^e&o^^OC=U=ZP<aIbAUO(c>o2GGj#%KMbJ*WiM_+I8c\f(XpB0?9YY!<&;c^(5;2#L7LH$?kuf>c]A0f-+t.ckJ\LH=(GhmJh%[E#3,a4NIK?`T?>Sf><.%gF[Hub"M88S%ohtQk(]`Ac&`B*%-a2ot!rdBY3Sckp8YF>UQ2O3$F42ccjMJfr"$<Mci;/!1OMDA?o/gieNE8QU)@><*jhGAAB"Ic"\IQ[?@LZ#B%h6r0"(5SEE3X3:uSB`m9\aLpd.Z=NSK?"[4)jE6eLFLNq(sY'N7UY)9E0!O5a2*>)RQCdN/\Q$=s&H,eQO+uf1hJPi(fS.f>bT96%AEW&0CVLIYZohaJ0XE2Z<M8@_F^\El!$eh]NQ-NJ#a2R45%NoI&&\.:k&gbLepYDTHm)aoGdS&A^*&m86u5k&KVT2(s)9>Zeee:-%3ut7N$.h;BM/-`)$XJ6F>o9oB`nIdO6W_=0;q]!r6Ng2ESUI3q8j&]1#atAOp9-`gMj/ja0_f<V1Yb)N(Egrnl-l=siuaj7MX3en%*[2X@rPatRULMuAA9S[t,EM8494<b^BfbZ4Nof'iX3eo[@:DuWDpH"uZM(GKl\O<;/f4@m^=5d45jY\B!/L"4lZVPY6KH/8It83%%Mg*tGF5XSu-J`Wq9JUR"4'^u*q9<iD-#IY7/!D+"m$0k$N)&IpRaiPZ2)n-B*Ob7seU_De0a$m*C4g$b[.3c$iAn39*`itD5F337%3h1YK)SE9**C7!FO[EV7Z%iNiM8`6Z%F)[4:XBlU)Wp%Z3i:1O0j3U5<khFo#nj9$M*nn?oJ-p\.%tM_<g46a:m=eS'U;O%e1PO_%pSW23\_Q=nk\u?812s5XaUj*%'`hn*8=4A2$%`ir`uK2F[$Lk!B'Zj1kMm\RUKa4YisJTD,aV\thYP-^p2`BlP65uJ,<`n(,;h7q%nY&VG+&>u*+hW+E&IgRf\\C>Pl.Jat=Wt(<pM7?1VuQ]Z,pp8sZtRa1!aufadXCQQHD0]m31[8XP5$T,L'^M'E/_1Gl?^lsWa!$!%3_,erg8"Opo;aVK*iHqeWPY"njGQ0(\]1n\1ch+7mrLHS<5#BY+bg;jWBAHe4P!II/l'=qU\FYnh"p'^Nq`bk&t\iEU(MYVj"<fR%Zn\[0TpU1`:b:g4i7`lp,Uo!e,;Ds-?m`!l+4V)+e:ihijg/gp!Ni7*Cf[OX>eYmlnS`\_(-u]:cTB1bCY=5HY_VN9bX20<;RboS%+(*&NC>juNO^EXDndsV/\V6s#e<TsMkncl>PgRPNZhoTtU$E+#qus1rE<c$R#94CsCb5?-":AQ[T./\2p*2t>G)@-uKnrTg9LrPR%Kj6$c9N#IRKulOo>QQ)lki<0rBE4dHoEkq*rY*-u2i:@S8WlO8]I^8F?Q/c'R;&[^QG!/""tSorW?I\M3C]kI$'EFs;%(4q^RgVu%d<`?;KhSYI7ONH%-rJXt]m\Xdf&']ZCCDhJM%lq@K=YU&>s;2KfCA::Oj=SQE6!o5P\Sg^TIm@b4[ir^S<fS`R:Nd:$7MZ@/tV-,%#`O0a#1k`_P3EaAFd?(7+4G!+QS`r#i=F@c5TME$e<)lelB1$<33a)eFj[%7)LPBHP-ts#3S)+Jfdqg6j`Z/H'SEh\^ZA%kUE-!C%(1>L,#:N"@=PjTbM9b>9o=j5(aT5!?%b9;7H:0DZ9>^Pb!4B&D3'bg9T+93iT8?u:D4,;OQ36cU@j5W7p--aq5t^/Y?Op`ep\9'U%PJZ4<W<)IKeEr[@e:ip19_:^Ed$V;(bGN^18mN0I/%!lcG5H8Ii<iY"/t`37dMmFJ-hBYp$$sO$EN@jb&AfB:%Eu>>IgU_>!nP"D%15aRp&*g^IC^5bGp*tIjUih9uAW)rbf6\)EF;2$snlu9@DjlCi-S4]L3/?VWJ-@OQTr"3VDG$p%Oh3.P[=P>ufu52*ne-(%ppVGk%A45Eu83;?8OsGg$)g^16Gac=o72OL6oi+i!GqldbbscRUgq6FDPXU(nG!QE69-<MbRkBB`/9Z;)iY1f43XgV+W&>iQ.BRb3guV[K%VNeY,cF2;1HB2DC"hclff2eD4D4shbZ.s.c/TT=20o*Mc0b*6g%GeC3kAgc"QA9["Pg2t?Q:f*bT+sZ`C@(,pTbEjdPZhG,"@BU4%I>`5=qj-=Xc>'1M7i+QEC73b[JcR`]HQ4__QDX*V)fAmqR'f8=)EBC_COD79UOY0tD"+*lN0\hmE*&@Z?c(ANI@EC4+b\0jd3ID^%M:VS:-Furu%'pn>k)7IsU)+&I#ldP1#d(5LNsQJ4/0M[r$rOV_^L-!OBJZ^:@lIsSnZ-Rfa>&[&N#2RTm>+Nhi15usfN1([B10#V%(\n6\\:7=9Iid`SF:e@9AA!=#Kn]Q'ageuD/7^;DBX&]f%qisN"L_Xmmr'@A2rbhSG[$`3N,HrJ#go].fg6Z=;ha0O5:4I3)X`"4%(>V]1$JAsgN:XLAfS<?"o+"&!R&]eQ9gk_mDrEGdY_QCX:"=l_5^*p2aTdQmSR_(;WCKdr6D8fCR8'^&#LFYDkW?*$-?3n<kn.jb%R2.3@*n[E$5,bRXlW`*%<EHH^(MVU)]#Ij>oEjf!*_?Z42r'u;^(+0he@2c!9hNH"iZ6pskI5JuQ?2NAbCV.e[uqLSo*kuWf]*Z5%j-S[^2*FUZ(EZeA1e`@*d]SbO5GTO"Q0.=h'VRMG:ESKR'fF<-Rm:GP7SIA*`st)kZgPoeS3Y#/WW]nr3ZrHNqn5G"/BReM;[Ag[%Qdd0OhVT?m&UJW(h<'gtId(31^HP3O/Y13Hr)\/S>s5j8Fg$d<dYmJ!r@);*R6a?gGX=o0/3_>RT1<Vb[$[dtFFuE!(?@#i*-@GG%?gts-qe0bX.bZ1I5VFiF=N_A,iGINRqp1V)Xec<hDI0$i=DrY]j71)AD;iM$JPH@82F:\3"MM=hW6jU!cKg0jfV\*>9LMB!!38N"%DI>62d2CR/\OtF48RN76g0#@D--bE*Jp>n6V.:79P[C;$a+O!)b$6)_lb$-H'r8VL`[b+UD+\E/$<WG^2Bo%I8RZ7qUGALW\tJ5J%$:b*\A@a^1;J--*`#E?ln`udlYC/krVG6^aP3/9$[YYV%=#-2qh/+aSbp6T8cDsdkPV#+&#GL1bn@.0$5aWJ)*n`,`arK/j!)'1W%-cgJ>X;;N]J;'Fc$'\3EocXu,0GA[p6<;p60c5t\F9ZEXVtbCp3Ero3[oY,4SR)2WdY!0%`7D9VJ\H0l62&YYgjPc36QQ1^oRSh9%$g!EdI6aNi;Fj'X0,+Um9u,!F>I`R"KBL[7i&CGZ.8[A=)*+W^07D2kp@5mV'-BJYhnkc,<LX,VS>R"T8aWX>LO.ELV.2I$L"_NU%?uY!ldq5?KV1lBtr-Q59bmqF%Oh1tmAf2pk-8$.m*mYO(@\NA2QNq8Fk9idL\R),Ei$)q^iLg9nfS<-C"Xgh&Ht3)R,qWr'Us!b`%l^#L=6M8ia[O0@!n^h/S=E^GsH;m*ch#RZA][1C]9Vn4;!"aJI?c"Wlg'RE.<8'f,m%h]X+dGO#oM'"n&O)<-X[I,P_:9>BCfh<=%8]f&u@epu1:93"uJ>:c5H<)&IgoaA8U,(-9=^8#nNFl#_/XZPP%(_$IN"cbX?"D4b6:@)crOq)D.[ZFQ%=tNM>kh>Xm'Y3d6tnpf%\0>`#ka-uaB8PU3cj%Uh`.ZLCA+O7j.FcXp;;B14lVmcG@O='PmB*J[Wa&6:LhbBW_)^1E<3]5spWag>`@c>K_(mAJgsA+[rE%JP%hi_%,ZnG#*&0bd3Oi:3<P&Y5IVIL)3B,riTgG)Xb[R."u8R5Y]W#N($TdVJfpSA#1ZATZOh.`7q4C&jDK/j/ADQjbJ&I*S62u[ZK%^,0n(r.LX8lJ*U/FgJ@mUfl7kTsb`Yie?4-S32Tu!p,,,![M*1+`uJ:YqP<0,l]IRW*/2;BcOO$))U^VSKm+R[=qtM4kb8UB"O)9%*_DQZ,n7)k$Wp+$H-Qt3ZT?u3Ul^\#GZPcQ8(J5`q!G^hZHj(GZ`AH0WBVQl@ts?X4hmb_Q*l4J?(4JAA*B<7$*DR;ZiUMt)%rr#%VrCt:g194D4k4SsAP$pU>S\#?G@/Ke-=mZ+:n0qdEa-pb-,:c^4KpnmS5-dVo'6ip:sh)!N.MNl0trMfcre"m:DcM_q.s`tg0#\T%aD,=j<I8[Q<C]YMA;h5s<8F7qS-r+6IB#*5H%0UQPAIK*'j>\pNo_7Wc8m"G?;+ubL)W%UAKVFHB,dPV9drj479I_8H=hA5;g,\!%O2X(i7DFh9<?KE7g2Aj<mo('aj"ME]c\JB#aX;@8INW%kjHkRZW&(l=U&/^VFQ?M^].]^c,l#f_g[5,FekEaZCd#h&[S5%A600%K%*]m>)?1LB,F1RE/Bo0Q38mCh5N4LQMrh/+.U6?7nU>I$tjQkp=!H*i:XqVjJhm.9WoOV[[0-.jL5jYju3qLC>"I2`g$]\4)X17gr%c51Bd/"cDiah'u"Kbgl98NpA6D0c]V:ne4,8jMTiWDQs37PLbfZ`P$[>_3JgD7hj?9&tqm2;D=#39VYFg`G-$L1,ii18g<hl9unu%[Ae4bDUkV^FDObH"BuhqI7#K\PU6`+=&4FiX9m[Gis(96)53I8LI0_,F6qu6Vl]:,>1Wtt\R0,cLa#Or+-3cOM$!&;W@^WK4h9u'%b:RBbQDbR0FC^M>TOq]=X=2Vb$]iICb,P0Q,>&IS75KIrbVV2u<2kC\p9:i,dhG'o2C%'<`J??QVQM#IaL[6d'IXo_mbDdl2Li<\%m-j!YnrkM9CU-tO>UIp15A`k2$@)O70W/4@gkD$kRq)^lXu'E;[B!+2SI:DQeWAL)"Q!7d\kq++9.[I+C_)i_lAM,YA?Tm>OFI0.%Uiq$r81VJ(lh+K+i1$oe64@;a8*ehU"C%YqlmZ4)!-lIE4XR*j6<<Y5G-![!I&q[V=k)Z:NPq8dJ="gcQnm0]RXu)jDNj@MTlb&V%LM&r-S&I0.eqH^2USd`f;SQ2l/!8IX/'es?aFW:BWNp!6Q9b*mE5=l[3i9FF;9K5h]1#(?p&uu'fsE^XL^!4(NcskJeS+@/echXr%7K5p4l&CT.[4ps8Ycg3^>e<h*)2b0*iJnpC=P=P4ZWe6dUrkG@gfR_H<naINUul,t$`PRef0D<<_kN6$!"4i]^R[tVO_@lslU1"&%Fe,?UW?<"Z*=L%&c<h3<Eh!Ch=O`Cfo0?_+&"uGTD:bT_O.Qfn]Qcs'%"h!-N\tl9@Ju)=5g?>pm3I#kO+U#s2]ca,J)Rrc<!A`/%0fiU;b)ok3`A-H4XPleGM5=+>A\T4&XAQ&u1*;-UX971EFF9*AQ%nB4(oJhk;CbnrVls:*C7aU]r_b[W6PdGmUM)DZ[NGVp.<-\q%A!N1d9>18L?a!eh"l=4CjN-UX'-eRa""LV`n&*.T-+.P:Hs/A0-'L!N665PEJ1C?bb#('-bM<E`VpT+d'jSgdIC^SMp"kE;hV61N%lK.-0L^3"hce!#.DV[n6:0mT;Xj>"Bkh4./Fd62ZE6$@fbu!/B%,)590Ltk-!.lBA(@Irlq\Ws^R%9oc^!fpWcUW'DbH;jdSWq.u%boNfdMm_*kXdWMqH6l9>&idLf=7n&K43actGG<AdgKM>D5q@%K/J>M5*X@+->$Ci[l%SQHXGk1lUU'/ma0I6W;u:B6pVAp496;pN%T&qqU]tRToZf\cAm_O8KH^DKP]l<9!Kr?(oppYoneIXA4*8@RUQjde#PXq=tJWD?Z=".b#69;djXQV)),;Ti[pWhc<D!T@.4+oDd%&>l9WdsVqn!&Vl)9+mslRHVhor2r:k5%Q=H4A-CbYs(O<[RIZ9qM<CJ4]_%nUN"ss)'HDj:=_%gi,nWfM+Q(F<e:ek5p_W!cCk75%N;PG"lbh)!73T2m.j+Hbq$Kt.Y$.U\`]-'Gi@T`fZ%_/UAm%@/O$Njt7m8ErM)>^Yl=C6Z6jHh:K%(U//Fm54l$02lKOe[$=`+BX%n62AHq?be_D)s'D!4Z$Rq>oe=L91ZC$@]7_)_6rJHSAd?54r'FGikn4h[g0Cm4=Vn+RYInXK.0m6N(;-jL.UPOeRQX5gZW;,Q(0V%gO[]`]S+q#D5E5WC>k%8o7Drt+Xu5a5uTYF3CtA"g>o()U@0\hWQ,BjFf1JFQuZLjV,I`+/R:TU5'C4!6:P17j>TE:XG#&b';"kN%=drOTW2Ad-C+`m_W*UhrD)T3orL<e60##%DW_g9D`<LM'00S'1FF\2YPTkN!N6f(\*aC;^.miWtO3]BDi?-MeqlTkA2*IZkH12DM%QPA9Bo136crY6_Dl5fsfa@5/EO+RtOD-B/A%$I2L1(MgsZZ,Xg:uV.HRU$X'VmOaZKU(sRiSu7?6,<.LbUVl'KDO]_Gr"ZVmsXN,%7KP3@Oe6]/Ap%IFA)?_cE8!tRSb7P=\[:YF190D-lAn6OXB">mY5MjZCAs8*8^FA(Kn+71i3ZEd?.%Y<+(28oE>e:%!jOffS7f\.%lc;;J"a:aFHfm77!$LCSmOeGj@4fn(mR9p[mSmQ#87ND0(M*^+O=b0b9f/jrET"QKj$kS9."[7(2oJJ_;a!r\>[3bUUklmW$7G7X%;E3ab?N$Rdq#)AA`E+Ybep2U4!M=\0$,I,LH@4(^LMG<rbfVI<BZ)uFIN1j%AnIm"UVkb7?M\!Y]a:K5,])aVTQDZ[3"?Nm&T:n6%ES@WkHa!9*Ph;i#($3o&VCJ<f2;C,OkWX+g.k"4e%Or#..],HOL\R[bR/sLLrH>9UA_u-,.a_`Nd1<#3G@=/Crl`/6cd?YY.;D>j%`PY`.897:Y>I=kH3a_L&q-eSOb(-L/PSPmH3VpXX&R0#X-_"ro8O[&$[ZP,Ih\MGFog#C+g([Hu=*'g@*7$g0LTY_4\-f;N(7q9&%1Yd.L=72.&E:fqe47X6C%SLnN!Gn*Pg$@K]3`P>XQfCC!&U(m%<,K+e3<&m.1I?5Rd@rao\o8aL>@FFIB/FIHJ%ZfU$6rjkMQHU@%.m.ZsL.^WD^A`="&k05g_Kk):_l)@`a=`;7>EHfP$WUDBFn<E8ifL!=*"h\m@Y@)c;[HhH4Jdc=JHFPffe+m2\ajraZo4s?`B\E#%9f.HWHU`8>1:=-r6XV7u3*:q>\/@&lMZDS//.J:hI@;Pb-T#/@TM"T*^rrOl9`Hu&HjWmU\i*ik!8B1(6"VH@2Kgt0!tuS:N0nTs%k.Bd?2NbL]0);KA\?XII=8[6r!tK5ej)[J+G$XW7hn?Tc0(#FI!3!#blWA/c)629kKt$3TaTQ7)))F1U'$3AGo.)::XOPH?P;(eL%3Zo-mKXE3<e4*V4o3r/K&%A4Ql_L[6RS+XG/1V*E;X;O!cC0B"FAB8O;)cQ]OG)`o>GqEtLa8e)5`!umi%=91LHC*V*F-l>&GFs$%9bY[,LtW8oeRd;[("-q:AQLmk\>BGR\8rAe]rX>GA8)+Mn2m_'k%e<2C^8lGEkt]jZF*i>7;5_fEm!%+WR\pT@JB`6PqOkgLY:ja%ES8("qb0O\;GX!/aJ>C.+-VNg)333c_!C,MC=2It6pd6'M1AnK_J3-4,[Y.QfJ0J?.8W9d=urML1J%<TI]5(;C^P@&da=S!g^m"h%#V=4+lZf$I'6o18>cruVEO4TiEW$CqB/ZR_rdGd5Q6,)!Wk'j45DQ:D[Sc'@.S3)317D.<elW!R5+Cu`NF?YgUrs[cPtDI>8rbj(%`a=K1Gs<h3+4_DZPX*]So0@X8<5f4(^!'T8R+YteY76S#=296TG\jP'FlK[:IS(]lesFq\hh-*`hk'A&CNY74=!82J4\rUIV^Js^%>o##[RYHAr(H[=,:iof)CIPL,<N\[<\r)dJ+m[8O`igI^A?oj7FA"*E#Eke[qJG:4ehg1D.'&0]`eA.E%;QUAc186V?C$pG04Sa*%Nm[0nNK?p4@Y^=*op$^=2>iO/9]S:ef9RKm/ULUNX6_PV%k0uM\V0'$B@n*Xo52`>PcTjFHH&&_h/G[*lmkOdA?WhY=;bHfUd$T^%pTq;(C'ilE^s&!j(Usdo0A1`)X16h>fREMP!b5Mbr\fA.Lsd^T"H<?H.g([=M>db3K?9ku?kr5$5iu6Z!07?DVJ!MshOF<U<SWa^%3H9!]D!BuW#jGZHVTQU[H-]I.f:$V*.o7^jf_9uEaH5A=gLG:nQW9NspM-b3i7$gB772Y7adP9`D'#NQ4A&TZqZ7jWG8[h2mFLh'%ck$RWo'H+t0pI^F[XHZ@(Y)^p%iq"p2(8FD!bar(RQp^&5Gdu==gB$n+0Q]F35%0,<bKau^3,Bpe\MU&p",`Zn]_W*Pf-.jfZH`@%pjtLB#TmZHC!Ouuc.AAS09R"`A"(]lC9#%j#a9;hOn;Ha?P<."\If15;<AjuoGWB,@m^/<@Qqg#B3\'.)r!Z\^&pd0)I!4J_=FFX%FeM!Xa7%b:;7%m5RG:rOE9$42&iCAD"lnN1h4#Z')TZ1klH7+#ZNC'T9GG\W4SPr/BM`0o71YT2fg[*Y94OMD#ff+o<q%VF7VlHg%+Ta/=6oD/uTFVJ]KI)`89J-1:E*,>90t;.,2!&phkr*e7!B$(EZC!!#2rg#nq#NnSn"R>_XPU#b+P0=mA2R.p0)Fg?M$i:P7[aZT%!hCB#E($<kf_.AJ$4)Xok&oiDJ4t9ab"X>XL+K*,>K-@=fY!X$2Y.%N]Kptpq@/Y&Rb#OrZsNg`(m6>Z'c;d]0M\^W,5cjfE<n2(%X=.)7cO$YPmsntdd(K>V[$XT6Y*7^Sh!!j8RGe>qW,CO`0l^39U2E6g<l$0d6]%:eB]l$gP`M6u,q$$@&;\S2-"g)j[CQ-;17?@d%$@UrWo.7;P!<-2dIDSj&ls]Zkl-/JIF98O_JoHZfLX4"d"$6R(_/Q$.eTEsTa=J<$(+R]A\LR(P\tpSN6kQPn0\)B%D#[@ETWm$E%@F3R'L1kL@28,S`mTAPf(e;@YLD42tAg!3c(p*J'ramu!MSqWIL/K65\XKI.&D>sa&^!t'9pB#pU-d!dZq82ZhuYD*R:'J]&=GK%%q(upt78OS<e)_>Fjm.jMAjmjq_O0(gf[*T2L-%IVWKZ^=7LM;Ar1s:tM"W7u=^^R;Pcf.4N)bk1>S?o.`bm#-G+%'XE^1A#Gb4DQ%pgrHsi,N\tBe)LV+K<.U.0HphLd;qG:&m?Ikgf[S@M]*G'5dS0%m0iCaBq"A[t0)+k&?>%Gj-BU'V`oPN_C[p)1:l$J8)m#1$2[Z%-IC#)*>h\cCE!M\f2[;YC!EsELEnE`rLn(5:]s*3Di4hs:JL7+be)T=6u`QnE#h`GfdL&b*2OpN>)T<FLu7;H]`qmUOB!CXN^HkI%haUB,'0hq[-""K(@C5JU`.[.)?,2oE5&1j1UFRB.l(V6S;=(Q,Yd%&BAg?<h,SFRMd6+-G4$1NU>Ur^S#,GsE=)en4)Y<[Z4LKLn%?=nsuY>mZ,"E')^kX"E).`H4[j9nF>pmQ;/r@fk7:uR4&c6n4WNQmWO:*aMY!GSs2,Kgp9_>m&m%uf%K>qMn?#SX>N>V).Vn?b.B%?3.^1fL+B&<=F%=@lH^6VP.Q(D:`,:HETVC*U`F`G2h>gl[9^+nejZq:5_"q)BWD0Q+miKpbs.5l*25F*ic'4'gfE="hFO'pH^>t%d!B)ukmuD#`X0NcKE,tnk"$36dd4nS%epT7X]__@%;!6Rc]RR[3]QL;,7oriTl`^a=o0lu@2(H?K!#IC!6U@\_2:G2+d>=:e`:UH%SA85ZH&%5U@J8a)^!,LeLA?Ep:@ZTNWSH:q/\Z7OT<3g<]O2g=oO]#\Yg`uPLm2V;V,+;h(1(HA1"/(Als$"DWL28F_?9S&R"`0`%f.F'[+r44!7L[(kONauSR((Q.!J,J93=RBA?Gh4]?IurK[$WTL_J]in"Su)i%VD:Q1Y\Hl5;YQ&6ol*Di8:&t/rs!,N5'TQeI`:(%3g]An4GKK'&,JZjFCe-V%6&]@ks[&1M1q.Cfnh7B7Kuo8UkN>J(,329d&(,lK-qHi5m_T,:-f[#WNtk-Y*&s[q;M2Pd;GNP+oRR'%A`0L>$ELN6UnFq$*SC!5]Q`O\o29i,e^FuODNa5+q>PIR';oi0hMDTl\I?Zp%/]/RKEg!"m[ct\J_>BLN!c^n<jVH\QY7#r>gE%(%NZGh@4/(QdWV0t(Sm>-qaL@tjA$Q2j6\W-m$FbnIjdIq8s6YqW-1LJIMV+%PN1@-Tj\)c'<WXjh=%d/ALPXU*-1g!;e,1LMHT<Wt%1r#A:;_N!Vjdp&.mFqXC[a'0>HK?TL!N*XZ>q.\\&9q&W(nMQ!+T[(Mgr*%u@7"OuC@BHNoXY?XjHXD>c[1lC@pof]p^r'd6`o<c%Gt#\E$DO1gf/If+$GmrR<B9?4<"8!R)^tIjB3ZV^gK2.PRGe3:Fg9K6HVC9G?,qtYNbB>t>8GPN:?BV@/aekGj$R]j@O<fbnlc_2%(d4G/.cuQ*'N+^D&b6d9[U8T0A,?)lodGm6_EZoE-cL)dphV:^]Ld.1MO(Peoe`l2Ei9:9'CslZ9'8;=^bp^-0+0H8R>MuHDo$np%9ktS>:"RZNcJ^V((V/,$>J#^"%PfZ@gGqr)qLQ":;S/KSb'ZF'5%u5<.s;CUk10KFc;meC24Hhu;7K9Tl^%4PcT!mN1<mS]PkIc*%:-(.bqr@gTK(9V_'!]!Y%Vu*cnuU@iAZ(Ar0Ee>>--BpS!#KV#LNm3K#:@9KW]V9(.?6$K`_25t7k0_GPY%b%j=3$!"I@l"jkNia%*laQ?a%#0PV5TVTo@tFoBIGC7MCj"7SFdJ_r&lqXf/UW]MZe@YRR*?^:G%1h-3(c9rI:XK2"nN@ET04Y?bjK.W'Y(;K"4Tgbds?p%=-e5Fo`1A`Y]VE%gIDh!5RALZ+7]aNc#Q$<2#YMYAXg?pL$;h)UVBs2LA\HG&B@]m(NX31[`b=r^(#O^rfDpO["Hoj(8:oZ<dGQC%nD7#U7Fn.U33klG9EI0r<.u:t)^m]p@a#^aZ;n_1q#le`[&$CIcj865+A(W1>5$/'6@c!hf*nCB>4kZ1q'[YEP2K,U*jQ[AXn^7J%o`>/JcF/7dJ2SAbdTIEeifl\r"sWI8r]K.A#D62mBe;4rDpbT$aA('JM'c"Sh6FFSqk,]?+\!RB-c=PS<p#fA]k(eSiD283qheK&%2CRG>Bp)I1p)%"D#6os.Y-7msk62A/csq^\rk53?7kmVf/[!M'\hICE<0h<_Y4;k'!&J?L$=$84bC#3*g_3E>6eI5gKV['U:uY[(%)IH/O/U2[5Y\&SDeda3(:'/O";Z@":^]"N@Vb1F0JU%,>)S1!G,;,)["i:_+3`'NFc>\W;aLGB!M*s*1btNht!.;ZU(@V<Uh&U<V%$FgdT9qX'lDe,/g,]s^916d<O0"BEHnHo?k9"+nKg'Ypt&c1a),[6;/8-:$d9?:R.NEfa(ak2pcm*,?,<,cX@ri1ZSf>'M2K:]pB%CQcM;[9+-$;fmrsYR1ChoA_9ac[_I6]^(@phg>],*bpS$T7p#Jb$W$s6_8cQE3W2*HCD"/4b,-b0.@H1F;P^2>N6"0lP0rgMHRjt%Tb(/]&VS,"=_+BbdG'l?.SD<%Td$Xt/D0<@W)o"N6Ji[fI0&&24/U+^62Om-XbGo76-B8H^R\4;FK8)958n!]@,G*do-ja,37%B"%Kd_/9<H;g&$'4%^+H_>U1S_\b/;TJi-)$Le(LP%>ah=8r^uKLZ1o@91G."PRG>["L4EW(*9A5FnGUX#D^sIeWMru!P\psL3b\B'?%Kk]!sCpQpb^OIiFjp=bqT>P4E>b9:9To`%p:%e<7aPJs,$r6^!]q,=NER.->:_cMu%J;XN$Uss[0dpRJpX4^-!HN[sG/ea?M!fP5%#Vf[g?_HF+0,%u`XLH<U;pRY&*%ZqG3+#o:=C9FK;b@1.$&%c+`CU$!22A2!Kup;tRUBY/,u3XQDumSfcsX0*A"c\/KsR_rfat#b%T9!hFV'bAHGEIEHbR%nqian#hSCjf:ak>#O@;L=3ZBJhrW!>$$B9M7=PR%T<'+U6'3H.TbJF_`;\*3A4LQF!gOP2e$KY/%.-09PL%l9#e.H\uPJ\V=E*(M-rLh2A:$ok84.kQulo:+iMd1/GalT4TL!n/8Oecrb9?W;$F7(:>'*I\9bMHXW'W:Dng#+OWHH@7l8Y=AhbR%iLts0+fYYjGVaKLJHl>.$4+>m&NE5"O.nUt\r0')MdiorF_F9QZ(Ib3mQQ=gT2AQSTttf-:HG/Z.RSkM%*]COa)e?.gn/M3M!hH1%K^_TA!q3TA\IJ>6a&bY#LXe@>e&i`X+Wdj=!H\d6cC2`e-"[pf848.pa^(<c%qG!^_S[4TCPWom77cK_]qejlPb"bY&_+48W-0sc%"Q;UF<MbL<U8Et?lQN?K:fVgH.3r:#ruskE:_NZ3E!^ANf\EI*ZK<94=G;e3@DK'#i,QQ]#eHX;IF`l("ZjiKH:KPN=]G4\(7rMt%<GLt%Mt#,&rgZXH<<aE7N#r3K:HtWP'V3p%$8H<UDc)+db,W>6ii!(%"maT^%B'C^J;Um%ed=f4-WM^rLN.Yo]^'qIUjBa;LEmM4%f3$$gd;@Z&KOG#@D`aie]1IEq=5j'e8@Yn^2?REe6eNB#.SFj#<(1dEdSW8<CsjV>eH7(po45t=_t'9c8gM5/`kkVr]%nW`!ad_3%*78FTH)\I=-;:eNA8e0d=@j!0YQf*"Kns/A%a.lbGh)8Q>O&>qi[U[],Y3GH:5u@*nA\IDhGI7t!/62qWs7D7=nE%Ae[^=;L"d5`%?BMJoFhC:=Z76Fqf"D0,Ya@o0]i51u8KW\R[9jTs[4F&j*!ch"$B_fWZ;H.1OqFoT11Qh`ZK!*[Z%oPr.PK+RWkM;NT=6sOrp$,j%SjHu'PJ."/%2KP'X,jH=86$Yc](=^P&+R+&^1mq8Y!J=B@Q2g`")YSd>U\g*>_YSQ.^4<sbkp(\CT6[?O<H(=]<qLr\P(,*+)fn^%5<c*`gNiQFADIn9cdt(S2R@?'B$#6H'caW6>Z"/9!0Sr)-0OP[!ej;eLX3NoLI_R;M'[Z>k7[;5mCWl4,pS*)I'hQ<*A[!72XEiI%&"60Wp0dmr0YA6FPY5/\Q?>+42[_gL-LTQ#WW?9%?X*!)C>"b]#CaMf#O_eo)E4m7DekXY'bjo7)H',Z&qO,G&sR#EO\$>bHgU?j%[eB64)@l2af@oP%O80W6N+Xmu6:X#10P?[,Jr_gESHH%.$ZlPu<mlF*l<j8V2L-\W\Vo[(F-9DjKoT`i6rAbaD@E,A;QN830%Yn8%>EVC3b;fC^[kAecci39tO;K'MVh0HICVB9qk)'\,mmAfu>aGK?larP@V]pX>X9-c!d]$o:*_#X-ltCa6OJSYZ(1`&CIo$n4hRX;B%KsmBm779aJkr'HC#[c@>dmRtDnX.F^bu0M/g0/'7%?noi\"1b%+JTF75kWS\X&DIpMV#2"SCrO?4fD>O-<"P>Uc1E#e04"8(rTM>%\8<*HFu%26#`sHS-:d?(\W;dt<U(l#S]4A1<tK0jmk#4$Z(rG%4DImUrg7MqHe0NgZ'+V6\N/r*6GKdh&rG9kCLL_*/DEtJJ0)T;%%nb*^<7!kCao9-;-UaA_ZT6ZjA'3GShLIlb+fGC=/rC39o^7[?(E?Gks.h\[IL"XBdQ+qBr.8l%!8LKg[K+q#>3(-dQ$[+@YCIi&%-?bO"FI84W^HkhIL#X`)`/92')_\1`[gK!$egZ!8$KO9$)XM0Q<03%";ouI?@n$'X^SXZ>KO#F&_3,$l%qe)8;NP:^7=[Kk9,"mp%"'QJ-)Oh.D+pG3r$s*,t8Q#"IG3eh\Wd]oFRkRQ[&](i*=o;$#nXA&T]-m06@eur.QkPj?RV:ctAPj+ROuc_^"n<%#C<R>8"jIbq%VA",ppTDbRDW'>bS4`".<8&FfD[Km86eqZ[h+@jT=3WtM[cpNRg#B8`$GS"ekMrr:,0C1Pd/3GmaWnXg/jjiM5VJ)GCX]&FX]3i3%hirN57jsV?);H8rY'McVN^!HuSRnBmWEeNT[g2#\5'o.<J9b`V'k+@Pdi%f*PW5N;kHd'3$Bfcg3DN4E2DH-52cBWbVi6Gi4"sRR%JgM+ai);LZ<Oe*sbS,:mTsC/H!;F8sE,&$?+_cT>+%/"uSJeGl:b::'U.fjt2QBQ42O@)ND:R(IN$plM<RaaS)LiQtQ"_*t7nfDq%):u-n7pE)=)-++0dR7*>boXdl9Wj9b#:=RB"A3/p_>Z.5$ObBRYRDk7[0.&<`=lJI2'n(%?K:-#,p?C_VY62q\W#e-h*YN`qSO"g%^`MpGirnuM>`tT-`'&!M\Tih))Bk`c<1Cn/\n!HtFFdYcp?Hkc7>A/q.!Nfdms7NEd2>O*`C0!BON>MU1't:#X<?UmQC$^[MJOBc%0L/QsAp^0j_eZ!g=fWY6-GZ?m![5_6dSGG^9n"il+S:V,rF;^4ot.hXL'*3Q-$Ve\^dk7VVCN`/?U1Lr#K#.!<&[LGj[)1/]B"rr%riC85`6$4LNNMI%.Pf4SSM5"%!F3'TQF]#c"4$JC!6>dHloih'^_0]nXCf"&F@]-5_=Z6dDln.G-j$'sWF!d$U8cbMF%NHYC0;q9%8K]WDn5L[=Tntib>#%gFSP95!0_Ur.C^$RP9jRE>/2GjJ$$"257%dTWK;U?ur$p2Rh-DjK/#L[K]O>EEq.1h7!gm*3Y>rrobVL,P%igW]IU#PeWV0udPIS'%:oN:Sb0pN]F)jbu[ke,_qLS:BBK\OItWeDI^#?Z0(>uJ7S\[u;0k@f4u#+$%@d)%_>:j@b06D7AV;G.O>%\COrH,<qMi*E/:)<X3!9*g9L[*AtDMQ"7B'o[1(a^c7*6I\V3&DPT,X$2<'$_uS8%O3=S!EgtHI<tkA1Oc.P_TZS$-YP(<q*l,9]%ei"nH:RGa#TjnV.WNH'Z?(onOaPjR^-@D1/=ejr+"sfXHqeHckVQ3b'NH:hG]^4b#RHg?HUg]uuC3Y&#T2S<6+tB$SY7pAsV4sNA%&?;XuI$)<Q[R`$amS6$1n5FCHO34_U[q%R#NHL@(#Y%EVBgmXNJ5Zt]nZd,.9[*AEN<X?*.k<q[X;3&sg@Un&AR`U-W#U@DAnh*M%/!Dq1g5JTQcK,o$EE%Vb]NIl'O).Qsc?[tfos^B:!0#<`j=EB^4n3<ARcja-.@GiQ'es(4-l"GkMFs-Bi&,i&oq547\keU]"R9>_%diSK4[/eU>ZFmiREMU?pHI%R&[/`KN)j(f!2iLM"aB`gCQ0VJsd1E"&+67bh2C^G4`fQ<[$kc4G^treZ.^7t$k&S;0#WWXPHB-O[%@-CDiJ66_Z())&@0tkpH!0c.6(jH$j$<%-ok`i*qa@#9o;$`Z6HKa?[b@sVY;,6^^i1BM1fqme+6V;7>(RB4(2.i2j]UO_3hO;d_%-B$I@jeA_uB/*o6;@Om:Q)fZR>%3!>>)&FNPD1C8]O#[rHT=DT7l(@)/M.D;)aj?\Rq'HqQcEn8j5I7s,";p=Q0I>mh*BZ$oj]8c%!Q==VDf3`/VSUnuoQD'1a1RB4LC+?Z;+eG:SLtH(SPcQF*5"Me]_qtmkr6m$5O%m0*+EjT""U0kP^I8V-t2B/DjP6<NYm3J/nbP7%d?gTVZMMTP8p?uSp[=-WPQ]$?FPp6@4<I'*N8Ae=g(o_g-Sd_K*I>nURWmgbBb;ll?LK*YqcO5D]1^b720[=]`A!+mA)9eR_K4W!%2./D[&i5!)TnQBi+(d;+^RZ=+ju^$8$W"ofJI%YW\UN`L<M?i:):uX:$ZRn)^>%WC$hTE%^W7n5hG>nf`6TM/FJNej2k-2XACj-G%Y,!O^98`Fk`?i?+HK#+/-?-84+1Zbd\R8:$\+U?UquVu^[</brTZG+o-YCf;Bf+?#Ruq[H>U\Z'D=6Q@7g]?aZ<#50C>tuKj0K+(%(bF*POKKZ'jM$C;-$g6fNnbWu.Lql=W=RU'dI4_])-Xhs5Sq)uRct#M7+\BRGIu[Tmq-!WY%NO1M0%dcR%W['1S+Bi=l;*c7$5/,%X013bG7N4,>2a/WWi)bQ_DZ3I[C+/B6"]d$)O$(<P!CjhoWmg#_74]lhpdX[Br#8=EjM'*X^$'Dmg/8cl.]W'^_0tjkh4o$!8L8\%gfB1PNW%+#4?CaqN;Z>8%_IJPr(^LkoQASH>sh],\[I@kmZK!1(V6?02U8Z7L`LL*!p_D@LQEc_$V9[gMh3H4B*Y*o4HF4I^%i.e%^V9P2a%L9`#Q+.O$2r*$,*ZA[L_9CU)^$\BbY('<KG*Ap,].mO'*MPoFli!-Q!jBDd8ZFG=I[[*_[@R0Y:pOpm`u@G_9VhD&Q<=j%$H?-+VJg),ENQAkrj$6s-VgH',q-SS:[M9KGU#iW.I,BA[$r0&RkY2-&Xclb=T&5&3Q.44euZ7&dle3ESV4-.6&_dOM)H@m('6Qo%!aXQ)62aEG8T?=HrBs\7;845`e>6qiq4(4EXECsIX`5^@dXX$ROs=uURbDn]7a_b:39?Ws(Vk:5NKbE$bi5mjinQAr%%M"@PENA+%g&k#c(U*BKIB5,fTcX[8:C1H.[Rq%PJ=q-c#X_UXUoMK\+a7KrL^$=+AP?-MR!$5h5tedJ<TIbHJ2=;<5=&qrPI6jN3V%_M#?.ES%6H)hHDL2&6,^"Dr.+ll.G*l""##$[_fXl&f0kQOl4h&sFp2GRrSBT<R\!:?ld)(OE(XO%MEL-$W?TIb>ESMlYWNp2>lA>*Mc:ns-%"h;qsR=#ZUG#9U=H*mgBOO%V`0[b=#df>qZi<FQHqJ\::k$`NH&(8snDjU'W-I41>k94jK`=%G+5d4+@p\7Z9P<&8q"pp3PnYC(*%A(=c,bUE0Pki9n2_G@O=_DF+4R:^"?LIQUF9ZH)b_QkstMHVqBHm9_^TV4e^.g*GH!&dMd`QB0G[2SO<?D*+:p(]`&eoOr1l00?$%8$28?RRRLN,@LYn1id"i1_21reu'=Uf,MMX1UE=(?(mSmA'FEbWe58n%_SuHJP$@+,S0Qs1Z;<_]lO5EE=`^2R=n'a$uf=.Bie\"%PuBsL3>.s4K"/+d*c[GRVTpa[0$]rC9*cH.fhO/u>8kQZXClC6,u\K(pZ>,_r!s;rXFCd2,"c!lOiG"G(Ph<(,iZjQS"(h,ZaAYI%SPljF`_;eP@M>irbg7*`B)':[h.k.kVpt&(:R]AVUH6fmGsRm(Q'3+m%PlQa)C!XkI22FUVOt&Df](Ci&S"hFYYCm1VX+KP>Q?di%@6iA=WqtCmiq:g2W4JD#g/aLSb2F#L+jFG<e4.769(VO6OC#`+m@F$!'S$r<#&8l?iq?S-4!"20)bEMdg<A3_+!U[ABp;h>%,hSL%gZl;a!\+]8i)U_K`ClH>W@pHKO"aRo;c+L]C.^AoMiP8p\#%\,KW]G<fa#mT'bde2`p[$3W=bcq#@u)YV6.BTbIOY8K+%D*`h8'J%`YCsqmG4RmhT9$I)Y.Dj"*`MLbJ@@<L)Y(a2+N%*BE;dCA?<]j+;E_"GsEH9Xokl=dN'9,Fo.NOjoDUeeF8*5q_g6.lj/(ERF@T^%`;BU6<nQmdKQ=gH]:.]3\"d"SpPomK5\?%A.9dL9Gh$tRC(u5*KM1F8Go2lugk^Bfghn'\$t?^u$f$=K_^NS.UER.rMj9Rh1gk..%hoo<S/..Gf&1t0H3'JlurdjEK)`6Tm0kD7nQpt%Xr76j;P7d\s5/a^%16>8j]ohOdVQSXq;Q&.:EHLAORRED\p)"=/<[`Mi-'i-+%CY?Z-/n<a,m]1Gj(@os/V/oc/,J#@RjZ$pii#]oE40:Kb/h$I%E&M2NQpB.P1d`=DNLt>)oBhmYQ=fbqNpQ)*U(3-1NV!X-(tIn.%*.jMf%sT9TUlpG^TXi;OI<.ooi[3a9+_gMCb5Iun8HiLNOYmQe/N=g(jj7mq;le840]B!=)O/BqW=FWOA%<b@T)f<AmZ*0'>$D8`%R@nZL%9&qcG^3Okm2BnflWiFNnR@<[Wj`0[6s?1=*h3YV#!IfX+]#4Qgp:<+K<kPhZ(/_&F6EE;Kj,`;DESY),o/SU\s!n%5B.>j%WWsP.F?KXl=uJ*T!gD+aR+[j:H.SK^rGK5UiH#8?%QCUkhX0=:5i5i('5DXTehB%,=;7$tiNEWG+$)(Ki@-f2(CdXG0]lWCjS./u%M[kod/5^`H:c6QGoqh<X#;+/X$r,".<?a)9(PHF@7Vsm#ij`..+$G;6!hW;1cCA`KFOJb03%2b;":D%JbQGR;S\UCG[Shl#i8T,\%P;'DXfJC0,[Dl8NrhSfK*C.H`!U`mJXAr:^^fud/0B6RqBb>!fAJtR60U-7N5G4>gDL<T]4ha%kD8nd*3'o[)R*5LoSrQ>.m>)eF%?="Ea6CgPZ.72RX\r/`a"C\D=IV,b^+%4g_h[5;4SW+=U6o-G_oo?lH4>,*=0,@Br7YjAWIfg:(GY>rL+V*6eGiMe+[d%B9Q$%bh%7Y2M9-WCA<V?]L'&T33/7mj=+)lefk[^>'%Z^dm@3hsd,Qr?7@^2AO#+8$@'\!bd5^o@po*m92:0<?Qm+S75$mkQZm+K7k+qR2W`%fYT%H#t4>"\X:3H&FX+URN`1r*u)FE%r/b/"q$T[Ge:Tt?i\f@PIFc)$8KSW&/QdQ3,(_)%)UI^MZkj0c05]N45mSaXRNl*&km:?%Fs]INrnCaXG#@n?R<UeSNbi;/=fO"W&1!ReNEB78*)fb,g-4LlOHHNcc,T]/':Z4grG(Wt3YX"15*^8<TcLbO?Xr4XH3H$]kq<e_%1nKI9*^D^pmh3H0c=f/KbCj;4N8jLt2iDcaIa3e?lCrt0S!t&9DIumeY+#S@7#Ni,>:WXP9ITCW(+'sil1@4N=Hr4oCV+Fn_81fh%0N=eRF];mpld-?baK7DW4,aB7>Sln(U.".^R@\;GAp08S@ehiV+,$]I[gs@`r-]MM[$WX911OuSQSs^=fJnjP1]1'hT,u#]s-V+s%e(OCW>Ym-l7pg-R_2kq5JebH.?X$2ci%[fTV,QXSa9^U)R+e]tZW<AaLl(b>XDMTYUiq$6%3p,%7T%Yf#SJ',TuM3sa9u$Ss(Ne8%:(A;3>h'2'XDRYf+"o"F?qD(J!-0<t::P^+;.2f!$P^qjQHlUZ2V5!kSuCL*W6*)kQ<u;3!;5p-.c6KI94WI1<Fm('\QSmR(P9"F%$u>T.M`^nlUZ>2oki%/gS&E4%Pms&l]t]bH&/@_qRcD:oTPp=mrO7<!2[nu^->6XR^W*+UkN_m%!t1D%^+1:5AVHH7&&4+D$P_1;%T6H$']k?Y*^0@B=#k7IFkWG+J%"G4n],1kYog,X:fVOOQ5J/Jsh6&D$#;(9O29eG:>rc9&%i3$4@L@MM!QhrZg$,GdX1M[,kAiDc%cl-__:D7n7TG:'\3=D.aJc`f?IHR]S9@tE(gtQ`)*R1)6mV7Q7/LYS`j^8`g3W8#tB,<2On_HF4$t-8!Cm<EV!fY;6H_/iW+X"lT%gN/"G9*82J\8,,&:?AiffUAH_h2><)=@Q,P?.[5AZKhk$hlSf]/_ETYq3KUB(KJRVX0Wp/&l.!j?3LI8,JWekVt'j/d`;lk$M!3@%+=):CYZ.%`3i?GeBRk/a$X]<RA&YC,.>&(F&2;gNVgG;<C`KpjO)G'iMI3FU[K6F^LoX,g;OaW]llgGG-8BDH7)0u5&tYtS;s%X0%HfZm96nNs:Uom1r#*MgUT:`Y=*<G0fd#%6O$u/^lf##K3UU!#ce=Jff.V\PVD-L<#8QB^]TV.BeEb8/4"bn`U(I=@_.2t*IXoq*$%;ButDks>\*fD!!c<WLhXMO`PP)`r>[a3,iUre2#MjI^k4+iKu"A+0L.CrB:E:N6`l\AO`;5Z3M!X6p)$SUSinACO0E'`/#8!*2jh%M-%5ZW+Sn-%ggJq[B7dt-5\\'YJ*rLMIU&gR9m4C_bOOs81,D#(-(l2>Z\TEVV62fLL,r@*Sh/BDCd'`a`S0NZb(fE%ER2)L*_Qd%!k@r8N4[(c&65CI;%kd=P%'+4bij>E,MY@l*:-08U"9\IHej&%V_QE'j9@<lbYu3dFb)FV-h_$)JKch_RLHEXdfbY!:3*G"X-W;+%?(E0nD20mkPsC^66G3DeFdZD`Ps#8KZ=W!=1r@j_\re/8!7k,%H:$49E';fWY9DQ6R3V5CZfasWP<mGG`QK+/UheXi`XeGI8a8VT%5L)dVDRX^JD;\EF8\GOij*;t$ZeHOFDoSt:hY32H:i9]cJ-X[Akoi`53)+VJ\6TYhbh6'=fV/t[jfh&8RI)&1VIYUeG,Ip^(4UX@%gtAl/F6OQUJn&.\Bk]Uq5^g)Bgn[SClc!YU\XAj/_AP4\.YAt!.oP6%B:anBAn9-Ps!&HsIY=/[3N^mYobf7\CI''hSu_P*%+K6K%c0:)Yki?Pl^Wq_#)(k>$9i;?[Y+4.h2q=`[AQHEHGXt-ZmA%YO@GB'H4@7m0o#mF'kjJ#2XR^^ZDMX*,P?Kat`Q)#RC59U(5i"*e%Vb@VU%hg+snqq*[6snB`S2(Hp5BOZpQ%Cl=c$>55+b;^s8G/@\I&[?oSdT20m^HKCQ*.2qD`20Dj"IG9:VN#HMX1G5N32G)S'Ggp%AP71f'[RQ#+!o-<f7\-f)^ej7<mu5kEAZ>@eds8+-o1XKkGb6E*,f4kKP?M4q15f,f!lPI;p7bf5Ds%k^&jdR@&\3Y8fZ`5ThH&T%8)8&7#Q;ZVY"IR*\r024ZV*ZUq0IZ$(J>Q'YE+t^[V(o\OV_d-lWIP-c.#6NZ>ZllYS2Hc7^fV^JE?C)UC`[s\Jq0p%0'`,iKB3C%+27g$rfc5YNm+6'_Z2jW<STZloip/]q!hP+qUHH^Ul>hJA_u<2m+^dmge3)0.tp^=-rS)'B:b7%2UfbJ30`i3d9gg$k=o@Q>_Ga4%LLI-I1[f8$\+_9E28=Y63qS`R-B_TF3#_UU]N9,@i&hpiT(EnO>+V[u*@G0*EAntQGI=?A*L/Pc;RPq1;0;6?;'W;J<!sN<hUH+0%!n#$6?e&#DSYr+Kp:Ju?iN03:osb#Kr(4YKoP0'D5\Nm<FJ"bLEQAS@osQ&PWBt5"3A!B^".=(PHF[s45]#BA%0OK$T,fJgRA+=D%'i,4@EAY];'[O[X^ZN.jk?EnQ,\T61RPjGKc]NHr9ZJfXP&7X`/5EX.[R3JVFsiet@g*%RV@qF"*A4YLU$pbicK6)-EW%)+gJk?Y%Z&%8]WgY`$HNug9^U(*Gb_A;=J64**GkOsrde\k@`cIdQ;,&0'j=Zpn@I0="%k]k:/&?_NiNi_q'!L&InLE2=0,T><3)j`e65_7&%hCt4X4[L=':E%1q8G53B9%efb5f]3-Tr\05^\f)@leR'kHj-n`jm8%P5W)65SK)n,1MGLq:r?[1ED=Q;G6!/(UgptuC?R+p;/eiq%e$uMYj^a'n!):B^gmWK>-$RILZ.-kr>A]rXMkjpDG\Q352RJ+OGYXDJTXiGkq*`2LOW+ifrFo,+X(63gO)rG0Sr?pp(Y[p:)b0r6%k@>*=+NnJ3B[ie(a;r0qAq%Kk>JJHoW")b@BE]$3ID4P+B"]$?@N0hAMtLPhC(6_#1c-na[QR\1;Wos.S3D(OJqM"P/Hbn7ZsX\6%8I.=fkT3Oj/.*<BGa^!`C]idGcQ%$gTi6HO@Eg6c37#^e4-O`CN0IJkS4`j^'DXYEOf'Z*17C&fG\/JjFFmb]-*V^`#?jGe:%`c%%6Ooa!,5_?uU*lC)IPfL&IW;uI$51BLbGCLMm#+R23TPB1EfsAdD>LI:;-/-Ih-#=H\)2b5[ge_XauB`]afIB;UQ<r+l$Dj@TAFWd%"uK`Vb;[NafAKZH=_=c)!XaP8m'PORYkF`I;Srg6'1>oNH;_EVberDd+X!cTPK$n6F,qeEW^#$]12,:dFRC[hQKSTT]p&G3j&bP8%j05rnPC"TsC#Fu@R:tXKRb&N<U]kq4r,%QZ-@O+>5:,$GX-RXIm[Dlb5rG:,<9(L"UbD;bTtR.*##CD8ZJsWaaGg2BLo^tKI&N<V%^FUK$nD6E,-&TLV')jN[;?@<LFm`\NX/b6:du%N/3/"i9,+$qZ&eX%c@Ur[%/41;ECJ,iuSH>mX5.jA85(m\Jj[lj&5o&5kVR*6D%LD9Y==]uftA<DI&1(5,u0<IA0[dm61VTfX,600:8We!Hh4SNkt!&(?1.4iQLMFGse+<2n)7=EAjM1:cCP^t;[8M?,LE]GMnUjr1(%8br9,;=@XjV;B-d)OoDeWuF*P;<(q6iOpH"*Z50f@9(GFHI>_@io#*12"s+/5=t\Im*4QohL'&Bm8^hA2!o`N#+bS5rGimqQ0gZr%pZ>u4k^.%7T4"*NT5:R_+DuR2[J#'qh](gIF`gCMOuK_pkIHuT:XIJ)!io7,^0ONYE2[8uBiXtfm\0F;I_YnLkq)7A&I#>2%LUCh%8l>Oj-%*9`!%@^qWR&V>ktDN%#A]S)`J7eG+3=9OiS(a=&/"S4\``?NJ2quTpkt4#rS!>*\]a.PT;VMWgcn>WcV1hKRj:jmf&JF7%+VA6ff0-QkC$guSrFc0*nm\T(;3[pZ`82[WiF\ai5sAhY84YK]kjlBSctp(N&9p-W\rH0n28j;#IS$#X:tVNli-p\*k^f]$5PA49%Y5&q']feTG&+Jmpl3f_Lk<Aj"+bbAbWOY2[$:qS<5CQYfIMl&0Oj?:<Idu.[*ITUC_CJsdqh+^kn!AK0`;<9C*VhhVo8C@I2-pJ$%i7p!c0WlK_Vq!.]P4Zoc51R!$9^3gT%h?L4ELelIC=[Y?6tl#kq/`dFZ7'*;Xt(e$+Bf2[G--_<=,gNDT6ai>]\.a9Bkc0X,G(Zu%C.BQ;?TbK6bt7Fb4q7lqcDW^9UBK8@M"%YG@!hc%DcVkX&&7;Tro(_<>.gq0gl<J:gusn_++E]6]jLT?554jMi-ghs+5)if3Q##d%.G0Om?=6d&,]K]?^PQt\qZpRScPQoI-HA>QM>OLa6UQa>,`OC''$?VDekH-p`>\I#V&q]uNGripbnOY63GmJpBiWPgGqHM][hD.j%oe$C&GNg5L;*Z@gUY-7&Q(g3A7IK?g?d>hLYfq:(>mJH>*q+=Eb<>lM=#U)_.S"m?!@eWl^FnH_?(@&.ZH(3T:pg>4Ra$bAS181)%H#)a5;NZL;?9TtiSC"]=1cC'XQgL5rG!CS8RKMOie*##ah)A'[S[RM42^Ypj?DRPT^c>B*Ub,cuQ&sMq[1402rQpHd(2?<6o<K(s%8PL-,=!oHR)""tP,hJE%[NA[V[ensM[6.WZMOH?RiCK5u4`XC%/j?kmmXg/6f9a8\OF-/)GUR8Ve_^+\k%1Z%C8.\R_&ospEuUS7%g1),E?e)[g_DZ>n6#VISX9"afaX>usTjl\h=Do95?TBZ!01*+b?YhS76YO0,qVo*&&?PYZPt!nXF9dhg"@9)(;qqjE'HmYs#gfef%CIUQji+2tp;?kQ2cUHSip3J:T7'.]`QV=u-!^P)D%4=MXdCL#l^m(/plF+rG=D:a0@cLic[696s%1:1G"_Luqb;N=7r*;agZ";[&%B!n=7\/LWiIT^AWe]3,AVto`\e$\=#Xn`@2*WPCE=k]F3qI$[AO6qlho1H?-:C+VLr5k?E%E:8>>tJ@F,&b6HlmN1^f.UU(*4lXS%)LN]m:,:+&0.LD8ifd4Q\V4@u.YRZeU0ouZAQjW-?7Q4:H4_r);M%e>E5^QL@N/*3O(E+YM?*j]FO'rk's8?(5g4%t!7VHjcXhYe%!H:!D?3X"V+Hf\>jXe!L,%YXd>-Omm9Zb<>d]f,bmW-*Ad-GhV=\:)UMmb2n.tu:Ye&eQUS/-CDfU;VH(nEm:k)JlU:2;F!E)I2K%2(%@W=A1;OpEs]^-g:c<;XfAK.g65u^nHJ-^IsGL3\E8P@?Yl2ELa1mJP'q:,>42)8LDU^=f+SnK!lqZ[uG%8m`gi@=ts>Sd5Yd)%+Qnn^XURsj*QMFF>eEE958`4Hj-KAZ4V5'U*[%oB78OiXEOf<*;Thsd>)<X!es!&5`MI&UkO$+-*2[T-.3&shJ%oXZDt\1#o%rSd%'p&$4;H6tb[^!^lkR=UVkcVI$(L.Ju+m,t=D4^[pr(O(g,bT!iM<'sNCY0`arP!SB&uckVE3,*1XMrDXF.n!4J7P16QQtkKm^8#2%-V3KW]P"LTdlR9C7p#@L[WID-P[eO8o,RK048hT',q`+EYt4l"`U2_P`i.!V!$nHi#%JDXQD4'NGMst3'/S&$=4lWi&I9(2d)PX'%Kb.RRMp--V9l!(a->JjPeaDa^6g'Q>RF%jKM)Lrr?Y-<Bmr)NI&.2uRlV,BXL3fb.[XfB?:"r9%q2V<mVnNlbcrpViND:UpiQ>Xa%M:!K!OqhaFSc=dZ=cpi:qgS=sq_2`PTJ`jp[N;f85=P#b-r2?Hh(8Iqj;-O`QOW<5*Wu(g:BjRupq@PfA.#G1L/f?%=dD@E*6EN=%?qKurU[Q`rNW?Gom)e#BZ/p>fND:U5-T_>To*F(k<NKJTca0g_N;)6%4gDo_>5-5o<d^a*'F&/Jf2ncPZsVPO;cA9)O5"$C@97j0%8G?^anfD%b!G\^b.'7VYRg]XSii\#Y%uk@D!(Oi^-uf7?@[&Qaj&)_V"1=E-4^dIK+aL_'?)OibmT9QaKV.B@maj/[ggHQV88'SE%`Bl&mlCKTl@X.834HhXP6)&S-h=od;FT"atj7h;-Eqe7L8(P8DhlQW*p7!d$`XZ_r2DefPDc/Ufr*.eUk2\hsW7CQu,!Ng&)J)H*%(22R6WDYbW>6YVb[]D=l9Q5E]9l;2+c*n(TY@_pk5.<c<5#P,Y%GJnc4R)Me7Q.oG''dbuNm[fao5K2Sm<AuV[Nk[-2+@H>m4(5=%H>F=3&79IbCMbB"27uN.RT#DOqeTQgpXREtY\jpug&.>%;Rs0#RN')Q^KGUnIl+=`1YUU64d;;QD5A_NZ)MP!VQE>^CEE.:-3W>0%RDXT9&St&o*"niCgE`)<O0n;E^tS7W]4rC$kW1ojp9hfOOQ95UR<NHtaf;:pc#f]AFYmd1Qq93lpOU7u(MTU-6da&OjL+WQAU5K7%Y'<DGDJnTes6i?K%C(RbXu4rbZ%RV%^?K?o4TSQO`GEoF!@%q=>P$m`Qa;mM\N@+]WacLFFmeUcDTbUj=='o]2.2HbRK,E-3N)P$%!Ri=p-fN.h/1E$HcTC9+"C'?9M2Y7@Kf/(:_cF&tA(BhMq`M<,!U#*0@N)^WMF+HoVaWpGfB+ag)oT=bY475N),E.m]loS'A`^3_%B*9J7IHHP53S]TPgUjq2\_#p*DRg.+&<=1GANHuUgnndY+<^oo/:Q>W"p)>_eY[e*<qFTXf324`NR@4-es`PYRTe$&[cDYieVf<0%pq-TLKsF7X(jh;U7Lo`sJJHe?*:aJ.J[bT/>ESnAEgG89ZS&,haI/C?CDD>W'WoPMf4Atg73-]GlhD0pB1KZ,2o9JN`O4Gd%BBWK%,Brg`(q!2l/'gtW\:dJ0l*9at!T^k5NIo+4Tc8%3\q$9Ln`'bb4HIsfakhci$M*r5FEp\/3D3lNfC`u[8k1>0VN3j*D/A=<2dQ/8%Y/`n)gWBU'2BWrc6K&#h!LQL?$@sB2<83n,7_&(DC"EI7Pm]glP-EHZO<)0p!rOKOZ3\g=o_%G4^Q<(.7A]6DQOT[H?r:Wa&)6*H%:t_k83So]KeWL]$79#/Zbmj6@%n)4XDCQktV)#<on_W1G_GoP.9H]n/o#Abd!ltff_Xqk^,jEjVM[:)(SAs#r+462&4bY%LL;\YR%FT?.?V.TATC)U<"WkRmIdT@.a9Sf*qH_n!!apY'L0nF39on<p4juf/;&Agh6CZgGSNCV7$4\@3.Bf&ii<"8,2]LEE^@j@<GN091.%,kq%a-TeCoXa3]hT::KjD`1^09q9'cgFZ*9V40M("0)H`\f=BLHOkue-,W*E;\'#;9Y5r\9[b;=NUZf_&A:'EL3b=L&]r.ZN&J;3%p6!@c\g=3$PCep#!7"F:,6V+81I6_?ON*FD.8:Hf`YaQZXt>]N,?%RJ<nnojMFOJj$D.gc,]ac6,+pZ3,\QG9$X]>acRZI:HBCta%/4u8Q*&abDTnYTaNIu5XQ<L_5@'L'Y?;>i'_A)t^QkQtV<6%VdUh%rR6Zn8[,*(8p+?R7m!pRutgjDac7:e(/&932;?EiBJ3.RD^%4:'bRRRumD=ZV/>7adpTc<uc)7LIbKZXp4VK_t?pq^5n%ZVM.0aY_G!hEREkAn=`'HtY>RZ`C36^UI:M;cNB!_:2!;KGQC(LC!J8%;:ZmNJX6pGRIo-7GgBKXg<IRNG)l_?SWVUJ2&OCUi!.MQ2o7Db`$!\3HK-^0Cq82mloATB9C?P82BT/SS=TB^*In4nO)p_%k2D_a%Bnu"L"l2JJ(Q$ITOQ42nQ0AqJm\*S:N=Cio1g)FLTbn"#A>Mj5l<JbhRGka#_A;\ID.BA,_@/K"1/@EA;Ar$%9>Ch1%@Ms/Cm5%Q%2+C@SaY?Tj?MEfV@^^e9.7T)+X:NZt2/.VE35s@0*6Zm9#-Sf>)Ta&N!4dV//fM*WV-@XLD\Z;i#*18jH!R+56;,XN;Q[lcTh=3d%8Y(CN1XT'hA>'RWJ>IKVV1it&6oBCr2^;#(QHOdNRSF)[V*!ug#8m?iWFO]3k@5YB"Z@KHU.[QNAmb'BQ8^&*3sO!rINRTKW-pU.%&/%J+;C%j-gl5%?nbrU8E+LGc$.%RZO2MggXt"j.7I=#.q7@@RH$Bug3BGNL=8OGIfqm)qI[K)FG@C,?(#99k\8;RbKXUd>i\;kF%`4.d[m/4c9.C-OYAmlEo-,5-N#XR-F2^HbdG%2nlPlu1nAK<!%%6O8Tg9qkK[g6VG"ePOe(_4/agh-u2oYE@<CWOWR\<I=HpW#+.%U^Un>EV:I9Unfu+Y%)YB,6Y(8a/D8MHjsF%`+5mb@1DS+9=M7u1A'Hg5IOo(,s1o[5RFoT?:Qt..'?3l[s^i[-oe/'mcAQrk?p)4%#t=&,f"-G9Ot4^Kgl7+=2^<C*nrh7KI"EuL_W;ZtXY[<a:/B>=&Bln<"7k%rl:mM)*%Gl=:/-CC&*"^'De]uSP3f6If%X:SR8t\k%!.up,N'7H);sAmV`Ui8TI/i]_<&0K0f5,#0BfTo\R_ZYce7*`hT<#IQ?$k#,;C=1pG1d(>#0/!l@K@XJAlNY[Q_mGnqoZG5(%*Do%]oAunbIZC5OXGX+@_[`a@LU@WkKti3"*)k$emO5QEP;+^E]+B,GrZo!FFbNVm8?X$M>2\an%KH*eN8mIOA&\n.Zh:+6unukRV\^_%SD@1VdSu#OZZ4P`RW#*m*kdUV\o4FJoXQu\((#[XSB"CZ02LuE&JDb8Z9EfBpuuO7oNN$u/hWcOUA?^uT_HMJ0i%):<UZ+'L44r&%=D0A2:0RM!.TbA]6-t^tK7[J)(-!(.L*5!R0%s,nNjdK%0^g+rQtP<JmKrW?f.#nV"KM[rq76/^:s#8"h+7X6T<dlUfa9&BkBN3.%Tb%Ut`Npj+AW>6GJ3IRcefE^.TIRHMkWhrd..KduQF=Y1Vhkc@n7"BsP@5-9js=(U\;dk\Oe9:B+J1S1XX+c:;ipKk,"9Jni;ETP%b^LA,-Y;I+R7:;pQ-&Hk:t5nZO;hHPCW8a^ClqH`Ujd=Z]?Q#l++B&<dXHTM1+&sp]b7kd0H^4^l]IAIK=3hD^fYPs,(jb+SW#+n%;1*fe%]`38@,>\.\Mf=^^HAf."WHUj"`.W4rfjhbm$ja7$1#@.A/c<KRYAI4k_c`p/^*[h<fV6%,mI:iG<P(UJqnLsD/hA9LU;`X%b8"IKWeKmUnN*,GA#Zq2UM?'cp#t4q&"S5ag0Q#Z/*Km.o(,fWD,>H!!THRjA>&*@aZg\"3@+l@0b`t.@"`b5*"_g\pb'_H4/!SR%6W`fiN!+8C:?KCdFITN.\C,eK2?N(d9c`Q7$_kL@#Nf72^K%7<T=]H-+;$9KMd39e%>XVWB@aZp/SHCVknS^D>s&P2N$J**a<+)/%Mlh$^J@7?kPTb)fDs=t"0smmccG&b15t@7)d*tNe[C*)8O.$,_ZOuobTs7G,)/b[fBKNmRhna1fcRpe8BLYdZ&%+EZ?u"r,kP"d\%<SQ;6#;D:4Wde*ng(6lo&iPhn-(u\)Ks6i2fc<n[\9d"4,+.#HX,?bqJO"?6<R3f1aKadZ4':jQ[AZ]YOR%dti%APERA48Zij2kR%4u-mIfj]Zqe!0Q*oA?0EaDgq#bW)n)1(ZPfl?=l$%NSF4+$?hXXb5O4]Zc1Zl:;9I"UWLBkjPr!3(m*cL(p'fhq6j,Y#Y-p+dPC!%lAJk4N.Y7$lu&0$[j(0"OQs_Fa$@Dq+j]hgWHAB$a,ol?SR#W5FfmYgi:/oghB5%2BUL6)hT>2a1XA'><Wike*QQp3%KI\Iq[#DP%fnBFrB"Zq+9QbPhgDtlqH;8p^ag'qD3j8_dA?)CXM2.8/adIdLa0AMKP=d_[%F8!D&blma!(u'$M;jdd_kLk\.I_dloB!f$Cd-,N%('LQn4ZVY!.#_VZZ1$A:e.FW\YXN?uYU[dOL'tVBqr13?!`Zb_p4@8LVp\682IZdHa7ReT4if[O,^O_6iS1h\Anpt^YfsYBR9JuM%ZN-JTMc.@8+U.*ZR-En(&gGdQ9QT9<=Hj8!OfcPpVu[f\$3q@%&kq>M7!rKcs88O;r.PboHo%7?j629nGiUfZs+R!";X5[BFL8?i%A3I":(D9Ymotj"cZtIrDD?^/>/:N(QZ=POJn:N[:Q;C'j)ctr[c,^[:3DA1BXFQWH^,UcWm><r4(WCC-kB">Vo(r(U8bN#4)6spY%"mTZ8k!+X1Nk-!&^,,SQ4-OA&e?Gte5\T@f:=&lK_qAWcq$gdP8k#Yf15V%";pie-M6<P3*-N2Yft4:Y&]o$6,c+2pj__"GV;TtN%biiN/LA/ZnneFE?7:nU,lpF8QJ+oc3-g<@,pbSCQ-:2gAG"Gt<En:4t%Y%e&96d-)Z.b7kl;Lj%WCHN!+A\_K;$2[=2la[S+nP%F%GL>qr?%Sag.@j>f+_\SL;BUMgYk-JiiaF@`k9ndfQtEUs^C=e\T.K@\G=Qa.Gahk=p:&@V0k)P3\!sS>2N/sHR2c&^QA$M<Cd@e4%VIRU?-I/k<]Tr=m?B>OWAE_9[H7c3H+]"SejJY</bZR]H-NpJP<%<$,;#l7Ii_fLUW#h4]g;l\\<6;>@nE^1*"Y+M7k$]!]Bpdm_%<^p)/MtD"Lq0HPnOtnZ`rW\Ic/4OA?VAbOc13lu^Vr$_MNiT$\A!hg^lQN$?L7`gm*WqQBV'"s=A(>2Wb#SCJl1!/sl36f=g4b0Y%q3+9h-WVspYoLB1rV;.h,Y]jPHM_`>QFJ#`B*#LIIOlZN9a@6t/&:iC.t[h$A`;_XfLCH!p#K$2H?GUr0TF9#!$3.<1DU@q<Y`sN%>C50+!c7[>4K+hn:mk9E>B$3aWh=f@bK=E'I$Q;4#rqf*+(_=mHImp;[OO-W)Yu7M5biLh3tb%;STA?^5iEiI_<Dj6<oku2oj'":%Fsb+XP)O[,hMk62RFL87#;\$7#&iDjCqSq,%kHNX;pJRa<,>X!OQ9cjH6ED!ijPD[%#l-#fObI#N&H$W2;"pB+2?&gAf*=DKL`YI%%QVjqbV7kdXi&Cq7i:J$Ht?c7A_P9)b6k@ISrTL@L,Yd$mCX;l-[k[/%V&>Pc'm:<TCGifg/]7m)"u^,XA_!kXR]gcin!?cgqu8p%*Mqs>/$0JahoUuG*jd,9;5];!ArJ"?83gtWm#!i+)$ssK`X3?j@ahi6no@8,fP=&E@$3,]+Ie<&SLMS)&$;0!f$$cW:r+[Q;qBVW%VJB%fS)#Ta,K=78(:I)()0&Z9$s6^LULUP4Y-EC/,I"Do+V8D4a$CR[G'[2fal?.N.[LQKJJr@4q0$q(<J&Gl.0_nd\SKRe,]opO%lMLSBWVn`T,qHNk[B3T[b`<sKOS,__"k"a3ES4gV1ho3NQi)T8F!Vm.EJSn"Ve,t5^&3RT<ZDF7h<f)=PB.Fk[O($c-An7teQdc.%^PLV]M.#!8N1kYh]C;6&oIl9m<`a=je-f,P@k%9pMul"0Xo)SM8qtQicO8LQQB]eQk#.&T\!?m3qSgN5V];GsE9Y:_P\mqu<n(\j%/0,Ni)gQU:XoPoR)+ImfT,f0(>?*\P8qOs.Q<jEH+!92E-kR6Zk:Q8`&QlMC$@eAeP#J&\:ZP]`'/$btW)IgBNZbn`mrF5?VVpf8%Y&:@PFK,5`Ah@<ng%^a.CkKX2&4`6><tK&d[US@0i<:&XcT6,q@H*ao_\fom1"l9rZ1U-hBU"WbB(3Qab$*+sYCie1!:5'o]"Y[>%"n=#:eQ*MBMEF2</'KcaZaNj+@;_D5?odcCnb*gL0233*N=@.;C2Q1fM9FI*^U'uIVEm5NIMWi.-Y]kQ"n8^eg2@'RqV-UZCsGi8%B;==,e'>U4FQrCA2;gqi/sUk:%?G[70B:_2&2RQ#nNp1g-sZM;]16STJ/!*?9p`b?&-V+T3mfNR4'/Lg2.Ds_T?GF;\;GKMqEC<l%r;=oJ2#t#.Zs)-C1]Vs;XbrS._4l2#`BYhYe-0n[hdqGkR\*Xh9G#V&Eh[:t6*kZ;mus)-ik]2*YAAnn=c*aNC&m#fZu-SqNo*nT%</?`a4BJ7QO6tOreIhAan4)/K)W]Pr*nn&^W:)P>1!`H!M39ijRhN!@StlS:=fhU%9]Ooind"D?AAr@;%JGZ=.6"&B\40FIdA6fj%P/nlO4f&S+Zbc9s*_[VX,s^X#9[h%[rZSF9<f!)]V45](46tFfe`:LWRrVG#c_`*cs(Fb5F43&CAn=>mgS+S(&/nmIWh+"(c$e78%eD?5hk:F)sk83#lDqBHEhRe/anTgSLcg:`GWeA.DY`^%lD,fs(jPP9t;mD<T3%fK!e61G9:`A4Kqn!]<iK@/#p.$C/]M)8rn`e3R%F2[4%R\R_E2HZ;lB<ujNnmT5A5C,=>5$XXp(1'4QQQj+FhnH\opKpKNhHnVtO`;K-@FBBArJbmYm3THNF$-Yt@I\U!qPR!PQ6l\'%KOsRcmq>T]+Kgte:[!8)V7FcqM0FY32\\tF5fa:A/@RI>H6]`7o`qpFD9l3GhN)]mBJUeMpR,m>(N3n0Xq>C670_:(MVh-P\A&tG%0A_.0VpF*tT6\F%YgqY&\:pdT_n:CV4]d%fhRgD7p,p6jB6@&bE055d7b*73)XU;g!5^@q<I=3D+)DiQcODfPioGN1NFM_E<4.I_%qWti;N&&qU6K8MQMCD2+STjgbiM(<PEH`])5G'":"?k8(aG.N?Zj3^]Up[h:GK7?S4XFpt,hgPc%c#RVGs?98Ci:QP<OTF^D<;(r%21'@j`9dk;453]!`>FhM^Sd]NNusr_:YChObXSsQB4c\FAi<IS-ft]Cm+=%H),0.s\Zq7I'W@]Ta<.k!luWND-G3$_2YmiSDs0^J%W228Yp1<.EW7c2)dJX1'@L/VQC2O@F.iWi1\d=3`[_,T4aWn+SS%c&/S<koVOgb*kGis&q$6BfRh"SG3>OSLoNbk3)V4B>tQ&e+]%\>ikRZQ?[i7bVV<g!t$R*nd]=3+ES.S@l3*IF`@=0lABY2eS5@K=6)CUOW1+`kU\gcs>MD%'1gX"=!5LjY+Cr8S$,hi^o[\QCR/%%Q\8sO<*2:`Ri=P)1?Kg6=AJjZ90t`'[MH-(c^TmVG3ZQ?DHm]?M7Ea3YQ4W#et'lm\jA/4$5c[mOKBmmC`a-?H"?LG^)^qNDht>W%[Zb)8;^_Hs8uB_[0h5H[pN,K+YAX9M=k@E7&k]:>]!f>T+3uEbYjaeW5#/rW@E#lKAjYc7?ABDt;5\.]<S%od*n]dC@]4!=$$ts>%H4<0X_(Km/l:0]TFh8m%.Na;YmAP;8#rAa'6U-4#,f#k=Z3<pZCa-M[^UU?4.nlks4.(bY:cC10<<KO7k5>p*EeC,95rlmHdc,"E%<KDm\4NVU]OQM8]2R`7WIp:VIEV.KH`_+,1)!lm`EF.Za>P;S&#9>ZTAS;`\JiL1i*K[Oq7JiM7$Hb<6NStMp1b$c"3OsN+/ulgR%.BnsNj86DYF1r#4:ogAOL<^LA;p:XtTMo/kN?gZXeI<(n+Xd^a/Lmt@+4PiXpt4aqPJ!ULP];sbelc;ko_TWQ!'!FPJ88)Ll4?I2%=\DU0UT(&ga&KsuRTWmp8gs6CR7V7dV;?1;VNqo=;&2et25BQ92PdiO<u@u54Y'S^.P/`lY"@GPi'"*,G,;L6Lf?pu^W$SjW.<u.%6i?%$Aj9N8240@"1"L+[n#*43W19YL+DVp2jWu\H0X?(D#UjX.%'j<B4_:SA3O@AiB&ESE<haSG(8aDDf.cWY$qq4nA@;F__bFRA%DG`5L'2`-X;OP2!,kkHr*F%plMN@,WH`rbe.[%:6R"Da<F4,!_fETu!k(S>V?IdkCXCCb1'<J%&5A,F^eZ'9//8I21=+hN]";0^+%L2$%@HhCP,EEh&:(ep!d2!1AnqGspDN-ef>^W$sHior@=n*-Tb[E\*K?)*B:pjsRUR7CtfU+pA'BU%cB]l7Z%2!^W"FoOU/Hoe?9%'._E`h5@AspAkgJ#qh4ud:2_-<C8D>%]Xo+F&_!![aiY[Uu=?(\<DM#NOos"4c;1-:e:]gJR5WDrG8R&kYYHkUD$H5FDnVK%;EMf%^ctJhpF@c3H`2P^mcaXca!aY3e*kI_;Gl49Zfu]khDle<CaK/`@396'/WhW[U[SW6[:e>9<$u?/,@B3Q3!>`0]IklM88(_3gHGHd%BKF7`8Nm1J@krRS)gQ8oG9/7fff6.>hm4P3I!_o+%mU^mc+I\cKg5oCn^]S"a:"VgNDiZ+@50X,:lpD\;Yl-F+$B3RqW>!%[:j:6%]7]AI=J,#%:8MZVf[rSTZ;nZDO<&iPk4I<UOZTAVcM+r'eSXBbPGb=//V0d"Opn%bW=jlRE<??N&AWB[:'O`L#r7n$O<=/d*lh$D%bX05nfS`PN90tO#[%<VT[)[#2_c&jY*.@/ch534>]9mUG[+<0=]DH[_d/>'QJ=ie_qq>!32`J^&HlR]2%Y`;np7S&\"#tj@&T!%(%3_a6g'2Xq"Vq^g(oei_@iT%#/3<aaP`1X2YWr+^k9k.-\>Odi.ZN2T;@2,&e4%46*1A5idSE:WD1>4SqT01\okq@=&hV7=)/3nuN%^'ltIphA(hIsgfd1^"kRQF'@Rpbl8F&oDJdN*o8hM8C$Dr7k!FMHV%NJhuBV`N17a%a_4NgT!e2i$>^@OGRQ00q>iGbaU;8+g2!-%(cJ.:i2WHp(khW.H0GeiA1fs-i=1,]=7Z-YdZZ#1Qr:VS_Xnj15eCs)'$.A8SX6\6>^r^3=hPKRO\]:2KkC3A/gO=RO1#hLH;\$;%CBL[),X;t5)Q!sF1V-#eV_3#s!5::<O_)XK4B%GXRfI0$.EX$Q@a)JY0ukB<g@]8VgO-@+jdtAdIaq[NgO*1h=$3WpNoMKL@N-MC%n+)#%EjC5,>)FjFQJu:%ah;;8)jWpND3Rk;7_@b53pQ;;RW.DE)2BFD87@GRJXj1"A>m&G25<po&-`i^;a,K*2$&TZ?E$2$A&=bA%k$?eQ,[o!/r+0MtIgGPGT'U$hp]m!5N24$;Y;L98psV"&iH;#/K]17WKF"NK^*7mngLVZTkF[bcr\h(-2f%-mS*_<cOX#A+PZa)a%(,$4kPK+qA]qc!QT?NqDetuen46tHObs@?^Ve5n6QX":iW6j*hgU+mWbQljG9q&rhd<9\2_(d/XHDm7/QmXnh*[[k$Ib@?,m<4Ih%[>ql5;USQFZQtht/Xaq"W`]GZdWAU6n4aMjg=H1C/\J[GH:=g<&l#]UpQfR-6kd)J3rH6p1!keY3I\?l?L0`1Ck)9JZW.,sW%(us%m^^cY`*^h2c'q:P^\=)fo!f.fVs:o_4m^)Xfqfudf.lGd"nFSGhk=&U/nqNN8)UFqVj4=A$p?''p3cbCIgEZl8""Q,&B'5E4-(A&%(n["VGY?1ihZ_$ak)5\VqkC2qkQo(jl#>AI&at6f,U7"`oT^c+U=F^b+q6Ncofe_4s/dR^GOGsjZ&a#jf)=oNCiIJ8>n'oOK3Fm7%^q4>HJGPd@"*8mAFmlpT0bXjtM]D(f)0Q$Kja2?\CdYo/3qin124[1bf4E(s"+qiY6=\Esb&:$*D11Jri["glc,?9ZRFSrepaOO@%cBAbmpH9<r0(QsL?';4Ue<c!EP/FBD++Vf3:,4Ap7WhsM8PI^Z`t%G%/[mGjGm]e>h2]*Y8%rQ,g_]]rpH/rYhKE*DgV:%cp%AcC%r+>G-DX5i`oWmW8_.RBR7rHl)`_FaJ-AW^3*dI+(S2mga_ICQ<-T>hBb*,\*TSX:ePED>^VZKhDgrJ^q['=h09J)]o*&VlC7r0u_%p3(`F4O-!dgbV?79D&DJ_"[NmeAq:&j%;1'\!$,+U`2,Ef]IGibg\2qe%^]Ui)<.&\ZPKbk]T96Ff*bV9j0F?N>-B8&e1[[SLjRN%q(]+u$q88Tj5V?*)7,GB^U^sHhs;_iF*#eiCRV$mj[!1mh]!lCZ(J8ZZ2q-gf=7ugQF+N,8aElNYd2,j;M2Od3\`$BSL:&*XY,bG%8o#Jn,G%8u-r%6.Q=DD`&Z28bW+s7u$rAN$+^g]reXY<jqjkQj\KqIQ1r[`GV$W;@==2+6HK9dbSW@=,;a"Jk-qU/E]DH@chWM1=%16,\kRrtH*]sM+88\s\`emg:P7+K1fNuOB>r-!;RNXX@lS."8%#4oW"n\47$3IOjnXgm]CpU59[C$M*>T^(nTS]o@+1X=]*RA22$%Pu29\2n)XS<lXFH'f/66MJ?:NOg^Eq[3nI#bAF+ojdCbqaCmGJU;)G"a."Z]EhhKtVf/m.0n)9ta13hu^1[2M\Y#E;reSQJXnu9B%T_K</r@#1AXmDB":]0OBAZ^=%L<T&0-gmfg#qG=(koh'E_KHf,9uY8Hc2=g;$r(TG=e<h>G4E1<DBLmSa"$0U2LFR&h3<CaX)D%D%$d?e;Hd_WYm#lTMS#"SrR7)*G]$=_F-@tqE28UtK+`1Nr@;Q>'CQ5)%[S%P\Z-DOKeg13'0nLC(=cr=7lml'IQd0PQ;5()#Pd<$V%-"-cM>@ot!k:>li$__-ph33%D*qg]%@raZ-g-nn*.[O?ZG$Dq=F-8qBWt(cXp<H\HKgLub?kiaI<p8\,!3)t8*'1%6h)tUgU6^7l%U7fct*72Fs?kq;7<EUG-/(mPU1T9^r0@rc&.Y=#T=@)!6ljmLp?ht`7aqMeC=@N,IcCP'IBf'D1q%PJQ:OY\fL&TGugPs9bRHM-5%iKKi1Lg1#`gK(AZZc<I"Mk@]5WO.[ECYJKi%7\'I.Ok#f.aNkkqXc:Qeoj@EZ=LGhQCJ5+Qa7U2/d>H'Go=2d8SFL(P)F(R7ht9a%rq&8%i[j:m:H`$=lEorDD,nU?I?9^3`I85?IS<=AX&stt7o]^ZOeBrN5?jZ6au:QgXeMSj=,j"%_@MWj8ITVp]sLr*]=`O9#F=^B%U`[--aKifI%-7Ode$sPQEE.lcN[N4[CbiQ_aD4P_d$eu(iNSZgm&He)pU+Ue2NhPf9p$`;ps$`LLiZHY\k0,ZD386hD4G+ol4g8B%BECq)kiA$Tc^Els@'6YsJQg7G#1p+.201oC)t:G&j>fS:9(.@/0:P0B19i8e7B>Xip8(tm@WNWh5'ZHQ1fVhQ3KmgHP\H.8i[]L[%>H]L,`ibZ.:U:O#UE;(C/_^Wm9pY@kOPP64Q9@A@F\aVK?XDiY,`Y"M,AA-#-\q6okIpB_qQPjME1NGB+EA=g=_?!CGG%_'DnkgJ%b]T>HcSjlgD3oWm8De37@4,3)j/PO.n,tV@(>._\&\8E!`IhVajb)>+O@mjs_<W<#"gCI.jB$*$K5a<B'LpS&\(=77!_)/PQdtml%9J98*E;Q'/`AIM,K>^L#./N0fS3bpbPe+%B\6r:eKEjuUCH%k&)V7po6;RSQA\=]q#.-$\8<(1,-!Tb,Q\JPYm'^rI8]8Cf8!TAW%ZT.6UWYc)`iIAfV/>j68LRH#AcL(]8YVRS;rEebcpIr8#8)$"D\Sjah9);!L_ViW(ZlNp<Trk*>Q$92A,aL?"<:Mfu8],./5Bl[`%UTrg(6YaP-WF=UAfusKR8*TilT@uarXl[T##+]"S^@jSRE<a"VpAEVh4*@%.n/)r%r]G!8FV`>Ph[<]ec9)[>CYI^/`IJSU%rARA%6^h]u2>WC0*aOY@[C,>!mjV(R\JjIM(hb4e*tr!#h).^^=^*V]adK^<PFJ.3-iX's\^".4ZgSU[g#1<]*/tkPp)GtBEH9$S`l9Y3%fhQ_1eO%V$H>^;7JVp(m&ne#\dG,$=\Y553N4fl+pJ>gT:&9Wh[S=+C<InRtEkB21')RWN1dQ8HKEga52OTTUX7*NX,ed^tJYnjK%9nbIuc^;E7O/=..@?1dS#S@Z1)9*^W@6XT125=XgC(iAS1;&%k;)?YdoW3YG0_?c`%L)1#W@2#!6$K^r;'F9K1Rk\9(nn3l=.Y0/%7P_i-Xs*E%U`=-#WYU]]-n52.RnSQW-*$AMkMBt/)G@4[!(!UU$U%mCA4TcH(=J(pcBiip&!KDf!L1p5b:5[afi2M$=sOOtfHPKN%_oGgD$''E0*/Sdi7uihb_&4K$SN0Y#gY.X+QX&h1O92tbAp=cfcFNPW,8]iHb02eDc)<Hhg5]*Ai.FmX"`HN2>+nPJ]P9=+\)=tN%b!k7sMII2PKe`0t4'Mb62eH[rpG*!:5$+L%_Z%r=(cfO9YCrge:_a?m4jqcID04gA>JQL%[$VK^Js.(L+skS;(2>3`%oQS\O_Z@V%hH-MSoXu9bcL/1LXI)9-03\][Yt3eb:p+>`((2IUO>KKd!,GG7(Si3Z'R4.>qnuLU)phc3LB4(@&Pub8)W`B5V!b2^?HuYe<<r]/%E&HZc+Wrd"9RHtSR3ngUCsBTI+;Nar[;Cq=jJ_eEOfp][&R[+QJ:R3b_"#[[Rr5BA/ifKF2'/_,k8k]iQ9_7SX;t7d]:u[b2k%0I%gs!je1aH\0NhhmVOd>F"<B7]N_-M^[2*D&"gtKcYr.s;q7m<ZXpBMd_h=iF0a^e\-[jVJ,^t)KV8[dr9n'C@;^ghe>4lp;Lni[&=%_i3.;_Z,]W_oto9YtqM8-$AbVUmhta;18>gF91%DIn'Xn>g`c:\,eq\KKc]^QQUXk%rqn!OhW@cjH,Y3&p*<B/T.`1PZl?4=C,e,%b,KEEdb?g&S5NXsB8)#-GtV9*=ugRW7>!H"Eb&CE">uXn42L-!GLi+)P3feCI,(E6.)?qXjLGF=7rCTLWPV_&6M#-.E0se7J6G:D%pF$?U>F=2QCq2bOk3J=`/^jE[Q%[Rg=$n+;/B$;mP/-ba8-]lG.GYK2UO%`Y%V8*s#aOjc?KdHGh'CtRl\0rT]W#BA4D>"D(3s!,%N_Y/.aH'V$YIGL;p.\N[<!3f_`3$ru(?]*j?0RD?2-Y-q$R(g!Kp-:46=J4r]DU?+G,LpDIY5K)EgW.rmB>OH[;kBMgKu%`6m&pF%(4VFu%!_/Th((uFGPuQKIur.a9[[,;hd.D[ZRPuu^&ZDhG^1:RH;c.P&dF:JP]U!WAEJ@4dg3ZpY/6*Li_FAO^M0;c(8KI;^7Sc*%lnG+ha%;Km5h9&+"Gk]=Z'k\"#Pj#@?X;]QC`nIMD811`E>pQ,950_UfnrCQgN&>pcK-+J78pnSiUK5=rR)Di2d)_q9f#T5cUGiR%_EIknaklX196N/F?23Zue[r_!bZUp-m+p;27jbDVE3Es]X%_!Le'2F@li`O$"5(E"5<+k53ZdQk(>BYeY3S5rB1fN)\CTX"AaeZN%h6-/4Y4&^(a=d)so0,l!rSH[](piZA..N0O<H9.>Lm`HTK^j+R:9rIL4OJ,2p@YWdS&8%tb8k"'r%GgUDu]8*q"EVElYh:NqqqDF%J,\?c^]0(=qLAM>li6h9hgb\)[m0iU5Q16ss7W)brn%2Gs8MES^]!3-r:StHp?f'`oM>MbYCHN&^\rYcs7uALJ,e9<r9HTIrGUTm%ja[4"rt!<=PW\k>J,0]Unc/IQIfm@_rTX~>%AI9_PrivateDataEnd